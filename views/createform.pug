extends layout.pug

block body
    .w3-main#main(style='margin-left:250px; margin-top:100px; margin-bottom:50px;')
        .w3-row.w3-card.w3-container.w3-white.w3-margin
            h4.w3-bold Create Form
            input#formName.w3-col.s6.w3-input.w3-margin(placeholder="Type Form Name [Required]" type='text' name='formName' required='')
            input#formControlNumber.w3-col.s6.w3-input.w3-margin(placeholder="Type Form Control Number [Required]" type='text' name='formControlNumber' required='')
            hr.w3-clear
            p.w3-center
            .w3-row.w3-container
                .grid-container.w3-light-grey
                    //.grid-item
                        label(for='createPageMargin') Page Margin:
                        select#createPageMargin(onchange='createPageMargin()')
                            option(value='narrow') Narrow
                            option(value='normal') Normal
                            option(value='moderate') Moderate
                    .grid-item
                        label(for='modifyOrientation') Orientation:
                        select#modifyOrientation(onchange='modifyOrientation()')
                            option(value='portrait') Portrait
                            option(value='landscape') Landscape

                    .grid-item
                        label(for='fontSizeSelect') Font Size:
                        select#fontSizeSelect(onchange='changeFontSize()')
                            // Generate font size options using JavaScript
                            script.
                                for (let i = 1; i <= 100; i++) {
                                    document.write(`<option value="${i}">${i}</option>`);
                                }
                    .grid-item.borderless
                    .grid-item
                        label(for='colorSelect') Select Text Color:
                        select#colorSelect(onchange='changeTextColor()')
                            option(value='black') Black
                            option(value='white') White
                            option(value='red') Red
                            option(value='blue') Blue
                            option(value='grey') Grey
                    .grid-item.borderless
                    .grid-item
                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignLeft()')
                            i.fa.fa-align-left.icon-light
                    .grid-item
                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignCenter()')
                            i.fa.fa-align-center.icon-light
                    .grid-item
                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignRight()')
                            i.fa.fa-align-right.icon-light
                    .grid-item
                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignJustify()')
                            i.fa.fa-align-justify.icon-light
                    .grid-item.borderless
                    .grid-item
                        button.w3-button.w3-bold.w3-grey(onclick='saveForm()')
                            | Save Form
                    .grid-item.borderless

            .w3-row.w3-container
                .w3-twothird.w3-container
                    .paperContainer
                        #form-content.pages
                            #page-1.drop-container

                .w3-third
                    .page-container.w3-container.w3-light-grey
                        //LEI -- REFER TO dragbar FOR FUTURE REVISIONS
                        include dragbar

    script(src='js/client.engine/htmlToJson.js')
    script.
        function saveForm() {
            //var formBody = document.getElementById('form-content').innerHTML;
            var formBody = document.getElementById('form-content');
            var formName = document.getElementById('formName').value;
            var formControlNumber = document.getElementById('formControlNumber').value;

            var inputFieldValuesJSON = [];
            formBody = elementToJson(formBody,inputFieldValuesJSON);

            getNewKeyID(formBody);

            if (formBody === null || formBody === "" || formName === null || formName === "" || formControlNumber === null || formControlNumber === "") {
                alert("Form Body, Form Name, or Form Control Number is empty!");
            } else {
                const data = {
                    name: formName,
                    formControlNumber: formControlNumber,
                    formContent: formBody,
                    formStatus: "Template"
                };

                $.ajax({
                    type: 'POST',
                    url: '/savecreatedform',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (data) {
                        if (data.success) {
                            window.location.href = '/';
                        } else if (data.status_code === 1) {
                            alert("Form name already exists. Proceed to view form templates to edit the form instead!");
                        } else {
                            alert("Error in AJAX function.");
                        }
                    },
                    error: function (error) {
                        console.error('AJAX error:', error);
                    }
                });
            }
        }


    script.
        // Not working, to be debugged
        function restrictCheckBoxSelection() {
        const checkboxes = document.querySelectorAll('input[name="academicStatus"]');
        console.log(checkboxes);
            console
          // Add a change event listener to each checkbox
                    checkboxes.forEach((checkbox) => {
                        checkbox.addEventListener('change', function () {
                            // Uncheck all other checkboxes in the group
                            checkboxes.forEach((otherCheckbox) => {
                                if (otherCheckbox !== this) {
                                    otherCheckbox.checked = false;
                                }
                            });
                        });
                    });
        }

        restrictCheckBoxSelection();



    link(rel='stylesheet' href='hnodettps://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
    link(rel='stylesheet' href='../css/w3css4.css')
    link(rel='stylesheet' href='../css/w3-theme.css')
    link(rel='stylesheet' href='../css/text_editor.css')
    link(rel='stylesheet' href='../css/create_form_style.css')

    script(src='https://code.jquery.com/jquery-1.12.4.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js')
    script(src='https://html2canvas.hertzen.com/dist/html2canvas.js')
    script(src='js/client.form/form_create_view_edit.js')

