.draggable-content
    .w3-row
        button.w3-row(onclick='goToCreateWidget()')
            | Create Widget
        hr
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('personalizedFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Personalized Widgets
        #personalizedFieldsContainer.w3-hide.w3-container
            hr
            #widgetDragBarContainer

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('headerFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Header Fields
        #headerFieldsContainer.w3-hide.w3-container

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('infoInputFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Information Input Fields
        #infoInputFieldsContainer.w3-hide.w3-container

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('widgetCheckBoxContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Check Box
        #widgetCheckBoxContainer.w3-hide.w3-container

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('groupedFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Grouped Fields
        #groupedFieldsContainer.w3-hide.w3-container

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('textFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Text Fields
        #textFieldsContainer.w3-hide.w3-container

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('signatureFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Upload Fields
        #signatureFieldsContainer.w3-hide.w3-container

    .w3-row
        button.w3-button.w3-block.w3-theme-dark.w3-left-align(onclick="toggleAccordion('tableFieldsContainer')")
            i.fa.fa-caret-square-o-down.fa-fw.w3-margin-right
            |  Table Fields
        #tableFieldsContainer.w3-hide.w3-container

script.
    var personalizedWidgets = !{JSON.stringify(currentPersonalizedWidgets)};
    var widgetDragBarContainer = document.getElementById('personalizedFieldsContainer');

    var widgetChild = "";

    if (personalizedWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < personalizedWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + personalizedWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + personalizedWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var headerWidgets = !{JSON.stringify(currentHeaderWidgets)};
    var widgetDragBarContainer = document.getElementById('headerFieldsContainer');

    var widgetChild = "";

    if (headerWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < headerWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + headerWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + headerWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var informationInputWidgets = !{JSON.stringify(currentInformationInputWidgets)};
    var widgetDragBarContainer = document.getElementById('infoInputFieldsContainer');

    var widgetChild = "";

    if (informationInputWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < informationInputWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + informationInputWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + informationInputWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var checkboxWidgets = !{JSON.stringify(currentCheckBoxWidgets)};
    var widgetDragBarContainer = document.getElementById('widgetCheckBoxContainer');

    var widgetChild = "";

    if (checkboxWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < checkboxWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + checkboxWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + checkboxWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var groupedWidgets = !{JSON.stringify(currentGroupedWidgets)};
    var widgetDragBarContainer = document.getElementById('groupedFieldsContainer');

    var widgetChild = "";

    if (groupedWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < groupedWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + groupedWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + groupedWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var textWidgets = !{JSON.stringify(currentTextWidgets)};
    var widgetDragBarContainer = document.getElementById('textFieldsContainer');

    var widgetChild = "";

    if (textWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < textWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + textWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + textWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var signatureWidgets = !{JSON.stringify(currentSignatureWidgets)};
    var widgetDragBarContainer = document.getElementById('signatureFieldsContainer');

    var widgetChild = "";

    if (signatureWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < signatureWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + signatureWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + signatureWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

script.
    var tableWidgets = !{JSON.stringify(currentTableWidgets)};
    var widgetDragBarContainer = document.getElementById('tableFieldsContainer');

    var widgetChild = "";

    if (tableWidgets.length == 0) {
        var tempElement = document.createElement('p');
        tempElement.textContent = "No header widgets.";
        widgetDragBarContainer.appendChild(tempElement);
    } else {
        for(i = 0; i < tableWidgets.length; i++){
            var tempElement = document.createElement('div');
            widgetChild = `<h4 class="w3-bold w3-padding-16 w3-center">` + tableWidgets[i].widget_name + `</h4>` +
             `<div class="w3-container box w3-row draggable" draggable="true">` + tableWidgets[i].widget_content + `</div>` +
             `<hr>`;
            tempElement.innerHTML = widgetChild;
            widgetDragBarContainer.appendChild(tempElement);
        }
    }

//-     function saveExistingWidgets() {
//-         const main = document.getElementById("main");
//-         const draggableContentElement = main.querySelector('.draggable-content');
//-         const draggableElements = draggableContentElement.querySelectorAll('[draggable="true"]');
//-         const savedWidgets = [];
//-
//-         draggableElements.forEach(main => {
//-             const parentElement = main.parentElement;
//-             var widgetCategory;
//-
//-             switch (parentElement.id) {
//-                 case 'personalizedFieldsContainer':
//-                     widgetCategory = 'Personalized';
//-                     break;
//-                 case 'headerFieldsContainer':
//-                     widgetCategory = 'Header';
//-                     break;
//-                 case 'infoInputFieldsContainer':
//-                     widgetCategory = 'Information';
//-                     break;
//-                 case 'widgetCheckBoxContainer':
//-                     widgetCategory = 'Checkbox';
//-                     break;
//-                 case 'groupedFieldsContainer':
//-                     widgetCategory = 'Grouped';
//-                     break;
//-                 case 'textFieldsContainer':
//-                     widgetCategory = 'Text';
//-                     break;
//-                 case 'signatureFieldsContainer':
//-                     widgetCategory = 'Signature';
//-                     break;
//-                 case 'tableFieldsContainer':
//-                     widgetCategory = 'Table';
//-                     break;
//-                 default:
//-                     widgetCategory = 'Unknown Widget Type';
//-             }
//-
//-                 // Extract the outerHTML of the element
//-                 const widgetContentHTML = main.outerHTML;
//-
//-                 const data = {
//-                     //name: widgetName, // Ensure you define widgetName appropriately
//-                     category: widgetCategory,
//-                     widgetContent: widgetContentHTML
//-                 };
//-                 savedWidgets.push(data);
//-
//-                 fetch('/savecreatedwidget', {
//-                     method: 'POST',
//-                     headers: {
//-                         'Content-Type': 'application/json'
//-                     },
//-                     body: JSON.stringify(data)
//-                 }).then(response => {
//-                     if (response.ok) {
//-                         return response.json();
//-                     } else {
//-                         throw new Error('Network response was not ok');
//-                     }
//-                 }).then(data => {
//-                     const success = data.success; // Assuming the response contains a 'success' property
//-                     if (success) {
//-                         alert("Widget Created!")
//-                         window.location.href = '/';
//-                     } else {
//-                     }
//-                 }).catch(error => {
//-                     console.error('Fetch error:', error);
//-                 });
//-         });
//-         console.log(savedWidgets);
//-     }
//-
//-
//-     function goToCreateWidget(){
//-         window.location.href = 'createwidget';
//-     }