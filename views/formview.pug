extends formviewlayout.pug

block body
    #main.w3-main(style='margin-left:250px; margin-bottom: 90px;')
        .w3-row.w3-padding-32
        if (currentUserDetailsBlock.userLevel === "Secretary" || currentUserDetailsBlock.userLevel === "Document Controller" || currentUserDetailsBlock.empID != currentForm.form_owner)
        else
            if (currentUserDetailsBlock.empID == currentForm.form_owner)
                .w3-container.w3-card.w3-white.w3-round.w3-margin
                    //.w3-row
                        //h1.w3-center.w3-bold #{currentForm.form_name}

                    .w3-row
                        .w3-twothird.w3-container2
                            h3.w3-bold Form Details
                            hr
                            .w3-third
                                .w3-container2.w3-card.w3-white.w3-round.w3-margin
                                    h4.w3-bold Saved Form Versions
                                    hr
                                    .w3-row
                                        select#versionDropDown(name='versionDropDown')
                                            each version in allVersions
                                                option #{version.user_version}
                                    .w3-row
                                        br
                                        button.w3-button.w3-block.w3-theme-dark(onclick=`showLoadVersionModal()`)
                                            i.fa.fa-refresh.fa-fw.w3-margin-right
                                            |   Load Form
                            .w3-third
                                .w3-container.w3-card.w3-white.w3-round.w3-margin
                                    h4.w3-bold Share Document
                                    hr
                                    .w3-row
                                        input(id='employee_email' name='employee_email' placeholder="Employee Email")
                                    .w3-row
                                        select#accessLevel(name='accessLevel')
                                            option(value='Viewer') Viewer
                                            option(value='Editor') Editor
                                    .w3-row
                                        br
                                        button.w3-button.w3-block.w3-theme-dark(onclick='validateShareForm()')
                                            i.fa.fa-share-alt.fa-fw.w3-margin-right
                                            |   Share

                            .w3-third
                                .w3-container2.w3-card.w3-white.w3-round.w3-margin
                                    h4.w3-bold Shared with
                                    hr
                                    each sharedReadItem in sharedRead
                                        h4
                                            i.fa.fa-eye.fa-fw.w3-margin-right
                                            |   #{sharedReadItem} - View Only
                                    each sharedWriteItem in sharedWrite
                                        h4
                                            i.fa.fa-eye.fa-fw.w3-margin-right
                                            |   #{sharedWriteItem} - View & Edit


                        .w3-third.w3-container2
                            h3.w3-bold Form Settings
                            hr
                            .w3-row
                                .w3-container.w3-white.w3-round.w3-margin
                                    .w3-row
                                        button.w3-button.w3-block.w3-theme-dark(onclick='showSaveFormModal()')
                                            i.fa.fa-floppy-o.fa-fw.w3-margin-right
                                            |   Save Form
                                        br
                                        button.w3-button.w3-block.w3-theme-dark(onclick='submitForm()')
                                            i.fas.fa-cloud-upload-alt.w3-margin-right
                                            |   Submit Form

        if (currentUserDetailsBlock.userLevel === "Secretary" || currentUserDetailsBlock.userLevel === "Super Admin" || currentUserDetailsBlock.userLevel === "Dean" || currentUserDetailsBlock.userLevel === "Department Head" )
            .w3-container.w3-card.w3-white.w3-round.w3-margin
                .w3-row
                    .w3-half.w3-container2
                        h3.w3-bold User Form Settings
                        hr
                        .w3-third
                            .w3-container2.w3-card.w3-white.w3-round.w3-margin
                                h4.w3-bold Form Details
                                .w3-row
                                    table.form-details
                                        tr
                                            td Form Name:
                                            td #{form_template.form_name}
                                        tr
                                            td Status:
                                            td#formDetailsActivateSetting #{form_template.form_status}
                                        tr
                                            td Due Date:
                                            td
                                                if (!form_template.due_date)
                                                    | None
                                                else
                                                    | #{form_template.due_date}

                                hr
                                h4.w3-bold Approvals
                                .w3-row
                                    table.form-details
                                        tr
                                            td Secretary:
                                            td
                                                if (!form_template.secretary_approval)
                                                    #secretaryApproval Not Approved
                                        tr
                                            td Department Head:
                                            td
                                                if (!form_template.dean_approval)
                                                    #deanApproval  Not Approved
                                        tr
                                            td Dean:
                                            td
                                                if (!form_template.department_head_approval)
                                                    #departmentHeadApproval  Not Approved

                        if (currentUserDetailsBlock.userLevel === "Secretary")
                            .w3-third
                                .w3-container2.w3-card.w3-white.w3-round.w3-margin
                                    h4.w3-bold Form Settings
                                    .w3-row
                                        button#toggleActivateFormButton.w3-button.w3-block.w3-theme-dark(onclick='toggleActivateForm()') Activate
                                    hr
                                    h4.w3-bold Due Date
                                    .w3-row
                                        input(type="date" id="dueDateInput" name="birthday")
                                    br
                                    .w3-row
                                        button.w3-button.w3-block.w3-theme-dark(onclick='setDueDate()')
                                            i.fa.fa-share-alt.fa-fw.w3-margin-right
                                            |   Set Due Date

                            .w3-third
                                .w3-container2.w3-card.w3-white.w3-round.w3-margin
                                    h4.w3-bold Assign User
                                    .w3-row
                                        input(id='assign_user' name='employee_email' placeholder="Employee Email")
                                    br
                                    .w3-row
                                        button.w3-button.w3-block.w3-theme-dark(onclick='validateAssignUsers()')
                                            i.fa.fa-share-alt.fa-fw.w3-margin-right
                                            | Assign Selected User
                                    hr
                                    h4.w3-bold Assign Department
                                    .w3-row
                                        select#assignDepartment(name='assignDepartment')
                                            option(value='null') Choose Department
                                            option(value='Accountancy Business Laws and Taxation') Accountancy Business Laws and Taxation Department
                                            option(value='Business Economics and Financial Management') Business Economics and Financial Management Department
                                            option(value='Computer Science and Computer Application') Computer Science and Computer Application Department
                                            option(value='Entrepreneurship/Human Resource Development Management/Marketing Management') Entrepreneurship/Human Resource Development Management/Marketing Management Department
                                            option(value='Hospitality and Tourism Management') Hospitality and Tourism Management Department
                                            option(value='Information Technology') Information Technology Department
                                            option(value='Math') Math Department
                                    br
                                    .w3-row
                                        button.w3-button.w3-block.w3-theme-dark(onclick='assignDepartment()')
                                            i.fa.fa-share-alt.fa-fw.w3-margin-right
                                            | Assign Selected Department

                    .w3-half.w3-container2
                        h3.w3-bold Submitted Forms
                        hr
                        .w3-container2.w3-card.w3-white.w3-round.w3-margin
                            table#submittedFormsTable.display(width='100%')
                                thead
                                    tr
                                        th Employee Number
                                        th Date Submitted
                                        th View Form
                                        th Action
                                tbody
                                    each submissions in submittedVersions
                                        tr
                                            td #{submissions.form_owner}
                                            td #{submissions.date_submitted}
                                            td
                                                button.w3-button.w3-block.w3-theme-dark(onclick=`renderSubmittedForm("${submissions.form_owner}")`) View
                                            td
                                                button.w3-button.w3-block.w3-theme-dark(onclick=`approveSubmittedForm("${submissions.form_owner}", "${String(submissions.form_control_number)}")`) Approve Form
                                            td
                                                button.w3-button.w3-block.w3-theme-dark(onclick=`returnSubmittedForm("${submissions.form_owner}", "${String(submissions.form_control_number)}")`) Return Form
            if (currentUserDetailsBlock.userLevel === "Secretary")
                .w3-container.w3-card.w3-white.w3-round.w3-margin
                    .w3-row
                        .w3-container
                            h3.w3-bold Assigned Users
                            hr
                            .w3-white.w3-round.w3-margin
                                table#assignedUserTable.display(width='100%')
                                    thead
                                        tr
                                            th Email
                                            th Employee ID
                                            th Department
                                            th First Name
                                            th Last Name
                                            th Action
                                    tbody
                                        each assignedUsers in allAssignedUsers
                                            tr
                                                td #{assignedUsers.email}
                                                td #{assignedUsers.emp_id}
                                                td #{assignedUsers.user_department}
                                                td #{assignedUsers.first_name}
                                                td #{assignedUsers.last_name}
                                                td
                                                    .button-container.w3-row
                                                    a.full-width-button.w3-center.all-caps(onclick=`removeUser('${assignedUsers.email}')`) Unassign



        .w3-row
            .w3-container2.w3-white.w3-round.w3-margin
                #enginePlaceHolder
                //#theContainerOfTheForm


        #saveFormModal
            #saveFormModalOverLay.dialogoverlay
            #saveFormModalDialogbox.dialogbox.slit-in-vertical
                #randomDiv
                    .dialogboxhead
                        .i.fa.fa-exclamation-circle Confirm Saving
                    .dialogboxbody
                        p Are you sure you want to save this Form?
                        p Saved changes will be accessible through loading previous versions
                .dialogboxfoot
                    button.pure-material-button-contained.active(onclick=`saveFilledOutForm()`) Yes
                .dialogboxfoot2
                    button.pure-material-button-contained.active(onclick=`hideSaveFormModal()`) No

        #shareFormAlertModal
            #shareFormAlertOverLay.dialogoverlay
            #shareFormAlertDialogbox.dialogbox.slit-in-vertical
                #randomDiv
                    .dialogboxhead
                        .i.fa.fa-exclamation-circle
                        |   Alert
                    .dialogboxbody
                        p Please make sure to put a valid Employee Email Address
                .dialogboxfoot
                    button.pure-material-button-contained.active(onclick=`hideShareFormAlertModal()`) Okay

        #shareFormModal
            #shareFormOverLay.dialogoverlay
            #shareFormDialogbox.dialogbox.slit-in-vertical
                #randomDiv
                    .dialogboxhead
                        .i.fa.fa-exclamation-circle Confirm Form Sharing Details
                    .dialogboxbody
                        p#sharingMessage
                .dialogboxfoot
                    button.pure-material-button-contained.active(onclick=`shareForm()`) Yes
                .dialogboxfoot2
                    button.pure-material-button-contained.active(onclick=`hideShareFormModal()`) No

        #loadVersionModal
            #loadVersionOverLay.dialogoverlay
            #loadVersionDialogbox.dialogbox.slit-in-vertical
                #randomDiv
                    .dialogboxhead
                        .i.fa.fa-exclamation-circle Confirm Form Rendering
                    .dialogboxbody
                        p#formRenderingMessage
                .dialogboxfoot
                    button.pure-material-button-contained.active(onclick=`renderSelectedVersion()`) Yes
                .dialogboxfoot2
                    button.pure-material-button-contained.active(onclick=`hideLoadVersionModal()`) No

        #deleteFileModal
            #deleteFileOverLay.dialogoverlay
            #deleteFileDialogbox.dialogbox.slit-in-vertical
                #randomDiv
                    .dialogboxhead
                        .i.fa.fa-exclamation-circle Confirm File Deletion
                    .dialogboxbody
                        p Are you sure you want to delete this file?
                        h2#selectedFileForDeletionPlaceholder
                .dialogboxfoot
                    button.pure-material-button-contained.active(onclick=`deleteSelectedFile()`) Yes
                .dialogboxfoot2
                    button.pure-material-button-contained.active(onclick=`hideDeleteModal()`) No

        .w3-container.w3-card.w3-white.w3-round.w3-margin
            .w3-row
                .w3-container
                    h3.w3-bold Previously Submitted Forms
                    hr
                    .w3-white.w3-round.w3-margin
                        table#previouslySubmittedForms.display(width='100%')
                            thead
                                tr
                                    th Form Name
                                    th Form Control Number
                                    th Time Submitted
                                    th Date Submitted
                                    th Department Head Approval
                                    th Secretary Approval
                                    th Dean Approval
                                    th Action
                            tbody
                                each prevSubmitForms in previouslySubmittedForms
                                    tr
                                        td #{prevSubmitForms.form_name}
                                        td #{prevSubmitForms.form_control_number}
                                        td #{prevSubmitForms.time_saved}
                                        td #{prevSubmitForms.date_submitted}
                                        td #{prevSubmitForms.department_head_approval}
                                        td #{prevSubmitForms.secretary_approval}
                                        td #{prevSubmitForms.dean_approval}
                                        td
                                            button.w3-button.w3-block.w3-theme-dark(onclick=`renderPrevSubmittedForm("${prevSubmitForms.form_owner}", "${prevSubmitForms.user_version}")`) View
        script.
            var table7 = $('#previouslySubmittedForms').DataTable();

        if (!currentForm.allow_file_upload)
        else
            .w3-row.w3-padding-16
                .w3-container.w3-card.w3-white.w3-round.w3-margin
                    .w3-row
                        h3.w3-bold File Management
                        hr
                        .w3-twothird.w3-container
                            .w3-white.w3-round

                                table#filesTable.display(width='100%')
                                    thead
                                        tr
                                            th File Name
                                            th File Size
                                            th Uploaded By
                                            th Uploaded At
                                            th File Actions
                                    tbody
                                        each file in currentUserFiles
                                            tr
                                                td #{file.file_name}
                                                td #{file.file_size}
                                                td #{file.uploadedBy}
                                                td #{file.uploadedAt}
                                                td
                                                    a.w3-half.w3-hover-white.edit-btn(href='/downloadfile/' + file.file_name + '/' + file.uploadedBy)
                                                        i.fas.fa-download
                                                    if (currentUserDetailsBlock.empID != currentForm.form_owner)
                                                    else
                                                        a.w3-half.w3-hover-white(onclick=`showDeleteModal('${file.file_name}', '${file.uploadedBy}')`)
                                                            i.fa.fa-times.w3-text-theme

                        if (currentUserDetailsBlock.empID != currentForm.form_owner)
                        else
                            .w3-third
                                .w3-container2.w3-white.w3-round.w3-margin
                                    h1
                                        i.fa.fa-upload.w3-text-theme
                                        |   Upload Files
                                    hr
                                    form(action="/", method="POST", enctype="multipart/form-data" id="upload-form")
                                        .w3-row
                                            input.bottone5(type="file", name="file", id="file")
                                            br
                                            input.bottone5(type="submit", value="Upload")

    script(src='https://code.jquery.com/ui/1.13.2/jquery-ui.js')
    link(rel='stylesheet' href='//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css')
    link(rel='stylesheet' href='../css/text_editor.css')

    script(src="../js/client.functions/handle_ajax_upload.js")
    script(src="../js/client.functions/handle_ajax_delete.js")

    script.
        function

    script.
        function assignDepartment(){
            var chosenDepartment = document.getElementById('assignDepartment').value;
            var assignDepartmentMessage = "Are you sure to assign to " + chosenDepartment + " in this form?";
            var result = window.confirm(assignDepartmentMessage);

            if(!result){
            }else{
                var table6 = $('#assignedUserTable').DataTable();
                var data = {
                    formControlNumber: formBlock.form_control_number,
                    assignedDepartment: chosenDepartment
                };

                $.ajax({
                    url: '/AJAX_assignDepartment',
                    type: 'PUT',
                    data: data,
                    success: function(response){
                        if(response.status_code === 0){
                            alert("You have assigned " + chosenDepartment + " in this form.");
                            var updatedData3 = response.allAssignedUsers;
                            table6.clear().draw();

                            for(e=0; e < updatedData3.length; e++){
                                var curLine3 = [
                                    updatedData3[e].email,
                                    updatedData3[e].emp_id,
                                    updatedData3[e].user_department,
                                    updatedData3[e].first_name,
                                    updatedData3[e].last_name,
                                    `<a class="full-width-button w3-center all-caps" onclick="removeUser('${updatedData3[e].email}')">Unassign</a>`
                                ];
                                table6.row.add(curLine3).draw();
                            }
                        }else if(response.status_code === 1){
                            alert("There was an error in assigning the department.");
                        }
                    }
                });
            }

        }

    script.
        function removeUser(unassignUser) {
            var unassignMessage = "Are you sure to Unassign " + unassignUser +  " in this form.";
            var result = window.confirm(unassignMessage);

            if(!result){
            }else{
                var table4 = $('#assignedUserTable').DataTable();
                var data = {
                    formControlNumber: formBlock.form_control_number
                };

                $.ajax({
                    url: `/AJAX_removeUser/${unassignUser}`,
                    type: 'PUT',
                    data: data,
                    success: function(response) {
                        if(response.status_code === 0){
                            var updatedData1 = response.allAssignedUsers;
                            table4.clear().draw();

                            for (var a = 0; a < updatedData1.length; a++) {
                                var curLine1 = [
                                    updatedData1[a].email,
                                    updatedData1[a].emp_id,
                                    updatedData1[a].user_department,
                                    updatedData1[a].first_name,
                                    updatedData1[a].last_name,
                                    `<a class="full-width-button w3-center all-caps" onclick="removeUser('${updatedData1[a].email}')">Unassign</a>`
                                ];
                                table4.row.add(curLine1).draw();
                            }
                        }else if(response.status_code === 1){
                            alert("There was an error in unassigning the user.");
                        }
                    }
                });
            }
        }


    script.
        var table3 = $('#assignedUserTable').DataTable();

        var formBlock = !{JSON.stringify(initialUserForm)};
        var empEmails = !{JSON.stringify(retrievedUserEmails)}
        var receivedFormContent = formBlock.form_content;

        var enginePlaceHolder = document.getElementById('enginePlaceHolder');
        var formControlNumber = formBlock.form_control_number;

        enginePlaceHolder.innerHTML = receivedFormContent;
        //console.log(!{JSON.stringify(currentForm)});

        $(function() {
            var allEmails = empEmails;
            $( "#employee_email" ).autocomplete({
                source: allEmails
            });
        });

        $(function() {
            var allEmails = empEmails;
            $( "#assign_user" ).autocomplete({
                source: allEmails
            });
        });

    script(src='/js/client.engine/htmlToJson.js')
    script(src='/js/client.functions/handle_ajax_save_filled_out_form.js')
    script(src='/js/client.functions/handle_ajax_share_form.js')
    script(src='/js/client.functions/handle_ajax_load_version.js')
    script(src='/js/client.form/form_create_view_edit.js')


    script.
        var table2 = $('#submittedFormsTable').DataTable();

    script.
        function setDueDate(){
            var dueDateInput = document.getElementById("dueDateInput").value;

            if(dueDateInput == '' || dueDateInput == undefined || dueDateInput == null){
                alert("You did not set a due date.");
            }else{
                var dueDate = new Date(dueDateInput);
                var monthDue = getQuarter(dueDateInput);
                var annualDue = getAnnual(dueDateInput);
                var acadYear = getAcadYear(dueDateInput);
                var semester = getSemester(dueDateInput);

                var data = {
                    dueDateInput: dueDateInput,
                    quarterlyDueDate: monthDue,
                    annualDueDate: annualDue,
                    academicYear: acadYear,
                    semester: semester,
                    formControlNumber: form_template.form_control_number
                }

                $.ajax({
                    type: 'PUT',
                    url: '/AJAX_setDueDate',
                    data: data,
                    success: function(response){
                        if(response.status_code === 0){
                            alert("Due date has been set.");
                            formDueDate.innerHTML = "Due Date : " + response.dueDate;
                        }else if(response.status_code === 1){
                            alert("Error in setting a due date.");
                        }else if(response.status_code === 2){
                            alert("Error in setting a due date.");
                        }
                    }
                });
            }
        }

        function getSemester(dueDate){
            const parts = dueDate.split('-');
            const month = parseInt(parts[1], 10);

            if(month >= 1 && month <= 5){
                return '2nd Semester';
            }else if (month >= 8 && month <= 12){
                return '1st Semester';
            }else if (month >= 6 && month <= 7){
                return 'Short Semester';
            }else {
                return 'Invalid Semester';
            }
        }

        function getAcadYear(dueDate){
            const parts = dueDate.split('-');
            const month = parseInt(parts[1], 10);
            const year = parseInt(parts[0], 10);
            var anotherYear;

            if(month >= 1 && month <= 7){
                anotherYear = year - 1;
                return anotherYear + ' - ' + year;
            }else if (month >= 8 && month <= 12){
                anotherYear = year + 1;
                return year + '-' + anotherYear;
            }else {
                return 'Invalid Academic Year';
            }
        }

        function getAnnual(dueDate){
            const parts = dueDate.split('-');
            const year = parseInt(parts[0], 10);
            return year;
        }

        function getQuarter(dueDate){
            const parts = dueDate.split('-');
            const month = parseInt(parts[1], 10);

            if(month >= 1 && month <= 3){
                return '1st Quarter';
            }else if (month >= 4 && month <= 6){
                return '2nd Quarter';
            }else if (month >= 7 && month <= 9){
                return '3rd Quarter';
            }else if (month >= 10 && month <= 12){
                return '4th Quarter';
            }else {
                return 'Invalid Quarterly Due Date';
            }
        }

    script.
        function renderPrevSubmittedForm(formOwner, userVersion){
            var data = {
                formOwner: formOwner,
                userVersion: userVersion,
                formControlNumber: form_template.form_control_number
            };

            $.ajax({
                type: 'PUT',
                url: '/AJAX_renderPrevSubmittedForm',
                data: data,
                success: function(response){
                    if(response.status_code === 0){
                        alert("Submitted form of " + formOwner + " will be rendered");
                        document.getElementById("enginePlaceHolder").innerHTML = response.formContent;
                        var userApprovals = response.submittedForm;

                        if(userApprovals.secretary_approval == undefined || userApprovals.secretary_approval == ''){
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : Not Approved";
                        }else{
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : " + userApprovals.secretary_approval;
                        }
                        if(userApprovals.dean_approval == undefined || userApprovals.dean_approval == ''){
                            document.getElementById("deanApproval").innerHTML = "Dean : Not Approved";
                        }else{
                            document.getElementById("deanApproval").innerHTML = "Dean : " + userApprovals.dean_approval;
                        }
                        if(userApprovals.department_head_approval == undefined || userApprovals.department_head_approval == ''){
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : Not Approved";
                        }else{
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : " + userApprovals.department_head_approval;
                        }

                        var table = $('#filesTable').DataTable();
                        var updatedData = response.currentUserFiles;
                        table.clear().draw();

                        for(i=0;i<updatedData.length;i++){
                            console.log("found an object");

                            var curLine = [
                                updatedData[i].file_name,
                                updatedData[i].file_size,
                                updatedData[i].uploadedBy,
                                updatedData[i].uploadedAt,
                                `<a class="w3-half w3-hover-white edit-btn" href="/downloadfile/${updatedData[i].file_name}/${updatedData[i].uploadedBy}"><i class="fas fa-download"></i></a>
                                <a class="w3-half w3-hover-white" onclick="showDeleteModal('${updatedData[i].file_name}','${updatedData[i].uploadedBy}')"><i class="fa fa-times w3-text-theme"></i></a>`
                            ];

                            table.row.add(curLine).draw();
                        }
                    }else if(response.status_code === 1){
                        alert("Error at rendering form");
                    }
                },
            });
        }

    script.
        function renderSubmittedForm(formOwner){
            var data = {
                formOwner: formOwner,
                formControlNumber: form_template.form_control_number
            };

            $.ajax({
                type: 'PUT',
                url: '/AJAX_renderSubmittedForm',
                data: data,
                success: function(response){
                    if(response.status_code === 0){
                        alert("Submitted form of " + formOwner + " will be rendered");
                        document.getElementById("enginePlaceHolder").innerHTML = response.formContent;
                        var userApprovals = response.submittedForm;

                        if(userApprovals.secretary_approval == undefined || userApprovals.secretary_approval == ''){
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : Not Approved";
                        }else{
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : " + userApprovals.secretary_approval;
                        }
                        if(userApprovals.dean_approval == undefined || userApprovals.dean_approval == ''){
                            document.getElementById("deanApproval").innerHTML = "Dean : Not Approved";
                        }else{
                            document.getElementById("deanApproval").innerHTML = "Dean : " + userApprovals.dean_approval;
                        }
                        if(userApprovals.department_head_approval == undefined || userApprovals.department_head_approval == ''){
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : Not Approved";
                        }else{
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : " + userApprovals.department_head_approval;
                        }

                        var table = $('#filesTable').DataTable();
                        var updatedData = response.currentUserFiles;
                        table.clear().draw();

                        for(i=0;i<updatedData.length;i++){
                            console.log("found an object");

                            var curLine = [
                                updatedData[i].file_name,
                                updatedData[i].file_size,
                                updatedData[i].uploadedBy,
                                updatedData[i].uploadedAt,
                                `<a class="w3-half w3-hover-white edit-btn" href="/downloadfile/${updatedData[i].file_name}/${updatedData[i].uploadedBy}"><i class="fas fa-download"></i></a>
                                <a class="w3-half w3-hover-white" onclick="showDeleteModal('${updatedData[i].file_name}','${updatedData[i].uploadedBy}')"><i class="fa fa-times w3-text-theme"></i></a>`
                            ];

                            table.row.add(curLine).draw();
                        }
                    }else if(response.status_code === 1){
                        alert("Error at rendering form");
                    }
                },
            });
        }

    script.
        function returnSubmittedForm(formOwner, formControlNumber){
            var data = {
                formOwner: formOwner,
                formControlNumber: formControlNumber
            };

            $.ajax({
                type: 'PUT',
                url: '/AJAX_returnSubmittedForm',
                data: data,
                success: function(response){
                    if(response.status_code === 0){
                        var secretaryApproval = response.secretary_approval;
                        var deanApproval = response.dean_approval;
                        var departmentHeadApproval = response.department_head_approval;

                        if(secretaryApproval === "Approved"){
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : " + secretaryApproval;
                        }else{
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : Not Approved";
                        }
                        if(deanApproval === "Approved"){
                            document.getElementById("deanApproval").innerHTML = "Dean : " + deanApproval;
                        }else{
                            document.getElementById("deanApproval").innerHTML = "Dean : Not Approved";
                        }
                        if(departmentHeadApproval === "Approved"){
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : " + departmentHeadApproval;
                        }else{
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : Not Approved";
                        }
                        alert("Submitted form was approved.");
                    } else if (response.status_code === 1){
                        alert("Error in returning the form.");
                    } else if (response.status_code === 2){
                        alert("Error in  returning the form.");
                    }
                }
            });
        }

    script.
        function approveSubmittedForm(formOwner, formControlNumber){
            var data = {
                formOwner: formOwner,
                formControlNumber: formControlNumber
            };

            $.ajax({
                type: 'PUT',
                url: '/AJAX_approveSubmittedForm',
                data: data,
                success: function(response){
                    if(response.status_code === 0){
                        var secretaryApproval = response.secretary_approval;
                        var deanApproval = response.dean_approval;
                        var departmentHeadApproval = response.department_head_approval;

                        if(secretaryApproval === "Approved"){
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : " + secretaryApproval;
                        }else{
                            document.getElementById("secretaryApproval").innerHTML = "Secretary : Not Approved";
                        }
                        if(deanApproval === "Approved"){
                            document.getElementById("deanApproval").innerHTML = "Dean : " + deanApproval;
                        }else{
                            document.getElementById("deanApproval").innerHTML = "Dean : Not Approved";
                        }
                        if(departmentHeadApproval === "Approved"){
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : " + departmentHeadApproval;
                        }else{
                            document.getElementById("departmentHeadApproval").innerHTML = "Department Head : Not Approved";
                        }
                        alert("Submitted form was approved.");
                    }else if(response.status_code === 1){
                        alert("Error in approving the form.");
                    }else if(response.status_code === 2){
                        alert("Error in approving the form.");
                    }
                }
            });
        }

    script.
        var form_template = !{JSON.stringify(form_template)};
        var formDetailsActivateSetting = document.getElementById("formDetailsActivateSetting").innerHTML;
        var toggleActivateFormButton = document.getElementById("toggleActivateFormButton");

        formDetailsActivateSetting.innerHTML = form_template.form_status;

        if(formDetailsActivateSetting == "Active"){
            toggleActivateFormButton.innerHTML = "De-activate";
        }else{
            toggleActivateFormButton.innerHTML = "Activate";
        }

        if(form_template.form_status == "Published"){
            toggleActivateFormButton.innerHTML = "Activate";
        }else if(form_template.form_status == "In-active"){
            toggleActivateFormButton.innerHTML = "Activate";
        }else if(form_template.form_status == "Template"){
            toggleActivateFormButton.innerHTML = "Activate";
        }

        function toggleActivateForm(){
            var confirmationMessage;

            if(form_template.form_status == "Published"){
                confirmationMessage = "Are you sure you want to ACTIVATE the form?";
            }else if(form_template.form_status == "Active"){
                confirmationMessage = "Are you sure you want to DE-ACTIVATE the form?";
            }else{
                confirmationMessage = "Are you sure you want to ACTIVATE the form?";
            }

            var result = window.confirm(confirmationMessage);

            if(result){
                if(toggleActivateFormButton.innerHTML == "Activate"){
                    toggleActivateFormButton.innerHTML = "De-activate";
                }else{
                    toggleActivateFormButton.innerHTML = "Activate";
                }
                AJAX_toggleActivate();
            }


        }

        function AJAX_toggleActivate(){
            var toggleActivateFormButton = document.getElementById("toggleActivateFormButton");
            var formDetailsActivateSetting = document.getElementById("formDetailsActivateSetting");

            var data = {
                formControlNumber: form_template.form_control_number,
                targetedVersion: form_template.form_version
            };

            $.ajax({
                type: 'PUT',
                url: '/AJAX_toggleActivate',
                data: data,
                success: function(response){
                    if(response.status_code === 0){
                        if(formDetailsActivateSetting.innerHTML == "Published"){
                            formDetailsActivateSetting.innerHTML = "Active";
                        }else if(formDetailsActivateSetting.innerHTML == "Active"){
                            formDetailsActivateSetting.innerHTML = "In-active";
                        }else{
                            formDetailsActivateSetting.innerHTML = "Active";
                        }
                    }else if(response.status_code === 1){
                        alert("Failure did not GRADUATE");
                    }else if(response.status_code === 2){
                        alert("Server Failed");
                    }
                }
            });
        }

        function validateAssignUsers() {
            selectedUserToAssign = document.getElementById('assign_user').value;
            var table5 = $('#assignedUserTable').DataTable();

            if (!selectedUserToAssign) {
                alert("Please enter an email to assign the form to.");
            } else if (!empEmails.includes(selectedUserToAssign)) {
                alert("Employee does not exist.");
            } else {
                const data = {
                    assignedUser: selectedUserToAssign,
                    formControlNumber: formControlNumber
                };

                $.ajax({
                    type: 'PUT',
                    url: '/AJAX_assignUsers',
                    data: data,
                    success: function (response) {
                        if (response.status_code === 1) {
                            alert("No user was assigned to the form");
                        } else if (response.status_code === 0) {
                            alert("You have assigned " + selectedUserToAssign + " in this form.");
                            var updatedData2 = response.allAssignedUsers;
                            table5.clear().draw();

                            for (var b = 0; b < updatedData2.length; b++) {
                                var curLine2 = [
                                    updatedData2[b].email,
                                    updatedData2[b].emp_id,
                                    updatedData2[b].user_department,
                                    updatedData2[b].first_name,
                                    updatedData2[b].last_name,
                                    `<a class="full-width-button w3-center all-caps" onclick="removeUser('${updatedData2[b].email}')">Unassign</a>`
                                ];
                                table5.row.add(curLine2).draw();
                            }
                        } else {
                            alert("Error at AJAX function in assigning users.");
                        }
                    },
                    error: function (error) {
                        console.log("AJAX Error: " + error);
                    }
                });
            }
        }

        function submitForm(){
            var inputFieldValuesJSON = iterateAndGetData();
            //var formBody = document.getElementById('theContainerOfTheForm').innerHTML;
            var formBody = document.getElementById('form-content');

            formBody = elementToJson(formBody,inputFieldValuesJSON);
            getNewKeyID(formBody);


            const data = {
                formContent: formBody
            };

            $.ajax({
                type: 'PUT',
                url: '/submitform',
                data: data,
                success: function(response) {
                    if (response.status_code === 1) {
                        alert("Error in submitting the form.");
                    } else if (response.status_code === 0) {
                        alert("Successfully submitted the form.");
                        updateDropdownOptions(response.allUserFormVersions);
                        document.getElementById('form-content').innerHTML = response.initialTemplate;
                        hideSaveFormModal();

                        var table1 = $('#previouslySubmittedForms').DataTable();
                        var updatedData1 = response.prevSubmittedForms;
                        table1.clear().draw();

                        for(z=0; z < updatedData1.length; z++){
                            var curLine4 = [
                                updatedData1[z].form_name,
                                updatedData1[z].form_control_number,
                                updatedData1[z].time_saved,
                                updatedData1[z].date_submitted,
                                updatedData1[z].department_head_approval,
                                updatedData1[z].secretary_approval,
                                updatedData1[z].dean_approval,
                                `<button class="w3-button w3-block w3-theme-dark" onclick="renderPrevSubmittedForm('${updatedData1[z].form_owner}', '${updatedData1[z].user_version}')">View</button>`
                            ];
                            table1.row.add(curLine4).draw();
                        }

                    } else {
                        $('.error-message').text(response.error);
                    }
                },
                error: function(error) {
                    console.error('AJAX error:', error);
                }
            });
        }






















