Index: views/js/client.engine/htmlToJson.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let ele_key = 0;\r\n\r\nfunction getNewKeyID(element) {\r\n  const firstAttribute = element.ele_attributes[Object.keys(element.ele_attributes)[0]];\r\n\r\n  if (firstAttribute !== null) {\r\n    const currentKey = parseInt(firstAttribute, 10);\r\n\r\n    if (!isNaN(currentKey) && currentKey >= ele_key) {\r\n      const serializedHTML = document.documentElement.outerHTML;\r\n      const largestKey = detectLargestKeyInHtml(serializedHTML);\r\n      ele_key = largestKey + 1;\r\n    }\r\n  } else {\r\n    const counter = ele_key;\r\n    ele_key++;\r\n    element.ele_attributes.key = counter.toString();\r\n  }\r\n\r\n  for (const childElement of element.ele_contents) {\r\n    if (typeof childElement === 'object') {\r\n      getNewKeyID(childElement);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction detectLargestKeyInHtml(element) {\r\n  const { document } = new JSDOM(element).window;\r\n  const elementsWithKeyAttribute = document.querySelectorAll('[key]');\r\n\r\n  // Initialize a variable to store the maximum key\r\n  let maxKey = 0;\r\n\r\n  // Iterate through the elements\r\n  elementsWithKeyAttribute.forEach(element => {\r\n    // Get the \"key\" attribute value as a string\r\n    const keyAttribute = element.getAttribute('key');\r\n\r\n    // Check if it's a valid number and if it's greater than the current maxKey\r\n    if (!isNaN(keyAttribute) && parseInt(keyAttribute, 10) > maxKey) {\r\n      maxKey = parseInt(keyAttribute, 10);\r\n    }\r\n  });\r\n\r\n  console.log('The largest key is:', maxKey);\r\n  return maxKey;\r\n}\r\n\r\nfunction elementToJson(element) {\r\n    const jsonElementFormat = {\r\n        ele_type: element.nodeName ? element.nodeName.toLowerCase() : 'unknown',\r\n        ele_attributes: {\r\n            key: null,\r\n        },\r\n        ele_contents: [],\r\n    };\r\n\r\n    if (element.attributes) {\r\n        for (let i = 0; i < element.attributes.length; i++) {\r\n            const attr = element.attributes.item(i);\r\n            jsonElementFormat.ele_attributes[attr.name] = attr.value;\r\n        }\r\n    }\r\n\r\n    if (element.childNodes) {\r\n        for (let i = 0; i < element.childNodes.length; i++) {\r\n            const childNode = element.childNodes[i];\r\n            if (childNode.nodeType === 1) { // node type '1' is element in the DOM (Document Object Model)\r\n                const childJson = elementToJson(childNode);\r\n                jsonElementFormat.ele_contents.push(childJson);\r\n            } else if (childNode.nodeType === 3) { // node type '3' is text in the DOM (Document Object Model)\r\n                const trimmedText = childNode.textContent.trim();\r\n                if (trimmedText !== '') {\r\n                    jsonElementFormat.ele_contents.push(trimmedText);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return jsonElementFormat;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/js/client.engine/htmlToJson.js b/views/js/client.engine/htmlToJson.js
--- a/views/js/client.engine/htmlToJson.js	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/views/js/client.engine/htmlToJson.js	(date 1700339284000)
@@ -1,82 +1,153 @@
+var formBody;
+
+function elementToJson(element,inputFieldValuesJSON) {
+    const jsonElementFormat = {
+        ele_type: element.nodeName ? element.nodeName.toLowerCase() : 'unknown',
+        ele_attributes: {
+            key: null,
+        },
+        ele_contents: [],
+    };
+
+    if (element.attributes) {
+        for (let i = 0; i < element.attributes.length; i++) {
+            const attr = element.attributes.item(i);
+            jsonElementFormat.ele_attributes[attr.name] = attr.value;
+        }
+    }
+
+
+
+    if (element.childNodes) {
+        for (let i = 0; i < element.childNodes.length; i++) {
+            const childNode = element.childNodes[i];
+            if (childNode.nodeType === 1) { // Element node
+                const childJson = elementToJson(childNode,inputFieldValuesJSON);
+                jsonElementFormat.ele_contents.push(childJson);
+            } else if (childNode.nodeType === 3) { // Text node
+                const trimmedText = childNode.textContent.trim();
+                if (trimmedText !== '') {
+                    jsonElementFormat.ele_contents.push(trimmedText);
+                }
+            }
+        }
+    }
+
+    if (element.nodeName.toLowerCase() === 'input') {
+            const inputType = element.getAttribute('type');
+            const inputKeyAttribute = element.getAttribute('key');
+
+            if (inputType) {
+                const inputElement = inputFieldValuesJSON.find(item => Object.keys(item)[0] === inputKeyAttribute);
+
+                if (inputElement) {
+                    const inputValueFromJson = inputElement[inputKeyAttribute];
+                    if (inputValueFromJson !== null) {
+                        jsonElementFormat.ele_attributes.key = inputKeyAttribute;
+
+                        if (inputType.toLowerCase() === 'text' || inputType.toLowerCase() === 'date') {
+                            jsonElementFormat.ele_attributes.value = inputValueFromJson;
+                        } else if (inputType.toLowerCase() === 'checkbox' || inputType.toLowerCase() === 'radio') {
+                            if(inputValueFromJson==="checked"){
+                            jsonElementFormat.ele_attributes.checked = element.checked;
+                            }
+                        }
+                    }
+                }
+            }
+        }
+    return jsonElementFormat;
+}
+//GLOBAL AT THIS POINT
 let ele_key = 0;
 
 function getNewKeyID(element) {
-  const firstAttribute = element.ele_attributes[Object.keys(element.ele_attributes)[0]];
+    const firstAttribute = element.ele_attributes[Object.keys(element.ele_attributes)[0]];
 
-  if (firstAttribute !== null) {
-    const currentKey = parseInt(firstAttribute, 10);
+    if(firstAttribute !== null){
+        const currentKey = parseInt(firstAttribute, 10);
 
-    if (!isNaN(currentKey) && currentKey >= ele_key) {
-      const serializedHTML = document.documentElement.outerHTML;
-      const largestKey = detectLargestKeyInHtml(serializedHTML);
-      ele_key = largestKey + 1;
-    }
-  } else {
-    const counter = ele_key;
-    ele_key++;
-    element.ele_attributes.key = counter.toString();
-  }
+        if(!isNaN(currentKey) && currentKey >= ele_key){
+        const serializedHTML = document.documentElement.outerHTML; // kailangan muna istore sa string para magamit yung detectlargestkey
+        const asd = detectLargestKeyInHtml(serializedHTML);
+            ele_key = asd + 1;
+        }
+    }else{
+        counter = ele_key;
+        ele_key = ele_key + 1;
+        element.ele_attributes.key = counter.toString();
+    }
 
-  for (const childElement of element.ele_contents) {
-    if (typeof childElement === 'object') {
-      getNewKeyID(childElement);
-    }
-  }
+    for(const childElement of element.ele_contents){
+        if(typeof childElement === 'object'){
+            getNewKeyID(childElement);
+        }
+    }
 }
 
-
 function detectLargestKeyInHtml(element) {
-  const { document } = new JSDOM(element).window;
-  const elementsWithKeyAttribute = document.querySelectorAll('[key]');
+    // Create a temporary div element
+    const tempDiv = document.createElement('div');
+
+    // Set its innerHTML to the provided HTML string
+    tempDiv.innerHTML = element;
+
+    // Query all elements with the "key" attribute
+    const elementsWithKeyAttribute = tempDiv.querySelectorAll('[key]');
 
-  // Initialize a variable to store the maximum key
-  let maxKey = 0;
+    // Initialize a variable to store the maximum key
+    let maxKey = 0;
 
-  // Iterate through the elements
-  elementsWithKeyAttribute.forEach(element => {
-    // Get the "key" attribute value as a string
-    const keyAttribute = element.getAttribute('key');
+    // Iterate through the elements
+    elementsWithKeyAttribute.forEach(element => {
+      // Get the "key" attribute value as a string
+      const keyAttribute = element.getAttribute('key');
 
-    // Check if it's a valid number and if it's greater than the current maxKey
-    if (!isNaN(keyAttribute) && parseInt(keyAttribute, 10) > maxKey) {
-      maxKey = parseInt(keyAttribute, 10);
-    }
-  });
+      // Check if it's a valid number and if it's greater than the current maxKey
+      if (!isNaN(keyAttribute) && parseInt(keyAttribute, 10) > maxKey) {
+        maxKey = parseInt(keyAttribute, 10);
+      }
+    });
 
-  console.log('The largest key is:', maxKey);
-  return maxKey;
+    console.log('The largest key is:', maxKey);
+    return maxKey;
 }
 
-function elementToJson(element) {
-    const jsonElementFormat = {
-        ele_type: element.nodeName ? element.nodeName.toLowerCase() : 'unknown',
-        ele_attributes: {
-            key: null,
-        },
-        ele_contents: [],
-    };
+function iterateAndGetData() {
+	var x = document.getElementById("enginePlaceHolder");
 
-    if (element.attributes) {
-        for (let i = 0; i < element.attributes.length; i++) {
-            const attr = element.attributes.item(i);
-            jsonElementFormat.ele_attributes[attr.name] = attr.value;
-        }
-    }
+    // Get all HTML elements
+    var allElements = x.querySelectorAll('*');
 
-    if (element.childNodes) {
-        for (let i = 0; i < element.childNodes.length; i++) {
-            const childNode = element.childNodes[i];
-            if (childNode.nodeType === 1) { // node type '1' is element in the DOM (Document Object Model)
-                const childJson = elementToJson(childNode);
-                jsonElementFormat.ele_contents.push(childJson);
-            } else if (childNode.nodeType === 3) { // node type '3' is text in the DOM (Document Object Model)
-                const trimmedText = childNode.textContent.trim();
-                if (trimmedText !== '') {
-                    jsonElementFormat.ele_contents.push(trimmedText);
+
+    // Array to store the results
+    var resultJson = [];
+
+    // Iterate through each element
+    allElements.forEach(function(element) {
+        // Check if the element is an input
+        if (element.nodeName.toLowerCase() === 'input') {
+            var inputType = element.getAttribute('type');
+            var inputKeyAttribute = element.getAttribute('key');
+
+            // Check if the input has a key attribute
+            if (inputKeyAttribute) {
+                var inputValue;
+
+                // Check input type
+                if (inputType.toLowerCase() === 'text' || inputType.toLowerCase() === 'date') {
+                    inputValue = element.value;
+                } else if (inputType.toLowerCase() === 'checkbox' || inputType.toLowerCase() === 'radio') {
+                    inputValue = element.checked ? 'checked' : 'unchecked';
                 }
+
+                // Create an object with key-value pair and push it to the resultArray
+                var elementData = {};
+                elementData[inputKeyAttribute] = inputValue;
+                resultJson.push(elementData);
             }
         }
-    }
+    });
 
-    return jsonElementFormat;
+    return resultJson;
 }
\ No newline at end of file
Index: views/createform.pug
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>extends layout.pug\r\n\r\nblock body\r\n    .w3-main#main(style='margin-left:250px; margin-top:100px; margin-bottom:50px;')\r\n        .w3-row.w3-card.w3-container.w3-white.w3-margin\r\n            h4.w3-bold Create Form\r\n            input#formName.w3-col.s6.w3-input.w3-margin(placeholder=\"Type Form Name [Required]\" type='text' name='formName' required='')\r\n            input#formControlNumber.w3-col.s6.w3-input.w3-margin(placeholder=\"Type Form Control Number [Required]\" type='text' name='formControlNumber' required='')\r\n            hr.w3-clear\r\n            p.w3-center\r\n            .w3-row.w3-container\r\n                .grid-container.w3-light-grey\r\n                    //.grid-item\r\n                        label(for='createPageMargin') Page Margin:\r\n                        select#createPageMargin(onchange='createPageMargin()')\r\n                            option(value='narrow') Narrow\r\n                            option(value='normal') Normal\r\n                            option(value='moderate') Moderate\r\n                    .grid-item\r\n                        label(for='modifyOrientation') Orientation:\r\n                        select#modifyOrientation(onchange='modifyOrientation()')\r\n                            option(value='portrait') Portrait\r\n                            option(value='landscape') Landscape\r\n\r\n                    .grid-item\r\n                        label(for='fontSizeSelect') Font Size:\r\n                        select#fontSizeSelect(onchange='changeFontSize()')\r\n                            // Generate font size options using JavaScript\r\n                            script.\r\n                                for (let i = 1; i <= 100; i++) {\r\n                                    document.write(`<option value=\"${i}\">${i}</option>`);\r\n                                }\r\n                    .grid-item.borderless\r\n                    .grid-item\r\n                        label(for='colorSelect') Select Text Color:\r\n                        select#colorSelect(onchange='changeTextColor()')\r\n                            option(value='black') Black\r\n                            option(value='white') White\r\n                            option(value='red') Red\r\n                            option(value='blue') Blue\r\n                            option(value='grey') Grey\r\n                    .grid-item.borderless\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignLeft()')\r\n                            i.fa.fa-align-left.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignCenter()')\r\n                            i.fa.fa-align-center.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignRight()')\r\n                            i.fa.fa-align-right.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignJustify()')\r\n                            i.fa.fa-align-justify.icon-light\r\n                    .grid-item.borderless\r\n                    .grid-item\r\n                        button.w3-button.w3-bold.w3-grey(onclick='saveForm()')\r\n                            | Export\r\n                    .grid-item.borderless\r\n\r\n            .w3-row.w3-container\r\n                .w3-twothird.w3-container\r\n                    .paperContainer\r\n                        #form-content.pages\r\n                            #page-1.drop-container\r\n\r\n                .w3-third\r\n                    .page-container.w3-container.w3-light-grey\r\n                        //LEI -- REFER TO dragbar FOR FUTURE REVISIONS\r\n                        include dragbar\r\n\r\n    script.\r\n\r\n        function saveForm() {\r\n            var formBody = document.getElementById('form-content').innerHTML;\r\n            var formName = document.getElementById('formName').value;\r\n            var formControlNumber = document.getElementById('formControlNumber').value;\r\n\r\n            if (formBody === null || formBody === \"\" || formName === null || formName === \"\" || formControlNumber === null || formControlNumber === \"\") {\r\n                alert(\"Form Body, Form Name, or Form Control Number is empty!\");\r\n            } else {\r\n                const data = {\r\n                    name: formName,\r\n                    formControlNumber: formControlNumber,\r\n                    formContent: formBody,\r\n                    formStatus: \"Template\"\r\n                };\r\n\r\n                $.ajax({\r\n                    type: 'POST',\r\n                    url: '/savecreatedform',\r\n                    contentType: 'application/json',\r\n                    data: JSON.stringify(data),\r\n                    success: function (data) {\r\n                        if (data.success) {\r\n                            window.location.href = '/';\r\n                        } else if (data.status_code === 1) {\r\n                            alert(\"Form name already exists. Proceed to view form templates to edit the form instead!\");\r\n                        } else {\r\n                            alert(\"Error in AJAX function.\");\r\n                        }\r\n                    },\r\n                    error: function (error) {\r\n                        console.error('AJAX error:', error);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    script.\r\n        // Not working, to be debugged\r\n        function restrictCheckBoxSelection() {\r\n        const checkboxes = document.querySelectorAll('input[name=\"academicStatus\"]');\r\n        console.log(checkboxes);\r\n            console\r\n          // Add a change event listener to each checkbox\r\n                    checkboxes.forEach((checkbox) => {\r\n                        checkbox.addEventListener('change', function () {\r\n                            // Uncheck all other checkboxes in the group\r\n                            checkboxes.forEach((otherCheckbox) => {\r\n                                if (otherCheckbox !== this) {\r\n                                    otherCheckbox.checked = false;\r\n                                }\r\n                            });\r\n                        });\r\n                    });\r\n        }\r\n\r\n        restrictCheckBoxSelection();\r\n\r\n\r\n\r\n    link(rel='stylesheet' href='hnodettps://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')\r\n    link(rel='stylesheet' href='../css/w3css4.css')\r\n    link(rel='stylesheet' href='../css/w3-theme.css')\r\n    link(rel='stylesheet' href='../css/text_editor.css')\r\n    link(rel='stylesheet' href='../css/create_form_style.css')\r\n\r\n    script(src='https://code.jquery.com/jquery-1.12.4.js')\r\n    script(src='https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js')\r\n    script(src='https://html2canvas.hertzen.com/dist/html2canvas.js')\r\n    script(src='js/create_form_drag_drop.js')\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/createform.pug b/views/createform.pug
--- a/views/createform.pug	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/views/createform.pug	(date 1700298868000)
@@ -69,13 +69,23 @@
                         //LEI -- REFER TO dragbar FOR FUTURE REVISIONS
                         include dragbar
 
+    script(src='js/client.engine/htmlToJson.js')
     script.
-
         function saveForm() {
-            var formBody = document.getElementById('form-content').innerHTML;
+            //var formBody = document.getElementById('form-content').innerHTML;
+            var formBody = document.getElementById('form-content');
             var formName = document.getElementById('formName').value;
             var formControlNumber = document.getElementById('formControlNumber').value;
 
+            alert("will now call engine!");
+
+            formBody = elementToJson(formBody);
+            getNewKeyID(formBody);
+            //formBody = JSON.stringify(formBody);
+
+            //console.log(formBody);
+
+
             if (formBody === null || formBody === "" || formName === null || formName === "" || formControlNumber === null || formControlNumber === "") {
                 alert("Form Body, Form Name, or Form Control Number is empty!");
             } else {
Index: views/viewformtemplate.pug
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>extends viewformtemplatelayout.pug\r\n\r\nblock body\r\n    .w3-main#main(style='margin-left:250px')\r\n        .w3-row.w3-padding-32\r\n            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                .w3-row\r\n\r\n                    h1.w3-center Form Name: #{currentForm.form_name}\r\n\r\n                .w3-row\r\n                    .w3-twothird.w3-container2\r\n                        h2 Form Details\r\n                        hr\r\n\r\n\r\n                        .w3-half\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h3 Form Settings\r\n                                hr\r\n                                h4 Form Name: #{currentForm.form_name}\r\n                                h4#settingsVersion Version : #{currentForm.form_version}\r\n                                hr\r\n                                if currentForm.shared_status === true\r\n                                    h4#formDetailsSharingSetting Form Sharing : Allowed\r\n                                else\r\n                                    h4#formDetailsSharingSetting Form Sharing : Not Allowed\r\n                                hr\r\n                                h4#formDetailsStatusSetting Status : #{currentForm.form_status}\r\n                                hr\r\n                                if currentForm.allow_file_upload === true\r\n                                    h4#formDetailsUploadSetting File Uploading : Allowed\r\n                                else\r\n                                    h4#formDetailsUploadSetting File Uploading : Not Allowed\r\n                            //WHOEVER IS READING THIS -- THIS SECTION IS CURRENTLY UNDER DEVELOPMENT WHICH IS WHY IT IS HERE ATM. MOVE IT AND FACE THE WRATH OF DENMARK\r\n                            script.\r\n                                function dropDownUpdateCanvas(formControlNumber){\r\n                                    var versionChoice = document.getElementById(\"versionDropDown\").value;\r\n\r\n                                    const data = {\r\n                                        formControlNumber: formControlNumber,\r\n                                        versionChoice: versionChoice\r\n                                    };\r\n\r\n                                    $.ajax({\r\n                                        type: 'PUT',\r\n                                        url: '/AJAX_viewFormVersion',\r\n                                        data: data,\r\n                                        success: function(response) {\r\n                                            if (response.status_code === 0) {\r\n                                                // modal success\r\n                                                alert(\"Rendering the Chosen Version\");\r\n                                                document.getElementById(\"form-content\").innerHTML = response.formContent;\r\n                                                var formStatus = response.formStatus;\r\n                                                var sharedStatus = response.sharedStatus;\r\n                                                document.getElementById(\"settingsVersion\").innerHTML = \"Version : \" + response.formVersion;\r\n\r\n\r\n                                                if(sharedStatus == true){\r\n                                                    document.getElementById(\"formDetailsSharingSetting\").innerHTML = \"Form Sharing : Allowed\";\r\n                                                } else {\r\n                                                    document.getElementById(\"formDetailsSharingSetting\").innerHTML = \"Form Sharing : Not Allowed\";\r\n                                                }\r\n\r\n                                                if(formStatus === \"Template\"){\r\n                                                    document.getElementById(\"formDetailsStatusSetting\").innerHTML = \"Status : Template\";\r\n                                                    document.getElementById(\"togglePublishButton\").innerHTML = \"Publish Form\";\r\n                                                } else {\r\n                                                    document.getElementById(\"formDetailsStatusSetting\").innerHTML = \"Status : Published\";\r\n                                                    document.getElementById(\"togglePublishButton\").innerHTML = \"Un-publish Form\";\r\n                                                }\r\n                                            } else if (response.status_code === 1){\r\n                                                // modal error\r\n                                                alert(\"Error in Viewing Chosen Version\");\r\n                                            } else {\r\n                                                // modal error\r\n                                                alert(\"AJAX Error\");\r\n                                            }\r\n                                        },\r\n                                        error: function(error){\r\n                                            console.error('AJAX Error: ', error);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                function toggleSharing(){\r\n                                    var toggleSharingButton = `#{currentForm.shared_status}`;\r\n                                    var confirmationMessage;\r\n\r\n                                    if(toggleSharingButton === true){\r\n                                        confirmationMessage = \"Are you sure to DISABLE sharing of this form?\";\r\n                                    }else{\r\n                                        confirmationMessage = \"Are you sure to ENABLE sharing of this form?\";\r\n                                    }\r\n\r\n                                    var result = window.confirm(confirmationMessage);\r\n\r\n                                    if(result){\r\n                                        AJAX_shareStatus();\r\n                                    }\r\n                                }\r\n\r\n                                function AJAX_shareStatus(){\r\n                                    var toggleSharingButton = document.getElementById(\"toggleSharingButton\");\r\n                                    var formDetailsSharingSetting = document.getElementById(\"formDetailsSharingSetting\");\r\n\r\n                                    var data = {\r\n                                        formControlNumber: formBlock.form_control_number\r\n                                    };\r\n\r\n                                    $.ajax({\r\n                                        type:'PUT',\r\n                                        url: '/AJAX_toggleSharing',\r\n                                        data: data,\r\n                                        success: function(response) {\r\n                                            if(response.status_code === 0) {\r\n                                                // modal success\r\n                                                updatedStatus = response.updatedStatus;\r\n                                                if(updatedStatus == \"Allowed\"){\r\n                                                    toggleSharingButton.innerHTML = \"Disable Form Sharing\";\r\n                                                    formDetailsSharingSetting.innerHTML = \"Form Sharing : Allowed\";\r\n                                                }else{\r\n                                                    toggleSharingButton.innerHTML = \"Allow Form Sharing\";\r\n                                                    formDetailsSharingSetting.innerHTML = \"Form Sharing : Not Allowed\";\r\n                                                }\r\n                                            } else if(response.status_code === 1) {\r\n                                                // modal error\r\n                                                alert(\"There was an error updating the status\");\r\n                                            } else {\r\n                                                alert(response.error);\r\n                                            }\r\n                                        },\r\n                                        error: function(error){\r\n                                            console.error('AJAX Error: ' + error);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                function togglePublish(){\r\n                                    var togglePublishButtonValue = `#{currentForm.form_status}`;\r\n                                    var confirmationMessage;\r\n\r\n                                    if(togglePublishButtonValue == \"Published\"){\r\n                                        confirmationMessage = \"Are you sure you want to un-publish this form?\";\r\n                                    }else{\r\n                                        confirmationMessage = \"Are you sure you want to publish this form?\";\r\n                                    }\r\n\r\n                                    var result = window.confirm(confirmationMessage);\r\n\r\n                                    if(result){\r\n                                        AJAX_togglePublish();\r\n                                    }\r\n                                }\r\n\r\n                                function toggleAllowFileUpload(){\r\n                                    var toggleFileUploadButton = `#{currentForm.allow_file_upload}`;\r\n                                    var confirmationMessage;\r\n\r\n                                    if(toggleFileUploadButton === true){\r\n                                        confirmationMessage = \"Are you sure you want to UN-ALLOW file uploading in this form?\";\r\n                                    } else {\r\n                                        confirmationMessage = \"Are you sure you want to ALLOW file uploading in this form?\";\r\n                                    }\r\n\r\n                                    var result = window.confirm(confirmationMessage);\r\n\r\n                                    if(result) {\r\n                                        AJAX_toggleFileUpload();\r\n                                    }\r\n                                }\r\n\r\n                                function AJAX_toggleFileUpload(){\r\n                                    var toggleFileUploadButton = document.getElementById(\"toggleFileUploadButton\");\r\n                                    var formDetailsUploadSetting = document.getElementById(\"formDetailsUploadSetting\");\r\n\r\n                                    var data = {\r\n                                        formControlNumber: formBlock.form_control_number\r\n                                    };\r\n\r\n                                    $.ajax({\r\n                                        type:'PUT',\r\n                                        url: '/AJAX_toggleAllowFileUpload',\r\n                                        data: data,\r\n                                        success: function(response) {\r\n                                            if(response.status_code === 0) {\r\n                                                // modal success\r\n                                                updatedStatus = response.updatedStatus;\r\n                                                if(updatedStatus == \"Allowed\"){\r\n                                                    toggleFileUploadButton.innerHTML = \"Un-Allow File Uploading\";\r\n                                                    formDetailsUploadSetting.innerHTML = \"File Uploading : Allowed\";\r\n                                                }else{\r\n                                                    toggleFileUploadButton.innerHTML = \"Allow File Uploading\";\r\n                                                    formDetailsUploadSetting.innerHTML = \"File Uploading : Not Allowed\";\r\n                                                }\r\n                                            } else if(response.status_code === 1) {\r\n                                                // modal error\r\n                                                alert(\"There was an error updating the status\");\r\n                                            } else {\r\n                                                alert(response.error);\r\n                                            }\r\n                                        },\r\n                                        error: function(error){\r\n                                            console.error('AJAX Error: ' + error);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                function AJAX_togglePublish(){\r\n                                    var togglePublishButton = document.getElementById(\"togglePublishButton\");\r\n                                    var formDetailsStatusSetting = document.getElementById(\"formDetailsStatusSetting\");\r\n                                    var versionChoice = document.getElementById(\"versionDropDown\").value;\r\n\r\n                                    var data = {\r\n                                        formControlNumber: formBlock.form_control_number,\r\n                                        targetedVersion: versionChoice\r\n                                    };\r\n\r\n                                    $.ajax({\r\n                                        type:'PUT',\r\n                                        url: '/AJAX_togglePublish',\r\n                                        data: data,\r\n                                        success: function(response) {\r\n                                            if(response.status_code === 0) {\r\n                                                // modal success\r\n                                                updatedStatus = response.updatedStatus;\r\n                                                if(updatedStatus == \"Published\"){\r\n                                                    togglePublishButton.innerHTML = \"Un-publish Form\";\r\n                                                    formDetailsStatusSetting.innerHTML = \"Status : Published\";\r\n                                                }else{\r\n                                                    togglePublishButton.innerHTML = \"Publish Form\";\r\n                                                    formDetailsStatusSetting.innerHTML = \"Status : Template\";\r\n                                                }\r\n                                            } else if(response.status_code === 1) {\r\n                                                // modal error\r\n                                                alert(\"There was an error updating the status\");\r\n                                            } else {\r\n                                                alert(response.error);\r\n                                            }\r\n                                        },\r\n                                        error: function(error){\r\n                                            console.error('AJAX Error: ' + error);\r\n                                        }\r\n                                    });\r\n                                }\r\n                        .w3-half\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Version History\r\n                                hr\r\n                                .w3-row\r\n                                    select#versionDropDown(name='versionDropDown')\r\n                                        each version in allVersions\r\n                                            option #{version.form_version}\r\n                                    hr\r\n                                .w3-row\r\n                                    br\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick=`dropDownUpdateCanvas('${currentForm.form_control_number}')`)\r\n                                        i.fa.fa-refresh.fa-fw.w3-margin-right\r\n                                        |   Load Form\r\n\r\n                    .w3-third.w3-container2\r\n                        h2 Form Actions\r\n                        hr\r\n                        .w3-row\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                .w3-row\r\n                                    .w3-half\r\n                                        button.w3-button.w3-block.w3-theme-dark(onclick='saveForm()')\r\n                                            i.fa.fa-floppy-o.fa-fw.w3-margin-right\r\n                                            |   Save Form\r\n                                    .w3-half\r\n                                        button.w3-button.w3-block.w3-theme-dark(onclick='downloadAsPDF()')\r\n                                            i.fa.fa-download.fa-fw.w3-margin-right\r\n                                            |   Download as PDF\r\n                                .w3-row\r\n                                    br\r\n                                    if currentForm.shared_status === true\r\n                                        button#toggleSharingButton.w3-button.w3-block.w3-theme-dark(onclick='toggleSharing()') Un-allow Sharing\r\n                                    else\r\n                                        button#toggleSharingButton.w3-button.w3-block.w3-theme-dark(onclick='toggleSharing()') Allow Sharing\r\n\r\n                                    br\r\n                                    if currentForm.form_status === \"Template\"\r\n                                        button#togglePublishButton.w3-button.w3-block.w3-theme-dark(onclick='togglePublish()') Publish Form\r\n                                    else\r\n                                        button#togglePublishButton.w3-button.w3-block.w3-theme-dark(onclick='togglePublish()') Un-publish Form\r\n                                    br\r\n                                    if currentForm.allow_file_upload === true\r\n                                        button#toggleFileUploadButton.w3-button.w3-block.w3-theme-dark(onclick='toggleAllowFileUpload()') Do Not Allow Upload File\r\n                                    else\r\n                                        button#toggleFileUploadButton.w3-button.w3-block.w3-theme-dark(onclick='toggleAllowFileUpload()') Allow Upload File\r\n\r\n\r\n        .w3-row.w3-container2.w3-white.w3-round.w3-margin\r\n            h4.w3-bold Edit Form\r\n            input#formName.w3-col.s6.w3-input.w3-margin(placeholder=\"Edit Form Name\" required='' value=`${currentForm.form_name}`)\r\n            // input#formControlNumber.w3-col.s6.w3-input.w3-margin(placeholder=\"Type Form Control Number [Required]\" required='')\r\n            hr.w3-clear\r\n            p.w3-center\r\n            .w3-row.w3-container\r\n                .grid-container.w3-white\r\n                    //-.grid-item\r\n                    //-  label(for='textBoxSelect') Text Box:\r\n                    //-   select#textBoxSelect(onchange='createTextBox()')\r\n                    //-       option(value='no-function') Click to Select\r\n                    //-       option(value='normal-text') Normal Text\r\n                    //-       option(value='title') Title\r\n                     //-      option(value='paragraph') Subtitle\r\n                    .grid-item\r\n                        label(for='createPageMargin') Page Margin:\r\n                        select#createPageMargin(onchange='createPageMargin()')\r\n                            option(value='narrow') Narrow\r\n                            option(value='normal') Normal\r\n                            option(value='moderate') Moderate\r\n                    .grid-item\r\n                        label(for='modifyOrientation') Orientation:\r\n                        select#modifyOrientation(onchange='modifyOrientation()')\r\n                            option(value='portrait') Portrait\r\n                            option(value='landscape') Landscape\r\n\r\n                    .grid-item\r\n                        label(for='fontSizeSelect') Font Size:\r\n                        select#fontSizeSelect(onchange='changeFontSize()')\r\n                            // Generate font size options using JavaScript\r\n                            script.\r\n                                for (let i = 1; i <= 100; i++) {\r\n                                    document.write(`<option value=\"${i}\">${i}</option>`);\r\n                                }\r\n                    .grid-item.borderless\r\n                    .grid-item\r\n                        label(for='colorSelect') Select Text Color:\r\n                        select#colorSelect(onchange='changeTextColor()')\r\n                            option(value='black') Black\r\n                            option(value='white') White\r\n                            option(value='red') Red\r\n                            option(value='blue') Blue\r\n                            option(value='grey') Grey\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeBold()')\r\n                            i.fa.fa-bold.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeItalic()')\r\n                            i.fa.fa-italic.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeUnderline()')\r\n                            i.fa.fa-underline.icon-light\r\n                    .grid-item.borderless\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignLeft()')\r\n                            i.fa.fa-align-left.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignRight()')\r\n                            i.fa.fa-align-right.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignCenter()')\r\n                            i.fa.fa-align-center.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onclick='makeAlignJustify()')\r\n                            i.fa.fa-align-justify.icon-light\r\n                    .grid-item.borderless\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onClick='makeUnorderedList()')\r\n                            i.fa.fa-list-ul.icon-light\r\n                    .grid-item\r\n                        a.w3-bar-item.w3-button.w3-hide-small.w3-hover-white(onClick='makeOrderedList()')\r\n                            i.fa.fa-list-ol.icon-light\r\n\r\n\r\n            .w3-row.w3-container\r\n                .w3-twothird.w3-container\r\n                    #form-content.pages\r\n\r\n\r\n                .w3-third\r\n                    .page-container.w3-container.w3-white\r\n                        //LEI -- REFER TO createform_draggable_content FOR FUTURE REVISIONS\r\n                        include dragbar\r\n\r\n    script.\r\n        function saveForm(){\r\n            var formBody = document.getElementById('form-content').innerHTML;\r\n            var formName = document.getElementById('formName').value;\r\n            // var formControlNumber = document.getElementById('formControlNumber').value;\r\n            var formControlNumber = `#{currentForm.form_control_number}`;\r\n            var sharedStatus = document.getElementById('formDetailsSharingSetting').innerHTML;\r\n            var fileUploadStatus = document.getElementById('formDetailsUploadSetting').innerHTML;\r\n            if(fileUploadStatus == 'File Uploading : Allowed'){\r\n                fileUploadStatus = true;\r\n            } else {\r\n                fileUploadStatus = false;\r\n            }\r\n\r\n            if(sharedStatus == 'Form Sharing : Not Allowed'){\r\n                sharedStatus = false;\r\n            } else {\r\n                sharedStatus = true;\r\n            }\r\n\r\n            const data = {\r\n                name: formName,\r\n                formControlNumber: formControlNumber,\r\n                formContent: formBody,\r\n                formStatus: \"Template\",\r\n                sharedStatus: sharedStatus,\r\n                fileUploadStatus: fileUploadStatus\r\n            };\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                url: '/saveformversion',\r\n                contentType: 'application/json',\r\n                data: JSON.stringify(data),\r\n                success: function (data) {\r\n                    if (data.success) {\r\n                        window.location.href = '/';\r\n                    } else if (data.status_code === 1) {\r\n                        alert(\"Form name already exists. Proceed to view form templates to edit the form instead!\");\r\n                    } else {\r\n                        alert(\"Error in AJAX function.\");\r\n                    }\r\n                },\r\n                error: function (error) {\r\n                    console.error('AJAX error:', error);\r\n                }\r\n            });\r\n        }\r\n\r\n        //end of play playground\r\n\r\n    script.\r\n        // Not working, to be debugged\r\n        function restrictCheckBoxSelection() {\r\n        const checkboxes = document.querySelectorAll('input[name=\"academicStatus\"]');\r\n        console.log(checkboxes);\r\n            console\r\n          // Add a change event listener to each checkbox\r\n                    checkboxes.forEach((checkbox) => {\r\n                        checkbox.addEventListener('change', function () {\r\n                            // Uncheck all other checkboxes in the group\r\n                            checkboxes.forEach((otherCheckbox) => {\r\n                                if (otherCheckbox !== this) {\r\n                                    otherCheckbox.checked = false;\r\n                                }\r\n                            });\r\n                        });\r\n                    });\r\n        }\r\n\r\n        restrictCheckBoxSelection();\r\n\r\n        /* Set the width of the sidebar to 250px and the left margin of the page content to 250px */\r\n        function openNavigation() {\r\n            // Get the element by its ID\r\n            const sidebar = document.getElementById(\"mySidebar\");\r\n            const main = document.getElementById(\"main\");\r\n            // Toggle the classes for showing/hiding the sidebar\r\n            sidebar.classList.toggle(\"w3-show\");\r\n            // Toggle the margin of the main content\r\n            main.style.marginLeft = \"250px\";\r\n            }\r\n        /* Set the width of the sidebar to 0 and the left margin of the page content to 0 */\r\n        function closeNav() {\r\n            document.getElementById(\"mySidebar\").style.width = \"0\";\r\n            document.getElementById(\"main\").style.marginLeft = \"0\";\r\n        }\r\n\r\n\r\n    link(rel='stylesheet' href='../css/text_editor.css')\r\n    link(rel='stylesheet' href='../css/create_form_style.css')\r\n\r\n    script.\r\n        //THE ONLY REASON THIS IS HERE IS BECAUSE WEDNESDAY COMES AFTER TUESDAY\r\n        var formBlock = !{JSON.stringify(currentForm)};\r\n        var receivedFormContent = formBlock.form_content;\r\n        var theContainerOfTheForm = document.getElementById('form-content');\r\n        theContainerOfTheForm.innerHTML = receivedFormContent;\r\n\r\n    script(src='https://code.jquery.com/jquery-1.12.4.js')\r\n    script(src='https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js')\r\n    script(src='https://html2canvas.hertzen.com/dist/html2canvas.js')\r\n    //script(src='../js/viewform.js')\r\n    script(src='../js/create_form_drag_drop.js')\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/viewformtemplate.pug b/views/viewformtemplate.pug
--- a/views/viewformtemplate.pug	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/views/viewformtemplate.pug	(date 1700339284000)
@@ -50,7 +50,7 @@
                                             if (response.status_code === 0) {
                                                 // modal success
                                                 alert("Rendering the Chosen Version");
-                                                document.getElementById("form-content").innerHTML = response.formContent;
+                                                document.getElementById("enginePlaceHolder").innerHTML = response.formContent;
                                                 var formStatus = response.formStatus;
                                                 var sharedStatus = response.sharedStatus;
                                                 document.getElementById("settingsVersion").innerHTML = "Version : " + response.formVersion;
@@ -368,7 +368,8 @@
 
             .w3-row.w3-container
                 .w3-twothird.w3-container
-                    #form-content.pages
+                    #enginePlaceHolder
+                    //#form-content.pages
 
 
                 .w3-third
@@ -376,9 +377,16 @@
                         //LEI -- REFER TO createform_draggable_content FOR FUTURE REVISIONS
                         include dragbar
 
+    script(src='../js/client.engine/htmlToJson.js')
     script.
         function saveForm(){
-            var formBody = document.getElementById('form-content').innerHTML;
+            var inputFieldValuesJSON = iterateAndGetData();
+            //var formBody = document.getElementById('form-content').innerHTML;
+            var formBody = document.getElementById('form-content');
+
+            formBody = elementToJson(formBody,inputFieldValuesJSON);
+            getNewKeyID(formBody);
+
             var formName = document.getElementById('formName').value;
             // var formControlNumber = document.getElementById('formControlNumber').value;
             var formControlNumber = `#{currentForm.form_control_number}`;
@@ -433,17 +441,17 @@
         const checkboxes = document.querySelectorAll('input[name="academicStatus"]');
         console.log(checkboxes);
             console
-          // Add a change event listener to each checkbox
-                    checkboxes.forEach((checkbox) => {
-                        checkbox.addEventListener('change', function () {
-                            // Uncheck all other checkboxes in the group
-                            checkboxes.forEach((otherCheckbox) => {
-                                if (otherCheckbox !== this) {
-                                    otherCheckbox.checked = false;
-                                }
-                            });
-                        });
-                    });
+            // Add a change event listener to each checkbox
+            checkboxes.forEach((checkbox) => {
+                checkbox.addEventListener('change', function () {
+                    // Uncheck all other checkboxes in the group
+                    checkboxes.forEach((otherCheckbox) => {
+                        if (otherCheckbox !== this) {
+                            otherCheckbox.checked = false;
+                        }
+                    });
+                });
+            });
         }
 
         restrictCheckBoxSelection();
@@ -469,16 +477,14 @@
     link(rel='stylesheet' href='../css/create_form_style.css')
 
     script.
-        //THE ONLY REASON THIS IS HERE IS BECAUSE WEDNESDAY COMES AFTER TUESDAY
         var formBlock = !{JSON.stringify(currentForm)};
         var receivedFormContent = formBlock.form_content;
-        var theContainerOfTheForm = document.getElementById('form-content');
-        theContainerOfTheForm.innerHTML = receivedFormContent;
+        var enginePlaceHolder = document.getElementById('enginePlaceHolder');
+        enginePlaceHolder.innerHTML = receivedFormContent;
 
     script(src='https://code.jquery.com/jquery-1.12.4.js')
     script(src='https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js')
     script(src='https://html2canvas.hertzen.com/dist/html2canvas.js')
-    //script(src='../js/viewform.js')
     script(src='../js/create_form_drag_drop.js')
 
 
Index: index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const { app,\r\n        express,\r\n        session,\r\n        http,\r\n        socketIo,\r\n        path,\r\n        bodyParser,\r\n        multer,\r\n        fs } = require('./imports.js');\r\n\r\nconst config = require('./configinit.js');\r\n\r\nconst url = `mongodb://${config.database.host}:${config.database.port}`;\r\nconst dbName = config.database.name;\r\n//engine\r\nconst { JSDOM } = require('jsdom');\r\n//end of engine\r\n\r\nconst { MongoClient,\r\n        initializeUsersCollectionConnection,\r\n        initializePrivilegesCollectionConnection,\r\n        initializeFilesCollectionConnection,\r\n        initializeNotificationsCollectionConnection,\r\n        initializeDatabaseConnection,\r\n        initializeFormsCollectionConnection,\r\n        initializeWidgetsCollectionConnection,\r\n        initializeFilledOutFormCollectionConnection } = require('./dbinit.js');\r\n\r\nconst db = initializeDatabaseConnection(url,dbName);\r\nconst users = initializeUsersCollectionConnection(db);\r\nconst files = initializeFilesCollectionConnection(db);\r\nconst privileges = initializePrivilegesCollectionConnection(db);\r\nconst notifications = initializeNotificationsCollectionConnection(db);\r\nconst forms = initializeFormsCollectionConnection(db);\r\nconst widgets = initializeWidgetsCollectionConnection(db);\r\nconst filledoutforms = initializeFilledOutFormCollectionConnection(db);\r\n\r\nconst port = config.port;\r\nconst debug_mode = config.debug_mode;\r\nconst min_idleTime = config.min_idleTime;\r\nconst server = http.createServer(app);\r\nconst io = socketIo(server);\r\n\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use('/views/src', express.static(path.join(__dirname, 'views', 'src')));\r\napp.use(express.static(path.join(__dirname, 'views')));\r\napp.use('/uploads', express.static('uploads'));\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\nvar currentUserFiles;\r\nvar currentUserDetailsBlock;\r\nvar currentUserPrivileges;\r\nvar currentUserNotifications;\r\nvar filesDocuments;\r\n\r\napp.use(\r\n    session({\r\n        secret: 'your secret here',\r\n        resave: false,\r\n        saveUninitialized: true\r\n    })\r\n);\r\n\r\n\r\nserver.listen(port, () => {\r\n    console.log(\"Server started \\nPort: \" + port + \"\\nDebug mode: \" + debug_mode + \"\\nMinimum User idle time: \" + min_idleTime);\r\n});\r\n\r\n\r\n// WebSocket logic\r\nio.on('connection', (socket) => {\r\n    //console.log('A user connected');\r\n\r\n    //const sessionData = socket.handshake.session;\r\n    //console.log('Session data:', sessionData);\r\n\r\n    socket.on('manualPing', (data) => {\r\n        console.log('Received client ping:', data);\r\n        socket.emit('manualPong', 'Server received: ' + data);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n        //console.log('A user disconnected');\r\n    });\r\n});\r\n\r\n\r\nconst storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        const uploadDirectory = 'uploads/' + req.session.userEmpID;\r\n        fs.mkdirSync(uploadDirectory, { recursive: true });\r\n        cb(null, uploadDirectory);\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, file.originalname);\r\n    }\r\n});\r\n\r\nconst upload = multer({ storage: storage });\r\n\r\nconst pictureStorage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        const uploadDirectory = 'views/profile_pictures/' + req.session.userEmpID;\r\n        fs.mkdirSync(uploadDirectory, { recursive: true });\r\n        cb(null, uploadDirectory);\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, file.originalname);\r\n    }\r\n});\r\n\r\nconst pictureUpload = multer({ storage: pictureStorage });\r\n\r\napp.get('/deletefile/:file_name', function(req, res){\r\n    var selectedFileForDeletion = req.params.file_name;\r\n\r\n    if(debug_mode){\r\n        logStatus(\"No file being deleted get delete file function: \" + selectedFileForDeletion);\r\n    }\r\n\r\n    function deleteFile(filePath, callback) {\r\n        fs.unlink(filePath, function (err) {\r\n            if (err) {\r\n                callback(err);\r\n            } else {\r\n                callback(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    var filePathToDelete = \"uploads/\" + req.session.userEmpID + \"/\"  + selectedFileForDeletion;\r\n\r\n    deleteFile(filePathToDelete, function (err) {\r\n        if (err) {\r\n            if(debug_mode){\r\n                logStatus(\"Error deleting file:\" + err);\r\n            }\r\n        } else {\r\n            if(debug_mode){\r\n                logStatus(\"File deleted successfully.\");\r\n            }\r\n        }\r\n    });\r\n\r\n    const deleteCriteria = {file_name: selectedFileForDeletion, uploadedBy: req.session.userEmpID};\r\n\r\n    files.deleteOne(deleteCriteria, function (err, result) {\r\n        if (err) {\r\n            if(debug_mode){\r\n                logStatus(\"Error deleting document:\" + err);\r\n            }\r\n        } else {\r\n            if(debug_mode){\r\n                logStatus(\"Document deleted successfully.\")\r\n            }\r\n        }\r\n    });\r\n    res.redirect('/');\r\n});\r\n\r\napp.get('/downloadfile/:file_name', function(req, res){\r\n    var selectedFileForDownload = req.params.file_name;\r\n\r\n    if(debug_mode){\r\n        logStatus(\"User entered download request: \" + selectedFileForDownload);\r\n    }\r\n\r\n    res.download(\"./uploads/\" + req.session.userEmpID + \"/\" + selectedFileForDownload);\r\n\r\n});\r\n\r\n//ENGINE\r\n//-------------------------HTML TO JSON\r\n\r\nasync function addKeyId(){\r\n\r\n}\r\n\r\nasync function htmlToJson(element) {\r\n    const jsonElementFormat = {\r\n        ele_type: element.nodeName ? element.nodeName.toLowerCase() : 'unknown',\r\n        ele_attributes: {\r\n            key: null,\r\n        },\r\n        ele_contents: [],\r\n    };\r\n\r\n    if (element.attributes) {\r\n        for (let i = 0; i < element.attributes.length; i++) {\r\n            const attr = element.attributes.item(i);\r\n            jsonElementFormat.ele_attributes[attr.name] = attr.value;\r\n        }\r\n    }\r\n\r\n    if (element.childNodes) {\r\n        for (let i = 0; i < element.childNodes.length; i++) {\r\n            const childNode = element.childNodes[i];\r\n            if (childNode.nodeType === 1) {\r\n                const childJson = await htmlToJson(childNode);\r\n                jsonElementFormat.ele_contents.push(childJson);\r\n            } else if (childNode.nodeType === 3) {\r\n                const trimmedText = childNode.textContent.trim();\r\n                if (trimmedText !== '') {\r\n                    jsonElementFormat.ele_contents.push(trimmedText);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return jsonElementFormat;\r\n}\r\n//-------------------------JSON TO HTML\r\n\r\nasync function jsonToHTML(jsonDataArray, indentLevel = 0) {\r\n    const selfClosingTags = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\r\n    const indent = '    '.repeat(indentLevel);\r\n\r\n    let html = '';\r\n\r\n    for (const jsonData of jsonDataArray) {\r\n        html += `${indent}<${jsonData.ele_type}`;\r\n\r\n        for (const [attributeName, attributeValue] of Object.entries(jsonData.ele_attributes)) {\r\n            html += ` ${attributeName}=\"${attributeValue}\"`;\r\n        }\r\n\r\n        const isSelfClosing = selfClosingTags.includes(jsonData.ele_type);\r\n\r\n        if (isSelfClosing) {\r\n            html += '>\\n';\r\n        } else {\r\n            html += '>\\n';\r\n\r\n            for (const child of jsonData.ele_contents) {\r\n                if (typeof child === 'object') {\r\n                    html += await jsonToHTML([child], indentLevel + 1);\r\n                } else {\r\n                    html += `${'    '.repeat(indentLevel + 1)}${child}\\n`;\r\n                }\r\n            }\r\n\r\n            html += `${indent}</${jsonData.ele_type}>\\n`;\r\n        }\r\n    }\r\n\r\n    return html;\r\n}\r\n\r\n/*async function getLatestuserVersion(owner, controlNumber){\r\n    console.log(\"looking for \" + owner + \" of \" + controlNumber);\r\n    var versionList = await filledoutforms.find({ form_control_number : controlNumber, form_owner : owner }).toArray();\r\n    console.log(\"logging version list var\" + JSON.stringify(versionList));\r\n    var versionCount = 0;\r\n    var latestUserVersion = 0;\r\n\r\n\r\n    for(i=0; i < versionList.length; i++){\r\n        if(versionList[i].form_version >= latestUserVersion){\r\n            latestUserVersion = versionList[i].form_version;\r\n        }\r\n        versionCount = versionCount + 1;\r\n        console.log(\"logging version\" + versionList[i].form_version + \" of \" + controlNumber);\r\n    }\r\n\r\n\r\n    console.log(versionCount);\r\n    console.log(latestUserVersion + \"is the latest version\");\r\n}\r\n*/\r\n\r\n\r\n//END OF ENGINE\r\napp.post('/savecreatedform', async function(req, res){\r\n    try {\r\n        var latestForm;\r\n        var currentDate = new Date();\r\n        var date = currentDate.toDateString();\r\n        var time = currentDate.toTimeString().split(' ')[0];\r\n        var formData = req.body;\r\n        //------------------ENGINE PLAYGROUND\r\n        var v = new JSDOM(formData.formContent);\r\n        var rootElement = v.window.document.querySelector('.drop-container');\r\n        var jsonArray = [];\r\n        var w = await htmlToJson(rootElement);\r\n        jsonArray.push(w);\r\n        // var x = JSON.stringify([w],null,2); // goods\r\n        // console.log(x); // goods\r\n\r\n        // var y = JSON.parse(x);\r\n        // var z = await jsonToHTML(y);\r\n        // console.log(z);\r\n        //------------------END OF PLAYGROUND\r\n\r\n        // PLAYGROUND NI JIAN\r\n        latestForm = await forms.findOne({ form_name : formData.name });\r\n\r\n        if(latestForm && formData.name === latestForm.form_name){\r\n            res.json({ status_code : 1 });// Form Name already exists\r\n        } else {\r\n            const formDocument = {\r\n                form_name: formData.name,\r\n                form_control_number: formData.formControlNumber.toString(),\r\n                //form_content: formData.formContent,\r\n                form_content: jsonArray,\r\n                form_version: 0,\r\n                form_status: formData.formStatus,\r\n                shared_status: false,\r\n                allow_file_upload: false,\r\n                date_saved: getDateNow(),\r\n                time_saved: getTimeNow()\r\n            };\r\n\r\n            //console.log(\"This is the Form Document: \" + JSON.stringify(formDocument));\r\n            const result = await forms.insertOne(formDocument);\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Created form saved at database: \" + result);\r\n            }\r\n\r\n            res.json({ success: true });\r\n        }\r\n    } catch (error) {\r\n        logStatus(\"Error at saved created form: \" + error);\r\n    }\r\n});\r\n\r\napp.post('/saveformversion', async function(req, res){\r\n    var formData = req.body;\r\n    var latestVersion = 0;\r\n    var newVersionNumber = 0;\r\n    var latestAssignedUsers = [];\r\n    var formHistory = await forms.find({ form_control_number : formData.formControlNumber }).toArray();\r\n\r\n    console.log(\"THE LENGTH IS\" + formHistory.length);\r\n    console.log(\"WE ARE LOOKING FOR THIS CONTROL NUMBER \" + formData.formControlNumber);\r\n\r\n    for(i=0; i < formHistory.length; i++) {\r\n        console.log(\"Entered 334 iteration\");\r\n        if(formHistory[i].form_version >= latestVersion) {\r\n            latestVersion = formHistory[i].form_version;\r\n            fileUploadStatus = formHistory[i].allow_file_upload;\r\n\r\n            latestAssignedUsers = formHistory[i].assigned_users;\r\n            if(formHistory[i].read_users){\r\n                let uniqueAssignedUsers = new Set([...latestAssignedUsers, ...formHistory[i].assigned_users]);\r\n                latestAssignedUsers = Array.from(uniqueAssignedUsers);\r\n            }\r\n        }\r\n    }\r\n    newVersionNumber = latestVersion + 1;\r\n\r\n    try {\r\n        var latestForm;\r\n        var currentDate = new Date();\r\n        var date = currentDate.toDateString();\r\n        var time = currentDate.toTimeString().split(' ')[0];\r\n        var formData = req.body;\r\n        var v = new JSDOM(formData.formContent);\r\n        var rootElement = v.window.document.querySelector('.drop-container');\r\n        var jsonArray = [];\r\n        var w = await htmlToJson(rootElement);\r\n        jsonArray.push(w);\r\n\r\n        const formDocument = {\r\n            form_name: formData.name,\r\n            form_control_number: formData.formControlNumber.toString(),\r\n            //form_content: formData.formContent,\r\n            form_content: jsonArray,\r\n            form_version: newVersionNumber,\r\n            form_status: formData.formStatus,\r\n            shared_status: Boolean(formData.sharedStatus),\r\n            allow_file_upload: fileUploadStatus,\r\n            date_saved: getDateNow(),\r\n            time_saved: getTimeNow(),\r\n            assigned_users: latestAssignedUsers\r\n        };\r\n\r\n        //console.log(\"This is the Form Document: \" + JSON.stringify(formDocument));\r\n        const result = await forms.insertOne(formDocument);\r\n\r\n        if(debug_mode){\r\n            logStatus(\"Saved new form version in database: \" + result);\r\n        }\r\n\r\n        res.json({ success: true });\r\n\r\n    } catch (error) {\r\n        logStatus(\"Error at save form version: \" + error);\r\n    }\r\n});\r\n\r\napp.post('/savecreatedwidget', async function(req, res){\r\n    try {\r\n        var widgetData = req.body;\r\n        //------------------ENGINE PLAYGROUND ---- WILL CONVERT WIDGET TO JSON WHEN ENGINE READY\r\n        //var v = new JSDOM(formData.formContent);\r\n        //var rootElement = v.window.document.querySelector('.drop-container');\r\n        //var w = await htmlToJson(rootElement);\r\n        //var x = JSON.stringify([w],null,2); // goods\r\n        //console.log(x); // goods\r\n\r\n        //var y = JSON.parse(x);\r\n        //var z = await jsonToHTML(y);\r\n        //console.log(z);\r\n        //------------------END OF PLAYGROUND\r\n\r\n        const widgetDocument = {\r\n            widget_name: widgetData.name,\r\n            widget_content: widgetData.widgetContent,\r\n            widget_owner: req.session.userEmpID\r\n        };\r\n\r\n        //console.log(\"This is the Form Document: \" + JSON.stringify(formDocument));\r\n        const result = await widgets.insertOne(widgetDocument);\r\n\r\n        if(debug_mode){\r\n            logStatus(\"Saved created widget in database: \" + result);\r\n        }\r\n\r\n    } catch (error) {\r\n        logStatus(\"Error at save created widget: \" + error);\r\n    }\r\n    res.json({ success: true });\r\n});\r\n\r\napp.post('/formautosave', async function (req, res){\r\n    try{\r\n        var formData = req.body;\r\n        var currentDate = new Date();\r\n        var date = currentDate.toDateString();\r\n        var time = currentDate.toTimeString().split(' ')[0];\r\n        var v = new JSDOM(formData.formContent);\r\n        var rootElement = v.window.document.querySelector('.drop-container');\r\n        var jsonArray = [];\r\n        var w = await htmlToJson(rootElement);\r\n        jsonArray.push(w);\r\n\r\n        const formDocument = {\r\n            form_name: formData.formName,\r\n            form_control_number: formData.formControlNumber.toString(),\r\n            form_content: jsonArray,\r\n            form_version: formData.formVersion + 1,\r\n            form_status: formData.formStatus,\r\n            last_edited: `${date} ${time}`\r\n        };\r\n\r\n        const result = await filledoutforms.insertOne(formDocument);\r\n        res.send({ status_code : 0});\r\n    } catch (error) {\r\n        logStatus(\"Error at form view POST: \" + error);\r\n    }\r\n\r\n});\r\n\r\nfunction getDateNow(){\r\n    var currentDate = new Date();\r\n    var date = currentDate.toDateString();\r\n\r\n    return date;\r\n}\r\n\r\nfunction getTimeNow(){\r\n    var currentDate = new Date();\r\n    var time = currentDate.toTimeString().split(' ')[0];\r\n\r\n    return time;\r\n}\r\n\r\napp.put('/savefilledoutform', async function(req, res){\r\n    var selectedFormControlNumberToView = req.session.form_control_number;\r\n    formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n    var latestVersion = 0;\r\n    var latestUserVersion = 0;\r\n    var initialUserVersion = 0;\r\n    var latestSharedStatus;\r\n    var latestWriteUsers = [];\r\n    var latestReadUsers = [];\r\n    var userFormVersions = await filledoutforms.find({ form_control_number : selectedFormControlNumberToView,  form_owner: req.session.userEmpID}).toArray();\r\n    var allUserFormVersions = [];\r\n\r\n    for(i=0; i < formVersions.length; i++){\r\n        if(formVersions[i].form_version >= latestVersion){\r\n            latestVersion = formVersions[i].form_version;\r\n        }\r\n    }\r\n\r\n    var currentForm = await forms.findOne({ form_control_number : selectedFormControlNumberToView, form_version: latestVersion });\r\n\r\n    for(i=0; i < userFormVersions.length; i++){\r\n        if(userFormVersions[i].user_version >= latestUserVersion){\r\n            latestUserVersion = userFormVersions[i].user_version;\r\n            latestSharedStatus = userFormVersions[i].shared_status;\r\n            if(userFormVersions[i].read_users){\r\n                let uniqueReadUsers = new Set([...latestReadUsers, ...userFormVersions[i].read_users]);\r\n                latestReadUsers = Array.from(uniqueReadUsers);\r\n            }\r\n            if(userFormVersions[i].write_users){\r\n                let uniqueWriteUsers = new Set([...latestWriteUsers, ...userFormVersions[i].write_users]);\r\n                latestWriteUsers = Array.from(uniqueWriteUsers);\r\n            }\r\n        }\r\n    }\r\n\r\n    try{\r\n        var formToSave = req.body;\r\n        var a = new JSDOM(formToSave.formContent);\r\n        var rootElement = a.window.document.querySelector('.drop-container');\r\n        var jsonArray = [];\r\n        var b = await htmlToJson(rootElement);\r\n        jsonArray.push(b);\r\n\r\n        if(!formToSave){\r\n            res.send({ status_code: 1 });\r\n        } else {\r\n            const filledOutDocument = {\r\n                form_name: currentForm.form_name,\r\n                form_control_number: currentForm.form_control_number,\r\n                form_content: jsonArray,\r\n                form_version: currentForm.form_version,\r\n                form_status: currentForm.form_status,// add function to identify form type from ongoing to submitted\r\n                shared_status: latestSharedStatus,\r\n                date_saved: getDateNow(),\r\n                time_saved: getTimeNow(),\r\n                user_version: latestUserVersion + 1,\r\n                form_owner: req.session.userEmpID,\r\n                read_users: latestReadUsers,\r\n                write_users: latestWriteUsers\r\n            };\r\n\r\n            const result = await filledoutforms.insertOne(filledOutDocument);\r\n\r\n            userFormVersions = await filledoutforms.find({ form_control_number : selectedFormControlNumberToView,  form_owner: req.session.userEmpID}).toArray();\r\n\r\n            for(i=0; i < userFormVersions.length; i++){\r\n                if(userFormVersions[i].user_version >= initialUserVersion){\r\n                    allUserFormVersions.push(userFormVersions[i].user_version);\r\n                }\r\n            }\r\n            res.send({ status_code : 0, allUserFormVersions : allUserFormVersions });\r\n        }\r\n    } catch (error) {\r\n        logStatus(\"There is an error at save filled out form: \" + error);\r\n    }\r\n});\r\n\r\napp.get('/formview/:form_control_number', async function (req, res){\r\n    req.session.form_control_number = req.params.form_control_number;\r\n\r\n    currentUserFiles = await getFiles(req.session.userEmpID);\r\n    currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n    currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n    currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n    currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n    retrievedUserEmails = await getUsersEmails();\r\n\r\n    var retrievedUserEmails;\r\n    var selectedFormControlNumberToView = req.params.form_control_number;\r\n    formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n    var allVersions = await filledoutforms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n    var latestVersion = 0;\r\n    var latestUserVersion = 0;\r\n\r\n    for(i=0; i < formVersions.length; i++){\r\n        if(formVersions[i].form_version >= latestVersion){\r\n            latestVersion = formVersions[i].form_version;\r\n        }\r\n    }\r\n\r\n    var currentForm = await forms.findOne({ form_control_number : selectedFormControlNumberToView, form_version: latestVersion });\r\n    var userFormVersions = await filledoutforms.find({ form_control_number : selectedFormControlNumberToView,  form_owner: req.session.userEmpID}).toArray();\r\n    var latestUserForm;\r\n    var jsonObject;\r\n\r\n    if(currentUserDetailsBlock.userLevel == \"Secretary\"){\r\n        jsonObject = currentForm;\r\n    }else if(currentUserDetailsBlock.userLevel == \"Department Head\"){\r\n        jsonObject = currentForm;\r\n    }else{\r\n        if(userFormVersions == 0){\r\n            //save latest verion as user version0 to filled out forms\r\n            jsonObject = currentForm;\r\n            const filledOutDocument = {\r\n                form_name: currentForm.form_name,\r\n                form_control_number: currentForm.form_control_number,\r\n                form_content: currentForm.form_content,\r\n                form_version: currentForm.form_version,\r\n                form_status: \"On-going\",\r\n                shared_status: Boolean(currentForm.shared_status),\r\n                date_saved: getDateNow(),\r\n                time_saved: getTimeNow(),\r\n                user_version: 0,\r\n                form_owner: req.session.userEmpID\r\n            };\r\n\r\n            const result = await filledoutforms.insertOne(filledOutDocument);\r\n        }else{\r\n            for(i = 0; i < userFormVersions.length; i++){\r\n                if(userFormVersions[i].user_version >= latestUserVersion){\r\n                    latestUserVersion = userFormVersions[i].user_version;\r\n                }\r\n            }\r\n            latestUserFilledVersion = await filledoutforms.findOne({ form_control_number : selectedFormControlNumberToView, user_version: latestUserVersion });\r\n\r\n            jsonObject = latestUserFilledVersion;\r\n\r\n            if(currentForm.form_version != latestUserFilledVersion.form_version){\r\n                jsonObject.form_content = await updateToLatestVersion(currentForm.form_content, latestUserFilledVersion.form_content);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    console.log(\"This is the json object: \" + jsonObject);\r\n    var e = jsonObject.form_content;\r\n    var g = await jsonToHTML(e);\r\n    jsonObject.form_content = g;\r\n\r\n    res.render('formview', {\r\n        title: 'View Forms',\r\n        retrievedUserEmails : retrievedUserEmails,\r\n        currentUserDetailsBlock : currentUserDetailsBlock,\r\n        currentUserFiles: currentUserFiles,\r\n        currentUserPrivileges: currentUserPrivileges,\r\n        currentUserNotifications: currentUserNotifications,\r\n        currentForm: jsonObject,\r\n        currentUserPicture: currentUserPicture,\r\n        allVersions: allVersions,\r\n        min_idleTime: min_idleTime\r\n    });\r\n});\r\n\r\napp.put('/shareform', async function(req, res){\r\n    try {\r\n        var formData = req.body;\r\n        var selectedFormControlNumberToView = formData.formControlNumber;\r\n        var formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n        var latestVersion = 0;\r\n\r\n        for(i=0; i < formVersions.length; i++){\r\n            if(formVersions[i].form_version >= latestVersion){\r\n                latestVersion = formVersions[i].form_version;\r\n            }\r\n        }\r\n\r\n        if(!formData.shareTo){\r\n            res.send({status_code : 1});\r\n        } else {\r\n            if(formData.sharedUserPrivileges == 'Viewer'){\r\n                const result = await filledoutforms.findOneAndUpdate(\r\n                    { form_control_number : selectedFormControlNumberToView, form_version : latestVersion },\r\n                    { $addToSet: { \"read_users\" : formData.shareTo } },\r\n                    { returnNewDocument : true }\r\n                );\r\n\r\n                const secondresult = await notifications.insertOne({\r\n                    sender: req.session.userEmpID,\r\n                    receiver: formData.shareTo,\r\n                    time_sent: getTimeNow(),\r\n                    date_sent: getDateNow(),\r\n                    status: \"Unseen\",\r\n                    link: \"Sample Link\"\r\n                });\r\n\r\n                res.send({ status_code: 0 });\r\n            } else if (formData.sharedUserPrivileges == 'Editor') {\r\n                const result = await filledoutforms.findOneAndUpdate(\r\n                    { form_control_number : selectedFormControlNumberToView, form_version : latestVersion },\r\n                    { $addToSet: { \"write_users\" : formData.shareTo } },\r\n                    { returnNewDocument : true }\r\n                );\r\n\r\n                const secondresult = await notifications.insertOne({\r\n                    sender: req.session.userEmpID,\r\n                    receiver: formData.shareTo,\r\n                    time_sent: getTimeNow(),\r\n                    date_sent: getDateNow(),\r\n                    status: \"Unseen\",\r\n                    link: \"Sample Link\"\r\n                });\r\n\r\n                res.send({ status_code: 0 });\r\n            } else {\r\n                if(debug_mode){\r\n                    logStatus(\"Could not insert shared user.\");\r\n                }\r\n                res.send({ status_code: 2 });\r\n            }\r\n        }\r\n    } catch(error) {\r\n        logStatus(\"Error at share form POST: \" + error);\r\n    }\r\n});\r\n\r\napp.get('/viewformtemplate/:form_control_number', async function (req, res){\r\n    var selectedFormControlNumberToView = req.params.form_control_number;\r\n    formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n    var allVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n    var latestVersion = 0;\r\n\r\n    for(i=0; i < formVersions.length; i++){\r\n        if(formVersions[i].form_version >= latestVersion){\r\n            latestVersion = formVersions[i].form_version;\r\n        }\r\n    }\r\n\r\n    try{\r\n        var currentForm;\r\n\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentForm = await forms.findOne({ form_control_number: selectedFormControlNumberToView, form_version: latestVersion });\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        //--\r\n        //let jsonObject = JSON.parse(currentForm);\r\n        let jsonObject = currentForm;\r\n        var e = jsonObject.form_content;\r\n        var g = await jsonToHTML(e);\r\n        try{\r\n            // console.log(\"hindi nag error\");\r\n            // console.log(g);\r\n            //console.log(jsonObject.form_content );\r\n            jsonObject.form_content = g;\r\n\r\n\r\n            //updatedJsonString = JSON.stringify(jsonObject);\r\n        }catch{\r\n            console.log('NAG ERROR NA NANG SOBRA')\r\n        }\r\n        //--\r\n\r\n        res.render('viewformtemplate', {\r\n            title: 'View Forms',\r\n            currentUserDetailsBlock : currentUserDetailsBlock,\r\n            currentUserFiles: currentUserFiles,\r\n            currentUserPrivileges: currentUserPrivileges,\r\n            currentUserNotifications: currentUserNotifications,\r\n            currentForm: jsonObject,\r\n            currentUserPicture: currentUserPicture,\r\n            allVersions: allVersions,\r\n            min_idleTime: min_idleTime\r\n        });\r\n\r\n    }catch(error){\r\n        logStatus(\"Error at viewformtemplate with controlnumber: \" + error);\r\n    }\r\n});\r\n\r\napp.get('/', async function (req, res) {\r\n    try {\r\n        if (!req.session.loggedIn) {\r\n            res.redirect('login');\r\n            return;\r\n        }else{\r\n            currentUserFiles = await getFiles(req.session.userEmpID);\r\n            currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n            currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n            currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n            currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n            res.render('index', {\r\n                title: 'Home Page',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n        }\r\n\r\n    } catch (error) {\r\n        logStatus(\"Error at index: \" + error);\r\n    }\r\n});\r\n\r\napp.get('/accountsettings', async function (req, res) {\r\n    try {\r\n        if (!req.session.loggedIn) {\r\n            res.redirect('login');\r\n            return;\r\n        }else{\r\n            currentUserFiles = await getFiles(req.session.userEmpID);\r\n            currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n            currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n            currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n            currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n            res.render('accountsettings', {\r\n                title: 'Account Settings',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n        }\r\n\r\n    } catch (error) {\r\n        logStatus(\"Error at account settings: \" + error);\r\n    }\r\n});\r\n\r\napp.post('/', upload.single('file'), async function (req, res) {\r\n    const uploadedFile = req.file;\r\n\r\n    if(debug_mode){\r\n        logStatus(\"Received file: \" + req.file);\r\n    }\r\n\r\n    if (!uploadedFile) {\r\n\r\n        if(debug_mode){\r\n            logStatus(\"No file Uploaded\");\r\n        }\r\n\r\n    }else{\r\n        const { originalname, size } = uploadedFile;\r\n\r\n        if(debug_mode){\r\n            logStatus(\"File Uploaded Successfully in \" + `/uploads/${currentUserDetailsBlock.firstName}/${originalname}`);\r\n        }\r\n\r\n        try{\r\n            uploadInfo = {\r\n                \"file_name\": originalname,\r\n                \"file_size\": size,\r\n                \"uploadedBy\": req.session.userEmpID, // Replace with appropriate user information\r\n                \"uploadedAt\": new Date() // Include a timestamp\r\n            };\r\n            result = await files.insertOne(uploadInfo);\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Saved file in database : \" + uploadInfo);\r\n            }\r\n\r\n            const documents = await getFiles(req.session.userEmpID);\r\n\r\n            res.json({documents});\r\n        } catch(error){\r\n            logStatus(\"Error at index post upload file: \" + error);\r\n        }\r\n    }\r\n});\r\n\r\napp.delete('/ajaxdelete/:file_name', async function (req, res) {\r\n\r\n    var selectedFileForDeletion = req.params.file_name;\r\n\r\n    if(debug_mode){\r\n        logStatus(\"No file being selected to delete: \" + selectedFileForDeletion);\r\n    }\r\n\r\n    function deleteFile(filePath, callback) {\r\n        fs.unlink(filePath, function (err) {\r\n            if (err) {\r\n                callback(err);\r\n            } else {\r\n                callback(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    var filePathToDelete = \"uploads/\" + req.session.userEmpID + \"/\"  + selectedFileForDeletion;\r\n\r\n    deleteFile(filePathToDelete, function (err) {\r\n        if (err) {\r\n            if(debug_mode){\r\n                logStatus(\"Error deleting file:\" + err);\r\n            }\r\n        } else {\r\n            if(debug_mode){\r\n                logStatus(\"File deleted successfully.\");\r\n            }\r\n        }\r\n    });\r\n\r\n    const deleteCriteria = {file_name: selectedFileForDeletion, uploadedBy: req.session.userEmpID};\r\n\r\n    await files.deleteOne(deleteCriteria, function (err, result) {\r\n        if (err) {\r\n            if(debug_mode){\r\n                logStatus(\"Error deleting file:\" + err);\r\n            }\r\n        } else {\r\n            if(debug_mode){\r\n                logStatus(\"File deleted successfully.\")\r\n            }\r\n        }\r\n    });\r\n\r\n    const documents = await getFiles(req.session.userEmpID);\r\n\r\n    res.json({documents});\r\n});\r\n\r\napp.put('/reseat/:empID', async function (req, res) {\r\n    var dataPlaceholder = \"success!!\";\r\n    try{\r\n        var reconnectingEmpID = req.params.empID;\r\n        req.session.userEmpID = reconnectingEmpID; //possible hacking - TO BE RESOLVED\r\n        req.session.loggedIn = true;\r\n        res.json({dataPlaceholder});\r\n        logStatus(\"User Reseated\");\r\n        console.log(\"user reseated!\");\r\n    }catch(error){\r\n        res.json({error});\r\n    }\r\n\r\n});\r\n\r\n\r\napp.get('/logout', async function(req, res){\r\n    req.session.loggedIn = false;\r\n    req.session.destroy();\r\n    res.redirect('/login');\r\n\r\n    if(debug_mode){\r\n        logStatus(\"User has logged out!\");\r\n    }\r\n\r\n});\r\n\r\napp.get('/login', async function(req, res){\r\n    try {\r\n        if (req.session.loggedIn) {\r\n            res.redirect('/');\r\n        } else {\r\n            res.render('login', {\r\n                title: 'Login Page'\r\n            });\r\n        }\r\n    } catch (error){\r\n        if(debug_mode){\r\n            logStatus(\"Error at Login: \" + error);\r\n        }\r\n    }\r\n});\r\n\r\napp.get('/aboutUs', async function(req, res){\r\n    try {\r\n        if (req.session.loggedIn) {\r\n            res.redirect('/');\r\n        } else {\r\n            res.render('aboutUs', {\r\n                title: 'About Us'\r\n            });\r\n        }\r\n    } catch (error){\r\n        if(debug_mode){\r\n            logStatus(\"Error at about us: \" + error);\r\n        }\r\n    }\r\n});\r\n\r\napp.get('/techSupport', async function(req, res){\r\n    try {\r\n        if (req.session.loggedIn) {\r\n            res.redirect('/');\r\n        } else {\r\n            res.render('techSupport', {\r\n                title: 'Tech Support'\r\n            });\r\n        }\r\n    } catch (error){\r\n        if(debug_mode){\r\n            logStatus(\"Error at tech support: \" + error);\r\n        }\r\n    }\r\n});\r\n\r\napp.get('/ourTeam', async function(req, res){\r\n    try {\r\n        if (req.session.loggedIn) {\r\n            res.redirect('/');\r\n        } else {\r\n            res.render('ourTeam', {\r\n                title: 'Our Team'\r\n            });\r\n        }\r\n    } catch (error){\r\n        if(debug_mode){\r\n            logStatus(\"Error at our team: \" + error);\r\n        }\r\n    }\r\n});\r\n\r\napp.post('/login', async function (req, res) {\r\n    if (req.session.loggedIn) {\r\n        res.redirect('/');\r\n    } else {\r\n        var username = req.body.userName;\r\n        var password = req.body.passWord;\r\n\r\n        try {\r\n            const user = await users.findOne({ username: username });\r\n            if (!user) {\r\n                if(debug_mode){\r\n                    logStatus(\"Cannot find user\");\r\n                }\r\n                res.render('login', {\r\n                    title: 'Login Page', receivedError: \"Incorrect Username or Password!\"\r\n                });\r\n            } else if (password === user.password) {\r\n                req.session.loggedIn = true;\r\n                req.session.userEmpID = user.emp_id;\r\n\r\n                currentUserFiles = await getFiles(req.session.userEmpID);\r\n                currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n                currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n                currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n                currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n                res.render('index', {\r\n                    title: 'Home Page',\r\n                    currentUserDetailsBlock: currentUserDetailsBlock,\r\n                    currentUserFiles: currentUserFiles,\r\n                    currentUserPrivileges: currentUserPrivileges,\r\n                    currentUserNotifications: currentUserNotifications,\r\n                    currentUserPicture: currentUserPicture,\r\n                    min_idleTime: min_idleTime\r\n                });\r\n\r\n                if(debug_mode){\r\n                    logStatus(\"User \" + currentUserDetailsBlock.firstName + currentUserDetailsBlock.lastName + currentUserDetailsBlock.empID + \" has logged in with \" + currentUserDetailsBlock.userLevel + \" privileges!\");\r\n                }\r\n\r\n            } else {\r\n                res.render('login', {\r\n                    title: 'Login Page', receivedError: \"Incorrect Username or Password!\"\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            res.status(500).send('Internal Server Error');\r\n        }\r\n    }\r\n});\r\n\r\napp.get('/createform', async function(req, res){\r\n    var requiredPrivilege = 'Manage Templates';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n        currentUserWidgets = await getWidgets(req.session.userEmpID);\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('createform', {\r\n                title: 'Create Form',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'Create Form',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n        }\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/createwidget', async function(req, res){\r\n    var requiredPrivilege = 'Manage Templates';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('createwidget', {\r\n                title: 'Create Widget',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'Create Form',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n        }\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\nfunction getUniqueForms(formsGroup){\r\n    var uniqueForms = [];\r\n    var seenControlNumber = {};\r\n\r\n    for (const obj of formsGroup) {\r\n        if (!seenControlNumber[obj.form_control_number]) {\r\n            seenControlNumber[obj.form_control_number] = true;\r\n            uniqueForms.push(obj);\r\n        }\r\n    }\r\n    return uniqueForms;\r\n}\r\n\r\napp.get('/viewforms', async function(req, res){\r\n    var requiredPrivilege = 'View Forms Only';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserForms = await getUserForms(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            var allPublishedForms = await forms.find({ form_status : \"Published\" }).toArray();\r\n            console.log(\"This are all the published forms: \" + JSON.stringify(allPublishedForms));\r\n            var allAssignedForms = await forms.find({ assigned_users : req.session.userEmpID }).toArray();\r\n            console.log(\"This are all the assigned forms: \" + JSON.stringify(allAssignedForms));\r\n            var allSharedForms = await forms.find({\r\n                $or: [\r\n                    { read_users : req.session.userEmpID },\r\n                    { write_users : req.session.userEmpID }\r\n                ]\r\n            }).toArray();\r\n            console.log(\"This are all the shared forms: \" + JSON.stringify(allSharedForms));\r\n\r\n            var publishedForms = getUniqueForms(allPublishedForms);\r\n            var assignedForms = getUniqueForms(allAssignedForms);\r\n            var sharedForms = getUniqueForms(allSharedForms);\r\n\r\n            res.render('viewforms', {\r\n                title: 'View Forms',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                publishedForms: publishedForms,\r\n                assignedForms: assignedForms,\r\n                sharedForms: sharedForms,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'View Forms',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\n\r\napp.get('/viewformtemplates', async function(req, res){\r\n    var requiredPrivilege = 'Manage Templates';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentForms = await getForms(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('viewformtemplates', {\r\n                title: 'View Form Templates',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentForms: currentForms,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'View Forms',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/submission', async function(req, res){\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        res.render('submissions', {\r\n            title: 'Submissions',\r\n            currentUserDetailsBlock : currentUserDetailsBlock,\r\n            currentUserFiles: currentUserFiles,\r\n            currentUserPrivileges: currentUserPrivileges,\r\n            currentUserNotifications: currentUserNotifications,\r\n            currentUserPicture: currentUserPicture,\r\n            min_idleTime: min_idleTime\r\n        });\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/viewreports', async function(req, res){\r\n    var requiredPrivilege = 'View Reports';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('viewreports', {\r\n                title: 'View Reports',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'View Reports',\r\n                currentUserDetailsBlock : currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n        }\r\n\r\n\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/managenotifications', async function(req, res){\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        res.render('managenotifications', {\r\n            title: 'Manage Notifications',\r\n            currentUserDetailsBlock : currentUserDetailsBlock,\r\n            currentUserFiles: currentUserFiles,\r\n            currentUserPrivileges: currentUserPrivileges,\r\n            currentUserNotifications: currentUserNotifications,\r\n            currentUserPicture: currentUserPicture,\r\n            min_idleTime: min_idleTime\r\n        });\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/managedeadlines', async function(req, res){\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        res.render('managedeadlines', {\r\n            title: 'Manage Deadlines',\r\n            currentUserDetailsBlock: currentUserDetailsBlock,\r\n            currentUserFiles: currentUserFiles,\r\n            currentUserPrivileges: currentUserPrivileges,\r\n            currentUserNotifications: currentUserNotifications,\r\n            currentUserPicture: currentUserPicture,\r\n            min_idleTime: min_idleTime\r\n        });\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/createusers', async function(req, res){\r\n    var requiredPrivilege = 'User Management';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted) {\r\n            res.render('createusers', {\r\n                title: 'Create Users',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'Create Users',\r\n                userDetails: currentUserDetailsBlock,\r\n                filesData: currentUserFiles,\r\n                userPrivileges: currentUserPrivileges,\r\n                userNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n        }\r\n\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.post('/createusers', async function(req, res){\r\n    if (req.session.loggedIn) {\r\n        var username = req.body.userName;\r\n        var password = req.body.passWord;\r\n        var emp_id = req.body.empId;\r\n        var firstname = req.body.firstName;\r\n        var lastname = req.body.lastName;\r\n        var userlevel = req.body.userLevel;\r\n        var email = req.body.eMail;\r\n\r\n        try {\r\n            const existingUser = await db.collection('users').findOne({ username: username });\r\n            if(existingUser) {\r\n                if(debug_mode){\r\n                    logStatus(\"User already exists!\");\r\n                }\r\n            } else {\r\n                const newUser = {\r\n                    \"email\": email,\r\n                    \"username\": username,\r\n                    \"password\": password,\r\n                    \"emp_id\": emp_id,\r\n                    \"first_name\": firstname,\r\n                    \"last_name\": lastname,\r\n                    \"user_level\": userlevel\r\n                };\r\n\r\n                const result = await db.collection('users').insertOne(newUser);\r\n                if(debug_mode){\r\n                    logStatus(\"User created\");\r\n                }\r\n\r\n            }\r\n        } catch (error) {\r\n            if(debug_mode){\r\n                logStatus(\"Error creating the user: \" + error);\r\n            }\r\n        }\r\n\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n\r\n        res.render('createusers', {\r\n            title: 'Create Users',\r\n            currentUserDetailsBlock: currentUserDetailsBlock,\r\n            currentUserFiles: currentUserFiles,\r\n            currentUserPrivileges: currentUserPrivileges,\r\n            currentUserNotifications: currentUserNotifications,\r\n            min_idleTime: min_idleTime\r\n        });\r\n    } else {\r\n       res.render('login', {\r\n            title: 'Login Page'\r\n       });\r\n    }\r\n});\r\n\r\napp.get('/manageuserroles', async function(req, res){\r\n    var requiredPrivilege = 'User Management';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserDetailsBlock, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('manageuserroles', {\r\n                title: 'Manage User Roles',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'Manage User Roles',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/manageusersettings', async function(req, res){\r\n    var requiredPrivilege = 'User Management';\r\n    var accessGranted = false;\r\n\r\n    if (req.session.loggedIn) {\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('manageusersettings', {\r\n                title: 'Manage User Settings',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                currentUserPicture: currentUserPicture,\r\n                min_idleTime: min_idleTime\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'Manage User Settings',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n    } else {\r\n        res.redirect('login');\r\n    }\r\n});\r\n\r\napp.get('/viewusers', async function(req, res) {\r\n    var requiredPrivilege = 'View Users';\r\n    var accessGranted = false;\r\n\r\n    try {\r\n        if (!req.session.loggedIn) {\r\n            res.redirect('login');\r\n            return;\r\n        }\r\n\r\n        userAccounts = await getUserAccounts();\r\n        currentUserFiles = await getFiles(req.session.userEmpID);\r\n        currentUserDetailsBlock = await getUserDetailsBlock(req.session.userEmpID);\r\n        currentUserPrivileges = await getUserPrivileges(currentUserDetailsBlock.userLevel);\r\n        currentUserNotifications = await getNotifications(req.session.userEmpID);\r\n        currentUserPicture = await getUserPicture(req.session.userEmpID);\r\n\r\n        accessGranted = validateAction(currentUserPrivileges, requiredPrivilege);\r\n\r\n        if(accessGranted){\r\n            res.render('viewusers', {\r\n                title: 'View Users',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                currentUserPicture: currentUserPicture,\r\n                userAccounts: userAccounts\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Access Granted!\");\r\n            }\r\n\r\n        } else {\r\n            res.render('error_screen', {\r\n                title: 'View Users',\r\n                currentUserDetailsBlock: currentUserDetailsBlock,\r\n                currentUserFiles: currentUserFiles,\r\n                currentUserPrivileges: currentUserPrivileges,\r\n                currentUserNotifications: currentUserNotifications,\r\n                min_idleTime: min_idleTime,\r\n                errorMSG : \"Access Denied\"\r\n            });\r\n\r\n            if(debug_mode){\r\n                logStatus(\"User Denied\");\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        if(debug_mode){\r\n            logStatus(\"Error at viewing users: \" + error);\r\n        }\r\n\r\n        res.status(500).send('Internal Server Error');\r\n    }\r\n});\r\n\r\napp.post('/accountsettings', pictureUpload.single('file'), async function (req, res) {\r\n    const uploadedPicture = req.file;\r\n\r\n    if (debug_mode) {\r\n        logStatus(\"Received file: \" + req.file);\r\n    }\r\n\r\n    if (!uploadedPicture) {\r\n        if(debug_mode){\r\n            logStatus(\"No file Uploaded\");\r\n        }\r\n\r\n    } else {\r\n        const { originalname } = uploadedPicture;\r\n        var uploadedPictureDirectory = \"\";\r\n        if(debug_mode){\r\n            logStatus(\"File Uploaded Successfully in \" + `/views/profile_pictures/${currentUserDetailsBlock.firstName}/${originalname}`);\r\n        }\r\n\r\n        try{\r\n            var picture = await users.findOne({ emp_id: req.session.userEmpID });\r\n            if (picture.user_picture == '' || picture.user_picture == null || picture.user_picture == undefined){\r\n                userPicture = users.findOneAndUpdate(\r\n                    { \"emp_id\": currentUserDetailsBlock.empID },\r\n                    { $set: { \"user_picture\": \"/profile_pictures/\" + req.session.userEmpID + \"/\" + originalname } },\r\n                    { returnNewDocument: true }\r\n                )\r\n            } else {\r\n                fs.unlink(\"./views/\" + picture.user_picture, function (error){\r\n                    if (debug_mode) {\r\n                       logStatus(\"Failed to Remove Previous Profile Picture \" + error);\r\n                    }\r\n                });\r\n                userPicture = users.findOneAndUpdate(\r\n                    { \"emp_id\": currentUserDetailsBlock.empID },\r\n                    { $set: { \"user_picture\": \"/profile_pictures/\" + req.session.userEmpID + \"/\" + originalname } },\r\n                    { returnNewDocument: true }\r\n                )\r\n            }\r\n\r\n            uploadedPictureDirectory = users.user_picture;\r\n            if(debug_mode){\r\n                logStatus(\"Picture saved in database: \" + uploadedPictureDirectory);\r\n            }\r\n\r\n            res.json({uploadedPictureDirectory});\r\n        } catch(error){\r\n            logStatus(error);\r\n        }\r\n    }\r\n});\r\n\r\napp.post('/upload', upload.single('file'), async function (req, res) {\r\n    const uploadedFile = req.file;\r\n\r\n    if (!uploadedFile) {\r\n        if(debug_mode){\r\n            logStatus(\"No file Uploaded\");\r\n        }\r\n\r\n    }else{\r\n        const { originalname, size } = uploadedFile;\r\n\r\n        if(debug_mode){\r\n            logStatus(\"File Uploaded Successfully in \" + `/uploads/${userDetailsBlock.firstName}/${originalname}`);\r\n        }\r\n\r\n        try{\r\n            uploadInfo = {\r\n                \"file_name\": originalname,\r\n                \"file_size\": size,\r\n                \"uploadedBy\": req.session.userEmpID, // Replace with appropriate user information\r\n                \"uploadedAt\": new Date() // Include a timestamp\r\n            };\r\n            result = await files.insertOne(uploadInfo);\r\n\r\n            if(debug_mode){\r\n                logStatus(\"Inserted : \" + uploadInfo);\r\n            }\r\n\r\n            const documents = await getFiles(req.session.userEmpID);\r\n\r\n            res.json({documents});\r\n        } catch(error){\r\n            logStatus(error);\r\n        }\r\n    }\r\n});\r\n\r\napp.post('/update-Password', async function(req, res){\r\n    if(req.session.loggedIn) {\r\n\r\n        const currentUserPassword = req.body.currentPassword;\r\n        const newUserPassword = req.body.newPassword;\r\n\r\n        try{\r\n            var currentUser = await users.findOne({ emp_id: req.session.userEmpID });\r\n\r\n            if(currentUserPassword === currentUser.password){\r\n                if(newUserPassword !== currentUser.password){\r\n                    const updatedPassword = await users.findOneAndUpdate(\r\n                        { emp_id : currentUser.emp_id },\r\n                        { $set: { password: newUserPassword } },\r\n                        { returnNewDocument: false }\r\n                        );\r\n                    if(debug_mode){\r\n                        logStatus(\"Password of \" + currentUser.emp_id + \" was updated.\");\r\n                    }\r\n                    res.send({status_code: 0});\r\n                } else {\r\n                    if(debug_mode){\r\n                        logStatus(\"New password should not be the same as your current password.\");\r\n                    }\r\n                    res.send({status_code: 1})\r\n                }\r\n            } else {\r\n                if(debug_mode){\r\n                    logStatus(\"Current password is incorrect.\");\r\n                }\r\n                res.send({status_code: 2});\r\n            }\r\n        } catch(error){\r\n            logStatus(\"Failed updating password \" + error);\r\n        }\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\napp.put('/AJAX_assignUsers', async function(req, res){\r\n    if(req.session.loggedIn){\r\n        var formData = req.body;\r\n        var selectedFormControlNumberToView = formData.formControlNumber;\r\n        allForms = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n\r\n        try {\r\n            for( i = 0; i < allForms.length; i++) {\r\n                if(allForms[i].form_control_number == selectedFormControlNumberToView) {\r\n                    updateDocument = await forms.updateMany(\r\n                        { form_control_number : selectedFormControlNumberToView },\r\n                        { $addToSet: { \"assigned_users\" : formData.assignedUser } }\r\n                    );\r\n                    res.send({ status_code : 0 });\r\n                } else {\r\n                    res.send({ status_code : 1 });\r\n                }\r\n            }\r\n        } catch(error) {\r\n            if(debug_mode) {\r\n                logStatus('There was an error at AJAX function in assigning users.');\r\n            }\r\n            res.send({ status_code : 2 });\r\n        }\r\n\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\napp.put('/AJAX_togglePublish', async function(req, res) {\r\n    if(req.session.loggedIn) {\r\n        var formData = req.body;\r\n        var selectedFormControlNumberToView = formData.formControlNumber;\r\n        formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n        var targetedVersion = parseInt(formData.targetedVersion, 10);\r\n\r\n        var currentStatus;\r\n        var updateDocument;\r\n        var updatedStatus;\r\n        var successfulWow = false;\r\n        try{\r\n            for(i=0; i < formVersions.length; i++){\r\n                if(formVersions[i].form_version == targetedVersion){\r\n                    currentStatus = formVersions[i].form_status;\r\n                    console.log(\"the found status of : \" + targetedVersion + \"is : \" + currentStatus);\r\n\r\n                    if(currentStatus == \"Template\"){\r\n                        try {\r\n                            console.log(\"Entering the setting of Status\");\r\n                            updateDocument = await forms.findOneAndUpdate(\r\n                                { form_control_number : selectedFormControlNumberToView, form_version : targetedVersion },\r\n                                { $set: { form_status: \"Published\" } }\r\n                            );\r\n                            updatedStatus = \"Published\";\r\n                            console.log(\"Finished the setting of Status\");\r\n                        } catch(error) {\r\n                            console.log(\"May error : \" + error);\r\n                        }\r\n\r\n                        console.log(\"Setting control number : \" + selectedFormControlNumberToView + \" with version \" + targetedVersion + \" to Published\");\r\n                    }else{\r\n                        updateDocument = await forms.findOneAndUpdate(\r\n                            { form_control_number : selectedFormControlNumberToView, form_version : targetedVersion },\r\n                            { $set: { form_status: \"Template\" } }\r\n                        );\r\n                        updatedStatus = \"Template\";\r\n                        console.log(\"Setting control number : \" + selectedFormControlNumberToView + \" with version \" + targetedVersion + \" to Template\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(currentStatus == \"Template\"){\r\n                for(i=0; i < formVersions.length; i++){\r\n                    if(formVersions[i].form_version != targetedVersion){\r\n                        updateDocument = await forms.findOneAndUpdate(\r\n                            { form_control_number : selectedFormControlNumberToView, form_version : formVersions[i].form_version },\r\n                            { $set: { form_status: \"Template\" } }\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            successfulWow = true;\r\n        }catch(error){\r\n            successfulWow = false;\r\n        }\r\n\r\n\r\n        try{\r\n            if(!successfulWow){\r\n                if(debug_mode){\r\n                    logStatus('There was an error in AJAX Toggle Publish: ' + error);\r\n                }\r\n                res.send({ status_code : 1 });\r\n            } else {\r\n                res.send({ status_code : 0 , updatedStatus : updatedStatus});\r\n            }\r\n        } catch(error) {\r\n            if(debug_mode){\r\n                logStatus('There was an error in AJAX Toggle Publish: ' + error);\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\napp.put('/AJAX_toggleAllowFileUpload', async function(req, res) {\r\n    if(req.session.loggedIn) {\r\n        var formData = req.body;\r\n        var selectedFormControlNumberToView = formData.formControlNumber;\r\n        formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n\r\n        var currentStatus;\r\n        var updateDocument;\r\n        var updatedStatus;\r\n        var successfulWow = false;\r\n        try{\r\n            for(i=0; i < formVersions.length; i++){\r\n                currentStatus = formVersions[i].allow_file_upload;\r\n\r\n                if(currentStatus == false){\r\n                    try {\r\n                        console.log(\"Entering the setting of Status\");\r\n                        updateDocument = await forms.updateMany(\r\n                            { form_control_number : selectedFormControlNumberToView },\r\n                            { $set: { allow_file_upload: true } }\r\n                        );\r\n                        updatedStatus = \"Allowed\";\r\n                        console.log(\"Finished the setting of Status\");\r\n                    } catch(error) {\r\n                        console.log(\"May error : \" + error);\r\n                    }\r\n\r\n                }else{\r\n                    updateDocument = await forms.updateMany(\r\n                        { form_control_number : selectedFormControlNumberToView },\r\n                        { $set: { allow_file_upload: false } }\r\n                    );\r\n                    updatedStatus = \"Not Allowed\";\r\n                }\r\n\r\n            }\r\n\r\n            successfulWow = true;\r\n        }catch(error){\r\n            successfulWow = false;\r\n        }\r\n\r\n\r\n        try{\r\n            if(!successfulWow){\r\n                if(debug_mode){\r\n                    logStatus('There was an error in AJAX Toggle Publish: ' + error);\r\n                }\r\n                res.send({ status_code : 1 });\r\n            } else {\r\n                res.send({ status_code : 0 , updatedStatus : updatedStatus});\r\n            }\r\n        } catch(error) {\r\n            if(debug_mode){\r\n                logStatus('There was an error in AJAX Toggle Publish: ' + error);\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\napp.put('/AJAX_toggleSharing', async function(req, res) {\r\n    if(req.session.loggedIn) {\r\n        var formData = req.body;\r\n        var selectedFormControlNumberToView = formData.formControlNumber;\r\n        formVersions = await forms.find({ form_control_number : selectedFormControlNumberToView }).toArray();\r\n\r\n        var currentStatus;\r\n        var updateDocument;\r\n        var updatedStatus;\r\n        var successfulWow = false;\r\n\r\n        try{\r\n            for(i = 0; i < formVersions.length; i++){\r\n                currentStatus = formVersions[i].shared_status;\r\n\r\n                if(currentStatus == false){\r\n                    try{\r\n                        updateDocument = await forms.updateMany(\r\n                            { form_control_number : selectedFormControlNumberToView },\r\n                            { $set: { shared_status: true } }\r\n                        );\r\n                        updatedStatus = \"Allowed\";\r\n                    } catch(error) {\r\n                        console.log(\"May error : \" + error);\r\n                    }\r\n                } else {\r\n                    updateDocument = await forms.updateMany(\r\n                        { form_control_number : selectedFormControlNumberToView },\r\n                        { $set: { shared_status: false } }\r\n                    );\r\n                    updatedStatus = \"Not Allowed\";\r\n                }\r\n            }\r\n\r\n            successfulWow = true;\r\n        } catch(error) {\r\n            successfulWow = false;\r\n        }\r\n\r\n        try{\r\n            if(!successfulWow){\r\n                if(debug_mode){\r\n                    logStatus('There was an error in AJAX Toggle Publish: ' + error);\r\n                }\r\n                res.send({ status_code : 1 });\r\n            } else {\r\n                res.send({ status_code : 0 , updatedStatus : updatedStatus});\r\n            }\r\n        } catch(error) {\r\n            if(debug_mode){\r\n                logStatus('There was an error in AJAX Toggle Publish: ' + error);\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\napp.put('/AJAX_viewFormVersion', async function(req, res) {\r\n    if(req.session.loggedIn){\r\n        var formData = req.body;\r\n        var currentForm = await forms.findOne({ form_control_number: formData.formControlNumber, form_version: parseInt(formData.versionChoice, 10) });\r\n        console.log(\"This is the current form: \" + currentForm);\r\n        if(!currentForm){\r\n            if(debug_mode){\r\n                logStatus(\"Could not find the form.\");\r\n            }\r\n            res.send({ status_code : 1 });\r\n        } else {\r\n            let jsonObject = currentForm;\r\n            var e = jsonObject.form_content;\r\n            var g = await jsonToHTML(e);\r\n\r\n            try{\r\n                jsonObject.form_content = g;\r\n                res.send({ status_code : 0, formContent : jsonObject.form_content, formStatus : currentForm.form_status, sharedStatus : currentForm.shared_status, formVersion : currentForm.form_version });\r\n            } catch(error) {\r\n                if(debug_mode){\r\n                    logStatus(\"Error at view form version for front end: \" + error);\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\napp.put('/AJAX_formUserViewVersion', async function(req, res) {\r\n    if(req.session.loggedIn){\r\n        var formData = req.body;\r\n        var currentUserForm = await filledoutforms.findOne({ form_control_number: formData.formControlNumber, user_version: parseInt(formData.userVersionChoice, 10) });\r\n        console.log(\"This is the current form: \" + currentUserForm);\r\n        if(!currentUserForm){\r\n            if(debug_mode){\r\n                logStatus(\"Could not find the form.\");\r\n            }\r\n            res.send({ status_code : 1 });\r\n        } else {\r\n            let jsonObject = currentUserForm;\r\n            var e = jsonObject.form_content;\r\n            var g = await jsonToHTML(e);\r\n\r\n            try{\r\n                jsonObject.form_content = g;\r\n                res.send({ status_code : 0, formContent : jsonObject.form_content });\r\n            } catch(error) {\r\n                if(debug_mode){\r\n                    logStatus(\"Error at view form version for front end: \" + error);\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        res.render('login', {\r\n            title: 'Login Page'\r\n        });\r\n    }\r\n});\r\n\r\nasync function getUserPicture(empID){\r\n    var userPicture;\r\n\r\n    try{\r\n        userPicture = await users.findOne({ emp_id: empID });\r\n\r\n        if(debug_mode){\r\n            logStatus(\"The picture is this: \" + JSON.stringify(userPicture));\r\n        }\r\n    } catch (error){\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve user picture \" + error);\r\n        }\r\n        throw error;\r\n    }\r\n    return userPicture;\r\n}\r\n\r\nasync function getUserDetailsBlock(empID){\r\n    var userDetailsBlock;\r\n\r\n    try{\r\n        const user = await users.findOne({ emp_id: empID });\r\n\r\n        if(!user){\r\n            if(debug_mode){\r\n                logStatus(\"user not found!\");\r\n                logStatus(\"if you are here, you deleted the profile mid-session\");\r\n            }\r\n\r\n            userDetailsBlock = \"\"; // future error handling for respective req-res\r\n        }else{\r\n            userDetailsBlock = {\r\n                \"firstName\": user.first_name,\r\n                \"lastName\": user.last_name,\r\n                \"empID\": user.emp_id,\r\n                \"userLevel\": user.user_level\r\n            }\r\n        }\r\n    }catch(error){\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve user details block: \" + error);\r\n        }\r\n    }\r\n\r\n    if(debug_mode){\r\n        logStatus(\"Executed getUserDetailsBlock\" + userDetailsBlock);\r\n    }\r\n\r\n    return userDetailsBlock;\r\n}\r\n\r\nasync function logError(errorMessage) {\r\n    const logMessage = `${new Date().toISOString()}: ${errorMessage}\\n`;\r\n    fs.appendFile('error_log.txt', logMessage, (err) => {\r\n        if (err) {\r\n            console.error('Error appending to error_log.txt:', err);\r\n        }\r\n    });\r\n}\r\n\r\n\r\nasync function getNotifications(empID){\r\n    var userNotifications;\r\n\r\n    try { // TO BE FIXED ERROR RECEIVED WHEN NULL\r\n        userNotifications = await notifications.find({ recipients: empID }).toArray();\r\n        if (debug_mode) {\r\n            logStatus(\"The notifications are: \" + JSON.stringify(userNotifications));\r\n        }\r\n    } catch (error) {\r\n        if (debug_mode) {\r\n            logStatus(\"Failed to retrieve unseen notifications: \" + error);\r\n        }\r\n        throw error; // Re-throw the error to handle it elsewhere if needed\r\n    }\r\n\r\n    return userNotifications;\r\n}\r\n\r\nasync function getUserForms(empID){\r\n    var userFormsCollections;\r\n    try {\r\n        userFormsCollections = await filledoutforms.find().toArray();\r\n\r\n        if(debug_mode){\r\n            logStatus(\"The array forms at function getForms() : \" + JSON.stringify(userFormsCollections));\r\n        }\r\n    } catch (error) {\r\n        userFormsCollections = [];\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve forms: \" + error);\r\n        }\r\n    }\r\n    return userFormsCollections;\r\n}\r\n\r\nasync function getForms(empID){\r\n    var formsCollections;\r\n    try {\r\n        formsCollections = await forms.find().toArray();\r\n\r\n        if(debug_mode){\r\n            logStatus(\"The array forms at function getForms() : \" + JSON.stringify(formsCollections));\r\n        }\r\n    } catch (error) {\r\n        formsCollections = [];\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve forms: \" + error);\r\n        }\r\n    }\r\n    return formsCollections;\r\n}\r\n\r\nasync function getWidgets(empID){\r\n    var widgetsCollections;\r\n    try {\r\n        widgetsCollections = await widgets.find().toArray();\r\n\r\n        if(debug_mode){\r\n            logStatus(\"The array forms at function getWidgets() : \" + JSON.stringify(widgetsCollections));\r\n        }\r\n    } catch (error) {\r\n        widgetsCollections = [];\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve forms: \" + error);\r\n        }\r\n    }\r\n    return widgetsCollections;\r\n}\r\n\r\nasync function getFiles(empID) {\r\n    try {\r\n        const filesDocuments = await files.find({ uploadedBy: empID }).toArray();\r\n\r\n        if(debug_mode){\r\n            logStatus(\"The array documents at function getFiles() : \" + JSON.stringify(filesDocuments)); //stringified for logging purposes only\r\n        }\r\n\r\n        return filesDocuments;\r\n    } catch (error) {\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve documents: \" + error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nasync function getUserAccounts() {\r\n    try {\r\n        const documents = await users.find({}).toArray();\r\n\r\n        if(debug_mode){\r\n            logStatus(\"Found all users: \" + JSON.stringify(documents)); //stringified for logging purposes only\r\n        }\r\n\r\n        return documents;\r\n    } catch (error) {\r\n\r\n        if(debug_mode){\r\n            logStatus(\"Error at getting users: \" + error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nasync function getUsersEmails() {\r\n    var userName;\r\n    var empEmails = [];\r\n    try{\r\n        userName = await users.find({}).toArray();\r\n\r\n        for (const user of userName) {\r\n            empEmails.push(user.emp_id);\r\n        }\r\n\r\n        logStatus(\"This are the user names: \" + JSON.stringify(empEmails));\r\n        return empEmails;\r\n    } catch(error) {\r\n        logStatus(\"There is an error retrieving the user names: \" + error);\r\n    }\r\n}\r\n\r\nasync function getUserPrivileges(user_level) {\r\n    var privilegesDocumentsBlock;\r\n    var privilegesDocuments;\r\n\r\n    try {\r\n        //privilegesDocuments = await db.collection('privileges').findOne({ user_level: user_level });\r\n        privilegesDocuments = await privileges.findOne({ user_level: user_level });\r\n\r\n        if (!privilegesDocuments || !privilegesDocuments.user_privileges) {\r\n\r\n            if(debug_mode){\r\n                logStatus(\"No privileges found for user level: \" + user_level);\r\n            }\r\n\r\n            privilegesDocumentsBlock = [];\r\n        } else {\r\n            if(debug_mode){\r\n                logStatus(privilegesDocuments.user_privileges);\r\n            }\r\n\r\n            privilegesDocumentsBlock = privilegesDocuments.user_privileges;\r\n        }\r\n\r\n\r\n    } catch (error) {\r\n        if(debug_mode){\r\n            logStatus(\"Failed to retrieve privileges: \" + error);\r\n        }\r\n\r\n        privilegesDocumentsBlock = [];\r\n    }\r\n    return privilegesDocumentsBlock;\r\n}\r\n\r\nfunction validateAction(privileges,requestedAction ){\r\n    var accessGranted = false;\r\n    if(debug_mode){\r\n        logStatus(\"Received \" + privileges + \" as privileges\");\r\n    }\r\n\r\n    try{\r\n\t    for(i = 0; i < privileges.length; i++) {\r\n            if(privileges[i] == requestedAction){\r\n                accessGranted = true;\r\n            }\r\n        }\r\n    } catch(error) {\r\n        if(debug_mode){\r\n            logStatus(error);\r\n        }\r\n\r\n    }\r\n    if(debug_mode){\r\n        logStatus(\"Returning \" + accessGranted);\r\n    }\r\n\r\n    return accessGranted;\r\n}\r\n\r\nfunction logStatus(statusLog){\r\n    console.log(statusLog);\r\n}\r\n\r\nasync function updateToLatestVersion(latestFormTemplate, latestFilledOutForm) {\r\n    for(const key in latestFilledOutForm){\r\n        if(latestFilledOutForm.hasOwnProperty(key)){\r\n            if(typeof latestFilledOutForm[key] === 'object') {\r\n                if(latestFormTemplate[key]){\r\n                    latestFormTemplate[key] = await updateToLatestVersion(latestFormTemplate[key], latestFilledOutForm[key]);\r\n                }\r\n            }else{\r\n                if(latestFormTemplate[key] === undefined || latestFormTemplate[key] === null || latestFormTemplate[key] === \"\"){\r\n                    latestFormTemplate[key] = latestFilledOutForm[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return latestFormTemplate;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.js b/index.js
--- a/index.js	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/index.js	(date 1700340088000)
@@ -175,11 +175,6 @@
 
 //ENGINE
 //-------------------------HTML TO JSON
-
-async function addKeyId(){
-
-}
-
 async function htmlToJson(element) {
     const jsonElementFormat = {
         ele_type: element.nodeName ? element.nodeName.toLowerCase() : 'unknown',
@@ -235,6 +230,7 @@
         } else {
             html += '>\n';
 
+        if(jsonData.ele_contents){
             for (const child of jsonData.ele_contents) {
                 if (typeof child === 'object') {
                     html += await jsonToHTML([child], indentLevel + 1);
@@ -242,6 +238,7 @@
                     html += `${'    '.repeat(indentLevel + 1)}${child}\n`;
                 }
             }
+        }
 
             html += `${indent}</${jsonData.ele_type}>\n`;
         }
@@ -250,27 +247,7 @@
     return html;
 }
 
-/*async function getLatestuserVersion(owner, controlNumber){
-    console.log("looking for " + owner + " of " + controlNumber);
-    var versionList = await filledoutforms.find({ form_control_number : controlNumber, form_owner : owner }).toArray();
-    console.log("logging version list var" + JSON.stringify(versionList));
-    var versionCount = 0;
-    var latestUserVersion = 0;
-
 
-    for(i=0; i < versionList.length; i++){
-        if(versionList[i].form_version >= latestUserVersion){
-            latestUserVersion = versionList[i].form_version;
-        }
-        versionCount = versionCount + 1;
-        console.log("logging version" + versionList[i].form_version + " of " + controlNumber);
-    }
-
-
-    console.log(versionCount);
-    console.log(latestUserVersion + "is the latest version");
-}
-*/
 
 
 //END OF ENGINE
@@ -282,11 +259,11 @@
         var time = currentDate.toTimeString().split(' ')[0];
         var formData = req.body;
         //------------------ENGINE PLAYGROUND
-        var v = new JSDOM(formData.formContent);
-        var rootElement = v.window.document.querySelector('.drop-container');
+        //var v = new JSDOM(formData.formContent);
+        //var rootElement = v.window.document.querySelector('.drop-container');
         var jsonArray = [];
-        var w = await htmlToJson(rootElement);
-        jsonArray.push(w);
+        //var w = await htmlToJson(rootElement);
+        jsonArray.push(formData.formContent);
         // var x = JSON.stringify([w],null,2); // goods
         // console.log(x); // goods
 
@@ -323,7 +300,7 @@
 
             res.json({ success: true });
         }
-    } catch (error) {
+    }catch (error){
         logStatus("Error at saved created form: " + error);
     }
 });
@@ -335,12 +312,8 @@
     var latestAssignedUsers = [];
     var formHistory = await forms.find({ form_control_number : formData.formControlNumber }).toArray();
 
-    console.log("THE LENGTH IS" + formHistory.length);
-    console.log("WE ARE LOOKING FOR THIS CONTROL NUMBER " + formData.formControlNumber);
-
-    for(i=0; i < formHistory.length; i++) {
-        console.log("Entered 334 iteration");
-        if(formHistory[i].form_version >= latestVersion) {
+    for(i=0; i < formHistory.length; i++){
+        if(formHistory[i].form_version >= latestVersion){
             latestVersion = formHistory[i].form_version;
             fileUploadStatus = formHistory[i].allow_file_upload;
 
@@ -354,21 +327,15 @@
     newVersionNumber = latestVersion + 1;
 
     try {
-        var latestForm;
         var currentDate = new Date();
         var date = currentDate.toDateString();
         var time = currentDate.toTimeString().split(' ')[0];
-        var formData = req.body;
-        var v = new JSDOM(formData.formContent);
-        var rootElement = v.window.document.querySelector('.drop-container');
         var jsonArray = [];
-        var w = await htmlToJson(rootElement);
-        jsonArray.push(w);
+        jsonArray.push(formData.formContent);
 
         const formDocument = {
             form_name: formData.name,
             form_control_number: formData.formControlNumber.toString(),
-            //form_content: formData.formContent,
             form_content: jsonArray,
             form_version: newVersionNumber,
             form_status: formData.formStatus,
@@ -379,7 +346,6 @@
             assigned_users: latestAssignedUsers
         };
 
-        //console.log("This is the Form Document: " + JSON.stringify(formDocument));
         const result = await forms.insertOne(formDocument);
 
         if(debug_mode){
@@ -414,7 +380,6 @@
             widget_owner: req.session.userEmpID
         };
 
-        //console.log("This is the Form Document: " + JSON.stringify(formDocument));
         const result = await widgets.insertOne(widgetDocument);
 
         if(debug_mode){
@@ -506,14 +471,14 @@
     }
 
     try{
-        var formToSave = req.body;
-        var a = new JSDOM(formToSave.formContent);
-        var rootElement = a.window.document.querySelector('.drop-container');
+        var formData = req.body;
+        //var a = new JSDOM(formToSave.formContent);
+        //var rootElement = a.window.document.querySelector('.drop-container');
         var jsonArray = [];
-        var b = await htmlToJson(rootElement);
-        jsonArray.push(b);
+        //var b = await htmlToJson(rootElement);
+        jsonArray.push(formData.formContent);
 
-        if(!formToSave){
+        if(!formData){
             res.send({ status_code: 1 });
         } else {
             const filledOutDocument = {
@@ -581,7 +546,10 @@
         jsonObject = currentForm;
     }else{
         if(userFormVersions == 0){
-            //save latest verion as user version0 to filled out forms
+
+            var latestWriteUsers = [];
+            var latestReadUsers = [];
+
             jsonObject = currentForm;
             const filledOutDocument = {
                 form_name: currentForm.form_name,
@@ -593,7 +561,9 @@
                 date_saved: getDateNow(),
                 time_saved: getTimeNow(),
                 user_version: 0,
-                form_owner: req.session.userEmpID
+                form_owner: req.session.userEmpID,
+                read_users: latestReadUsers,
+                write_users: latestWriteUsers
             };
 
             const result = await filledoutforms.insertOne(filledOutDocument);
@@ -2041,8 +2011,18 @@
             res.send({ status_code : 1 });
         } else {
             let jsonObject = currentUserForm;
-            var e = jsonObject.form_content;
-            var g = await jsonToHTML(e);
+
+            try{
+                var e = jsonObject.form_content;
+            }catch(error){
+                console.log("ERROR AT ECHO " + error);
+            }
+
+            try{
+                var g = await jsonToHTML(e);
+            }catch(error){
+                console.log("ERROR AT golf " + error);
+            }
 
             try{
                 jsonObject.form_content = g;
Index: node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/inspectionProfiles/Project_Default.xml b/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/inspectionProfiles/Project_Default.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
-  </profile>
-</component>
\ No newline at end of file
Index: node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/modules.xml
===================================================================
diff --git a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/modules.xml b/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/modules.xml
deleted file mode 100644
--- a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/modules.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/iconv-lite.iml" filepath="$PROJECT_DIR$/.idea/iconv-lite.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/vcs.xml
===================================================================
diff --git a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/vcs.xml b/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/vcs.xml
deleted file mode 100644
--- a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/vcs.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/IntelliDocs.iml
===================================================================
diff --git a/.idea/IntelliDocs.iml b/.idea/IntelliDocs.iml
deleted file mode 100644
--- a/.idea/IntelliDocs.iml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/codeStyleConfig.xml
===================================================================
diff --git a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/codeStyleConfig.xml b/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/codeStyleConfig.xml
deleted file mode 100644
--- a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/codeStyleConfig.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,5 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <state>
-    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
-  </state>
-</component>
\ No newline at end of file
Index: node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/Project.xml
===================================================================
diff --git a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/Project.xml b/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/Project.xml
deleted file mode 100644
--- a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/codeStyles/Project.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,47 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <code_scheme name="Project" version="173">
-    <HTMLCodeStyleSettings>
-      <option name="HTML_SPACE_INSIDE_EMPTY_TAG" value="true" />
-      <option name="HTML_ENFORCE_QUOTES" value="true" />
-    </HTMLCodeStyleSettings>
-    <JSCodeStyleSettings version="0">
-      <option name="FORCE_SEMICOLON_STYLE" value="true" />
-      <option name="SPACE_BEFORE_FUNCTION_LEFT_PARENTH" value="false" />
-      <option name="FORCE_QUOTE_STYlE" value="true" />
-      <option name="ENFORCE_TRAILING_COMMA" value="Remove" />
-      <option name="SPACES_WITHIN_OBJECT_LITERAL_BRACES" value="true" />
-      <option name="SPACES_WITHIN_IMPORTS" value="true" />
-    </JSCodeStyleSettings>
-    <TypeScriptCodeStyleSettings version="0">
-      <option name="FORCE_SEMICOLON_STYLE" value="true" />
-      <option name="SPACE_BEFORE_FUNCTION_LEFT_PARENTH" value="false" />
-      <option name="FORCE_QUOTE_STYlE" value="true" />
-      <option name="ENFORCE_TRAILING_COMMA" value="Remove" />
-      <option name="SPACES_WITHIN_OBJECT_LITERAL_BRACES" value="true" />
-      <option name="SPACES_WITHIN_IMPORTS" value="true" />
-    </TypeScriptCodeStyleSettings>
-    <VueCodeStyleSettings>
-      <option name="INTERPOLATION_NEW_LINE_AFTER_START_DELIMITER" value="false" />
-      <option name="INTERPOLATION_NEW_LINE_BEFORE_END_DELIMITER" value="false" />
-    </VueCodeStyleSettings>
-    <codeStyleSettings language="HTML">
-      <option name="SOFT_MARGINS" value="100" />
-      <indentOptions>
-        <option name="CONTINUATION_INDENT_SIZE" value="4" />
-      </indentOptions>
-    </codeStyleSettings>
-    <codeStyleSettings language="JavaScript">
-      <option name="SOFT_MARGINS" value="100" />
-    </codeStyleSettings>
-    <codeStyleSettings language="TypeScript">
-      <option name="SOFT_MARGINS" value="100" />
-    </codeStyleSettings>
-    <codeStyleSettings language="Vue">
-      <option name="SOFT_MARGINS" value="100" />
-      <indentOptions>
-        <option name="INDENT_SIZE" value="4" />
-        <option name="TAB_SIZE" value="4" />
-      </indentOptions>
-    </codeStyleSettings>
-  </code_scheme>
-</component>
\ No newline at end of file
Index: node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/iconv-lite.iml
===================================================================
diff --git a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/iconv-lite.iml b/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/iconv-lite.iml
deleted file mode 100644
--- a/node_modules/whatwg-encoding/node_modules/iconv-lite/.idea/iconv-lite.iml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ /dev/null	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="WEB_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$">
-      <excludeFolder url="file://$MODULE_DIR$/temp" />
-      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
-      <excludeFolder url="file://$MODULE_DIR$/tmp" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: views/js/client.functions/handle_ajax_load_version.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var selectedVersionToLoad;\r\n\r\nvar formRenderingMessage = document.getElementById('formRenderingMessage');\r\n\r\nvar loadVersionModal = document.getElementById('loadVersionModal');\r\nvar loadVersionOverLay = document.getElementById('loadVersionOverLay');\r\nvar loadVersionDialogbox = document.getElementById('loadVersionDialogbox');\r\n\r\nfunction showLoadVersionModal() {\r\n    selectedVersionToLoad = document.getElementById('versionDropDown').value;\r\n\r\n    formRenderingMessage.innerHTML = \"Are you sure you want to load version \" + selectedVersionToLoad + \" into the canvas? \\nUnsaved changes will be lost.\";\r\n\r\n    loadVersionModal.style.display = 'block';\r\n\r\n    loadVersionOverLay.style.display = 'block';\r\n    loadVersionOverLay.style.height = 2000+\"px\";\r\n\r\n    loadVersionDialogbox.style.top = \"100px\";\r\n    loadVersionDialogbox.style.display = \"block\";\r\n    loadVersionDialogbox.style.position = \"fixed\";\r\n}\r\n\r\nfunction hideLoadVersionModal(){\r\n    loadVersionModal.style.display = 'none';\r\n    loadVersionOverLay.style.display = \"none\";\r\n    loadVersionDialogbox.style.display = \"none\";\r\n}\r\n\r\nfunction renderSelectedVersion(){\r\n    var userVersionChoice = document.getElementById(\"versionDropDown\").value;\r\n\r\n    const data = {\r\n        formControlNumber: formControlNumber,\r\n        userVersionChoice: userVersionChoice\r\n    };\r\n\r\n    $.ajax({\r\n        type: 'PUT',\r\n        url: '/AJAX_formUserViewVersion',\r\n        data: data,\r\n        success: function(response) {\r\n            if (response.status_code === 0) {\r\n                // modal success\r\n                document.getElementById(\"theContainerOfTheForm\").innerHTML = response.formContent;\r\n                hideLoadVersionModal();\r\n            } else if (response.status_code === 1){\r\n                // modal error\r\n                alert(\"Error in Viewing Chosen Version\");\r\n            } else {\r\n                // modal error\r\n                alert(\"AJAX Error\");\r\n            }\r\n        },\r\n        error: function(error){\r\n            console.error('AJAX Error: ', error);\r\n        }\r\n    });\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/js/client.functions/handle_ajax_load_version.js b/views/js/client.functions/handle_ajax_load_version.js
--- a/views/js/client.functions/handle_ajax_load_version.js	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/views/js/client.functions/handle_ajax_load_version.js	(date 1700329986000)
@@ -42,7 +42,7 @@
         success: function(response) {
             if (response.status_code === 0) {
                 // modal success
-                document.getElementById("theContainerOfTheForm").innerHTML = response.formContent;
+                document.getElementById("enginePlaceHolder").innerHTML = response.formContent;
                 hideLoadVersionModal();
             } else if (response.status_code === 1){
                 // modal error
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\r\n  <component name=\"ProjectRootManager\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/.idea/misc.xml	(date 1700343248656)
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ProjectRootManager">
     <output url="file://$PROJECT_DIR$/out" />
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c3dbf595-75f2-40e6-8ef5-6192d9335e8c\" name=\"Changes\" comment=\"* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/index.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/index.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2WILMosCqF7RSTraY5bRuQcCOMT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/fogef/OneDrive/Desktop/sacred branch&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Admin\\Desktop\\the thesis container\\views\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c3dbf595-75f2-40e6-8ef5-6192d9335e8c\" name=\"Changes\" comment=\"\" />\r\n      <created>1696415109496</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1696415109496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"*layout.pug&#10;//fixed css call for navbar icons\">\r\n      <created>1696420683777</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696420683777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"+accountsettings.pug&#10;//Added initial account settings as placeholder&#10;*index.js&#10;//Added request and response for accountsettings.pug&#10;*layout&#10;//no idea what i did here\">\r\n      <created>1696446371063</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696446371064</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"+formviewlayout.pug&#10;//Replicated layout.pub imports for use on formview.pug to avoid redundant imports when formview.pug extends layout.pug&#10;*index.js&#10;//Added user files on form view request response&#10;layout.pug&#10;//resolved icon bugs\">\r\n      <created>1696811465494</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696811465494</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"*formviewlayout.pug&#10;//Added set_features.js functionalities&#10;*layout.pug&#10;//Added set_features.js functionalities&#10;+set_features.js&#10;//Created function to receive privileges and remove unnecessary features from sidebar\">\r\n      <created>1696816184249</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696816184249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"+notifications.css&#10;//Added and segregated notifications.css © Cass&#10;*layout.pug&#10;//Added notifications elements © Cass&#10;+w3css4.css&#10;//Added checkbox css © Cass\">\r\n      <created>1696967033922</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696967033922</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"*layout.pug&#10;//Remodeled notifications design&#10;*notifications.css&#10;//Remodeled notifications design\">\r\n      <created>1696971188563</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696971188563</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"*layout.pug&#10;//Improved notifications design&#10;*index.pug&#10;//Remodeled notifications design&#10;//Prepared form flow structure\">\r\n      <created>1696974187147</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696974187147</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"*createforms.pug&#10;//Fixed rerouting when successful from saving&#10;*index.js&#10;//renamed saveform request response&#10;*layout.pug&#10;//Prepared form flow structure&#10;+viewformtemplate.pug&#10;//Prepared to receive templates&#10;+viewformtemplates.put&#10;//Prepared to receive templates\">\r\n      <created>1696978566465</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696978566465</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"*index.js&#10;//Added view form templates reqeust response&#10;*viewformtemplates.pug&#10;//Prepared to call view form template request response\">\r\n      <created>1696978850156</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696978850156</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"*index.js&#10;//Completed template request response cycle&#10;*viewformtemplate.pug&#10;//Prepared to receive template object&#10;+viewformtemplatelayout.pug&#10;//replicated layout to avoid redundant imports\">\r\n      <created>1696980102623</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696980102623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"*views.*&#10;//Improved pug layout and inclusion\">\r\n      <created>1696985258082</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696985258082</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"*layout.*&#10;//Cascaded all extensions&#10;*views.*&#10;//Removed all KNOWN rotting blocks and lines\">\r\n      <created>1696985953556</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696985953556</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"*viewtformtemplate.pug&#10;//now receives created form elements&#10;//BUGGED - TO BE FIXED BY FRONT END\">\r\n      <created>1696987104525</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1696987104525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"*sidebar.pug&#10;//Added Create widget acnhor&#10;*index.js&#10;//Added createwidget request response&#10;*viewforms.pug&#10;//Added section for &quot;shared with you&quot;&#10;//Split to forms assigned and shared forms\">\r\n      <created>1697401573177</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697401573177</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"*handle_ajax_upload_pictures.js&#10;//changed status log to alert, notifying user to refresh page to view changes\">\r\n      <created>1697402015037</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697402015037</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"* dbinit.js&#10;// Removed initialization of pictures collection&#10;// Embedded user_picture to users collection&#10;&#10;* index.js&#10;// Update for better uploading profile picture handling&#10;// Removes previous profile picture when changing profile picture&#10;&#10;* sidebar.pug&#10;// Updated calling of user picture\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1697730685850</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697730685850</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"*create_form_drag_drop.js&#10;//Modified indentations - prepped for remodelling\">\r\n      <created>1697843538112</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697843538112</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"*create_form_drag_drop.js&#10;//Modified hover effects to breath&#10;*createform_draggable_content.pug&#10;//Removed w3-hover-lightgrey style conflict\">\r\n      <created>1697929800387</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697929800387</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"*create_form_drag_drop.js&#10;//Added code block to count number of pages and children in preparation for viewformtemplate.pug&#10;*viewformtemplate.pug&#10;//Referenced to create_form_drag_drop.js to test page and child counting\">\r\n      <created>1697931417897</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697931417897</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"*create_form_drag_drop.js&#10;//updated breath&#10;*viewformtemplate.pug&#10;//Now references createform_draggable_content.pug\">\r\n      <created>1697941728257</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697941728257</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"*create_form_drag_drop.js&#10;//Now identifies current page and calculates current height of current page &#10;//Now sets current height after initialization\">\r\n      <created>1697945050806</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697945050806</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"*create_form_drag_drop.js&#10;//Removed draggable class from create new page&#10;//Added iteration for creating context menus for all children of all pages -- BUGGED\">\r\n      <created>1697987346528</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1697987346529</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"// scroll bars new design\">\r\n      <created>1698031357326</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698031357326</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"*createform_draggable_content.pug&#10;//Mounted create widget anchor to sidebar shortcut\">\r\n      <created>1698154880065</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698154880065</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"*dbinit.js&#10;//Added widgets collection connection initialization&#10;index.js&#10;//Added widgets collection connection initialization\">\r\n      <created>1698155175370</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698155175370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"*createwidget.pug&#10;//Added ajax function for saving widget&#10;index.js&#10;//Added save created widget post request\">\r\n      <created>1698156084606</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698156084606</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"index.js&#10;//Added owner to save widget post request\">\r\n      <created>1698156411335</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698156411335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"*index.js&#10;//Added get widgets function&#10;//Added get current widgets to create form reqeust&#10;*createform_draggable_content.pug&#10;//Added personal widget section to drag bar&#10;//Now receives widgets json block\">\r\n      <created>1698158076488</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698158076488</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"* accountsettings.pug&#10;// change button for updating password to onclick function for calling ajax update password&#10;&#10;+ handle_ajax_update_password.js&#10;// Created ajax for updating password&#10;&#10;* index.js&#10;// Created post for updating password\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698337764110</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698337764110</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"* accountsettings.pug&#10;// change button for updating password to onclick function for calling ajax update password&#10;&#10;+ handle_ajax_update_password.js&#10;// Created ajax for updating password&#10;&#10;* index.js&#10;// Created post for updating password\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698337770879</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698337770879</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"* formview.pug&#10;// For viewing forms&#10;&#10;* index.js&#10;// embedded intellijent engine in the backend\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698380999583</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698380999583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"*repo.*&#10;//fixed idle modal from pug to css -- PREPPED FOR RECYCLING\">\r\n      <created>1699602286701</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699602286701</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"*repo.*&#10;//fixed idle modal overlay-- PREPPED FOR RECYCLING\">\r\n      <created>1699617156400</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699617156400</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"*sidebar.pug&#10;//fixed bugs on modal template -- switched element ids to class for recyling&#10;*handleidle.js&#10;//fixed bugs on modal template&#10;*w3css4.css&#10;//switched id identifiers to class for recycling\">\r\n      <created>1699702241072</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699702241072</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"*formview.pug&#10;//implemented delete file modal&#10;*handle_ajax_delete.js&#10;//improved modal for deletion&#10;*handle_idle.js&#10;//improved script\">\r\n      <created>1699703544598</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699703544598</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"* index.js&#10;//Updated merger script\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699980072797</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699980072797</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"* index.js&#10;// Debugged merging\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699982794070</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699982794070</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700167158305</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700167158305</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"39\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"*viewtformtemplate.pug&#10;//now receives created form elements&#10;//BUGGED - TO BE FIXED BY FRONT END\" />\r\n    <MESSAGE value=\"*sidebar.pug&#10;//Added Create widget acnhor&#10;*index.js&#10;//Added createwidget request response&#10;*viewforms.pug&#10;//Added section for &quot;shared with you&quot;&#10;//Split to forms assigned and shared forms\" />\r\n    <MESSAGE value=\"*handle_ajax_upload_pictures.js&#10;//changed status log to alert, notifying user to refresh page to view changes\" />\r\n    <MESSAGE value=\"* dbinit.js&#10;// Removed initialization of pictures collection&#10;// Embedded user_picture to users collection&#10;&#10;* index.js&#10;// Update for better uploading profile picture handling&#10;// Removes previous profile picture when changing profile picture&#10;&#10;* sidebar.pug&#10;// Updated calling of user picture\" />\r\n    <MESSAGE value=\"*create_form_drag_drop.js&#10;//Modified indentations - prepped for remodelling\" />\r\n    <MESSAGE value=\"*create_form_drag_drop.js&#10;//Modified hover effects to breath&#10;*createform_draggable_content.pug&#10;//Removed w3-hover-lightgrey style conflict\" />\r\n    <MESSAGE value=\"*create_form_drag_drop.js&#10;//Added code block to count number of pages and children in preparation for viewformtemplate.pug&#10;*viewformtemplate.pug&#10;//Referenced to create_form_drag_drop.js to test page and child counting\" />\r\n    <MESSAGE value=\"*create_form_drag_drop.js&#10;//updated breath&#10;*viewformtemplate.pug&#10;//Now references createform_draggable_content.pug\" />\r\n    <MESSAGE value=\"*create_form_drag_drop.js&#10;//Now identifies current page and calculates current height of current page &#10;//Now sets current height after initialization\" />\r\n    <MESSAGE value=\"*create_form_drag_drop.js&#10;//Removed draggable class from create new page&#10;//Added iteration for creating context menus for all children of all pages -- BUGGED\" />\r\n    <MESSAGE value=\"// scroll bars new design\" />\r\n    <MESSAGE value=\"*createform_draggable_content.pug&#10;//Mounted create widget anchor to sidebar shortcut\" />\r\n    <MESSAGE value=\"*dbinit.js&#10;//Added widgets collection connection initialization&#10;index.js&#10;//Added widgets collection connection initialization\" />\r\n    <MESSAGE value=\"*createwidget.pug&#10;//Added ajax function for saving widget&#10;index.js&#10;//Added save created widget post request\" />\r\n    <MESSAGE value=\"index.js&#10;//Added owner to save widget post request\" />\r\n    <MESSAGE value=\"*index.js&#10;//Added get widgets function&#10;//Added get current widgets to create form reqeust&#10;*createform_draggable_content.pug&#10;//Added personal widget section to drag bar&#10;//Now receives widgets json block\" />\r\n    <MESSAGE value=\"* accountsettings.pug&#10;// change button for updating password to onclick function for calling ajax update password&#10;&#10;+ handle_ajax_update_password.js&#10;// Created ajax for updating password&#10;&#10;* index.js&#10;// Created post for updating password\" />\r\n    <MESSAGE value=\"* formview.pug&#10;// For viewing forms&#10;&#10;* index.js&#10;// embedded intellijent engine in the backend\" />\r\n    <MESSAGE value=\"*repo.*&#10;//fixed idle modal from pug to css -- PREPPED FOR RECYCLING\" />\r\n    <MESSAGE value=\"*repo.*&#10;//fixed idle modal overlay-- PREPPED FOR RECYCLING\" />\r\n    <MESSAGE value=\"*sidebar.pug&#10;//fixed bugs on modal template -- switched element ids to class for recyling&#10;*handleidle.js&#10;//fixed bugs on modal template&#10;*w3css4.css&#10;//switched id identifiers to class for recycling\" />\r\n    <MESSAGE value=\"*formview.pug&#10;//implemented delete file modal&#10;*handle_ajax_delete.js&#10;//improved modal for deletion&#10;*handle_idle.js&#10;//improved script\" />\r\n    <MESSAGE value=\"* index.js&#10;//Updated merger script\" />\r\n    <MESSAGE value=\"* index.js&#10;// Debugged merging\" />\r\n    <MESSAGE value=\"* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/.idea/workspace.xml	(date 1700343213193)
@@ -1,376 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="AutoImportSettings">
-    <option name="autoReloadType" value="SELECTIVE" />
-  </component>
-  <component name="ChangeListManager">
-    <list default="true" id="c3dbf595-75f2-40e6-8ef5-6192d9335e8c" name="Changes" comment="* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/index.js" afterDir="false" />
-    </list>
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_BRANCH_BY_REPOSITORY">
-      <map>
-        <entry key="$PROJECT_DIR$" value="main" />
-      </map>
-    </option>
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-  </component>
-  <component name="MarkdownSettingsMigration">
-    <option name="stateVersion" value="1" />
-  </component>
-  <component name="ProjectColorInfo">{
-  &quot;associatedIndex&quot;: 1
-}</component>
-  <component name="ProjectId" id="2WILMosCqF7RSTraY5bRuQcCOMT" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
-  <component name="ProjectViewState">
-    <option name="hideEmptyMiddlePackages" value="true" />
-    <option name="showLibraryContents" value="true" />
-  </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/fogef/OneDrive/Desktop/sacred branch&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/fogef/OneDrive/Desktop&quot;
   }
 }</component>
-  <component name="RecentsManager">
-    <key name="MoveFile.RECENT_KEYS">
-      <recent name="C:\Users\Admin\Desktop\the thesis container\views" />
-    </key>
-  </component>
-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="Default task">
-      <changelist id="c3dbf595-75f2-40e6-8ef5-6192d9335e8c" name="Changes" comment="" />
-      <created>1696415109496</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1696415109496</updated>
-    </task>
-    <task id="LOCAL-00001" summary="*layout.pug&#10;//fixed css call for navbar icons">
-      <created>1696420683777</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1696420683777</updated>
-    </task>
-    <task id="LOCAL-00002" summary="+accountsettings.pug&#10;//Added initial account settings as placeholder&#10;*index.js&#10;//Added request and response for accountsettings.pug&#10;*layout&#10;//no idea what i did here">
-      <created>1696446371063</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1696446371064</updated>
-    </task>
-    <task id="LOCAL-00003" summary="+formviewlayout.pug&#10;//Replicated layout.pub imports for use on formview.pug to avoid redundant imports when formview.pug extends layout.pug&#10;*index.js&#10;//Added user files on form view request response&#10;layout.pug&#10;//resolved icon bugs">
-      <created>1696811465494</created>
-      <option name="number" value="00003" />
-      <option name="presentableId" value="LOCAL-00003" />
-      <option name="project" value="LOCAL" />
-      <updated>1696811465494</updated>
-    </task>
-    <task id="LOCAL-00004" summary="*formviewlayout.pug&#10;//Added set_features.js functionalities&#10;*layout.pug&#10;//Added set_features.js functionalities&#10;+set_features.js&#10;//Created function to receive privileges and remove unnecessary features from sidebar">
-      <created>1696816184249</created>
-      <option name="number" value="00004" />
-      <option name="presentableId" value="LOCAL-00004" />
-      <option name="project" value="LOCAL" />
-      <updated>1696816184249</updated>
-    </task>
-    <task id="LOCAL-00005" summary="+notifications.css&#10;//Added and segregated notifications.css © Cass&#10;*layout.pug&#10;//Added notifications elements © Cass&#10;+w3css4.css&#10;//Added checkbox css © Cass">
-      <created>1696967033922</created>
-      <option name="number" value="00005" />
-      <option name="presentableId" value="LOCAL-00005" />
-      <option name="project" value="LOCAL" />
-      <updated>1696967033922</updated>
-    </task>
-    <task id="LOCAL-00006" summary="*layout.pug&#10;//Remodeled notifications design&#10;*notifications.css&#10;//Remodeled notifications design">
-      <created>1696971188563</created>
-      <option name="number" value="00006" />
-      <option name="presentableId" value="LOCAL-00006" />
-      <option name="project" value="LOCAL" />
-      <updated>1696971188563</updated>
-    </task>
-    <task id="LOCAL-00007" summary="*layout.pug&#10;//Improved notifications design&#10;*index.pug&#10;//Remodeled notifications design&#10;//Prepared form flow structure">
-      <created>1696974187147</created>
-      <option name="number" value="00007" />
-      <option name="presentableId" value="LOCAL-00007" />
-      <option name="project" value="LOCAL" />
-      <updated>1696974187147</updated>
-    </task>
-    <task id="LOCAL-00008" summary="*createforms.pug&#10;//Fixed rerouting when successful from saving&#10;*index.js&#10;//renamed saveform request response&#10;*layout.pug&#10;//Prepared form flow structure&#10;+viewformtemplate.pug&#10;//Prepared to receive templates&#10;+viewformtemplates.put&#10;//Prepared to receive templates">
-      <created>1696978566465</created>
-      <option name="number" value="00008" />
-      <option name="presentableId" value="LOCAL-00008" />
-      <option name="project" value="LOCAL" />
-      <updated>1696978566465</updated>
-    </task>
-    <task id="LOCAL-00009" summary="*index.js&#10;//Added view form templates reqeust response&#10;*viewformtemplates.pug&#10;//Prepared to call view form template request response">
-      <created>1696978850156</created>
-      <option name="number" value="00009" />
-      <option name="presentableId" value="LOCAL-00009" />
-      <option name="project" value="LOCAL" />
-      <updated>1696978850156</updated>
-    </task>
-    <task id="LOCAL-00010" summary="*index.js&#10;//Completed template request response cycle&#10;*viewformtemplate.pug&#10;//Prepared to receive template object&#10;+viewformtemplatelayout.pug&#10;//replicated layout to avoid redundant imports">
-      <created>1696980102623</created>
-      <option name="number" value="00010" />
-      <option name="presentableId" value="LOCAL-00010" />
-      <option name="project" value="LOCAL" />
-      <updated>1696980102623</updated>
-    </task>
-    <task id="LOCAL-00011" summary="*views.*&#10;//Improved pug layout and inclusion">
-      <created>1696985258082</created>
-      <option name="number" value="00011" />
-      <option name="presentableId" value="LOCAL-00011" />
-      <option name="project" value="LOCAL" />
-      <updated>1696985258082</updated>
-    </task>
-    <task id="LOCAL-00012" summary="*layout.*&#10;//Cascaded all extensions&#10;*views.*&#10;//Removed all KNOWN rotting blocks and lines">
-      <created>1696985953556</created>
-      <option name="number" value="00012" />
-      <option name="presentableId" value="LOCAL-00012" />
-      <option name="project" value="LOCAL" />
-      <updated>1696985953556</updated>
-    </task>
-    <task id="LOCAL-00013" summary="*viewtformtemplate.pug&#10;//now receives created form elements&#10;//BUGGED - TO BE FIXED BY FRONT END">
-      <created>1696987104525</created>
-      <option name="number" value="00013" />
-      <option name="presentableId" value="LOCAL-00013" />
-      <option name="project" value="LOCAL" />
-      <updated>1696987104525</updated>
-    </task>
-    <task id="LOCAL-00014" summary="*sidebar.pug&#10;//Added Create widget acnhor&#10;*index.js&#10;//Added createwidget request response&#10;*viewforms.pug&#10;//Added section for &quot;shared with you&quot;&#10;//Split to forms assigned and shared forms">
-      <created>1697401573177</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1697401573177</updated>
-    </task>
-    <task id="LOCAL-00015" summary="*handle_ajax_upload_pictures.js&#10;//changed status log to alert, notifying user to refresh page to view changes">
-      <created>1697402015037</created>
-      <option name="number" value="00015" />
-      <option name="presentableId" value="LOCAL-00015" />
-      <option name="project" value="LOCAL" />
-      <updated>1697402015037</updated>
-    </task>
-    <task id="LOCAL-00016" summary="* dbinit.js&#10;// Removed initialization of pictures collection&#10;// Embedded user_picture to users collection&#10;&#10;* index.js&#10;// Update for better uploading profile picture handling&#10;// Removes previous profile picture when changing profile picture&#10;&#10;* sidebar.pug&#10;// Updated calling of user picture">
-      <option name="closed" value="true" />
-      <created>1697730685850</created>
-      <option name="number" value="00016" />
-      <option name="presentableId" value="LOCAL-00016" />
-      <option name="project" value="LOCAL" />
-      <updated>1697730685850</updated>
-    </task>
-    <task id="LOCAL-00017" summary="*create_form_drag_drop.js&#10;//Modified indentations - prepped for remodelling">
-      <created>1697843538112</created>
-      <option name="number" value="00017" />
-      <option name="presentableId" value="LOCAL-00017" />
-      <option name="project" value="LOCAL" />
-      <updated>1697843538112</updated>
-    </task>
-    <task id="LOCAL-00018" summary="*create_form_drag_drop.js&#10;//Modified hover effects to breath&#10;*createform_draggable_content.pug&#10;//Removed w3-hover-lightgrey style conflict">
-      <created>1697929800387</created>
-      <option name="number" value="00018" />
-      <option name="presentableId" value="LOCAL-00018" />
-      <option name="project" value="LOCAL" />
-      <updated>1697929800387</updated>
-    </task>
-    <task id="LOCAL-00019" summary="*create_form_drag_drop.js&#10;//Added code block to count number of pages and children in preparation for viewformtemplate.pug&#10;*viewformtemplate.pug&#10;//Referenced to create_form_drag_drop.js to test page and child counting">
-      <created>1697931417897</created>
-      <option name="number" value="00019" />
-      <option name="presentableId" value="LOCAL-00019" />
-      <option name="project" value="LOCAL" />
-      <updated>1697931417897</updated>
-    </task>
-    <task id="LOCAL-00020" summary="*create_form_drag_drop.js&#10;//updated breath&#10;*viewformtemplate.pug&#10;//Now references createform_draggable_content.pug">
-      <created>1697941728257</created>
-      <option name="number" value="00020" />
-      <option name="presentableId" value="LOCAL-00020" />
-      <option name="project" value="LOCAL" />
-      <updated>1697941728257</updated>
-    </task>
-    <task id="LOCAL-00021" summary="*create_form_drag_drop.js&#10;//Now identifies current page and calculates current height of current page &#10;//Now sets current height after initialization">
-      <created>1697945050806</created>
-      <option name="number" value="00021" />
-      <option name="presentableId" value="LOCAL-00021" />
-      <option name="project" value="LOCAL" />
-      <updated>1697945050806</updated>
-    </task>
-    <task id="LOCAL-00022" summary="*create_form_drag_drop.js&#10;//Removed draggable class from create new page&#10;//Added iteration for creating context menus for all children of all pages -- BUGGED">
-      <created>1697987346528</created>
-      <option name="number" value="00022" />
-      <option name="presentableId" value="LOCAL-00022" />
-      <option name="project" value="LOCAL" />
-      <updated>1697987346529</updated>
-    </task>
-    <task id="LOCAL-00023" summary="// scroll bars new design">
-      <created>1698031357326</created>
-      <option name="number" value="00023" />
-      <option name="presentableId" value="LOCAL-00023" />
-      <option name="project" value="LOCAL" />
-      <updated>1698031357326</updated>
-    </task>
-    <task id="LOCAL-00024" summary="*createform_draggable_content.pug&#10;//Mounted create widget anchor to sidebar shortcut">
-      <created>1698154880065</created>
-      <option name="number" value="00024" />
-      <option name="presentableId" value="LOCAL-00024" />
-      <option name="project" value="LOCAL" />
-      <updated>1698154880065</updated>
-    </task>
-    <task id="LOCAL-00025" summary="*dbinit.js&#10;//Added widgets collection connection initialization&#10;index.js&#10;//Added widgets collection connection initialization">
-      <created>1698155175370</created>
-      <option name="number" value="00025" />
-      <option name="presentableId" value="LOCAL-00025" />
-      <option name="project" value="LOCAL" />
-      <updated>1698155175370</updated>
-    </task>
-    <task id="LOCAL-00026" summary="*createwidget.pug&#10;//Added ajax function for saving widget&#10;index.js&#10;//Added save created widget post request">
-      <created>1698156084606</created>
-      <option name="number" value="00026" />
-      <option name="presentableId" value="LOCAL-00026" />
-      <option name="project" value="LOCAL" />
-      <updated>1698156084606</updated>
-    </task>
-    <task id="LOCAL-00027" summary="index.js&#10;//Added owner to save widget post request">
-      <created>1698156411335</created>
-      <option name="number" value="00027" />
-      <option name="presentableId" value="LOCAL-00027" />
-      <option name="project" value="LOCAL" />
-      <updated>1698156411335</updated>
-    </task>
-    <task id="LOCAL-00028" summary="*index.js&#10;//Added get widgets function&#10;//Added get current widgets to create form reqeust&#10;*createform_draggable_content.pug&#10;//Added personal widget section to drag bar&#10;//Now receives widgets json block">
-      <created>1698158076488</created>
-      <option name="number" value="00028" />
-      <option name="presentableId" value="LOCAL-00028" />
-      <option name="project" value="LOCAL" />
-      <updated>1698158076488</updated>
-    </task>
-    <task id="LOCAL-00029" summary="* accountsettings.pug&#10;// change button for updating password to onclick function for calling ajax update password&#10;&#10;+ handle_ajax_update_password.js&#10;// Created ajax for updating password&#10;&#10;* index.js&#10;// Created post for updating password">
-      <option name="closed" value="true" />
-      <created>1698337764110</created>
-      <option name="number" value="00029" />
-      <option name="presentableId" value="LOCAL-00029" />
-      <option name="project" value="LOCAL" />
-      <updated>1698337764110</updated>
-    </task>
-    <task id="LOCAL-00030" summary="* accountsettings.pug&#10;// change button for updating password to onclick function for calling ajax update password&#10;&#10;+ handle_ajax_update_password.js&#10;// Created ajax for updating password&#10;&#10;* index.js&#10;// Created post for updating password">
-      <option name="closed" value="true" />
-      <created>1698337770879</created>
-      <option name="number" value="00030" />
-      <option name="presentableId" value="LOCAL-00030" />
-      <option name="project" value="LOCAL" />
-      <updated>1698337770879</updated>
-    </task>
-    <task id="LOCAL-00031" summary="* formview.pug&#10;// For viewing forms&#10;&#10;* index.js&#10;// embedded intellijent engine in the backend">
-      <option name="closed" value="true" />
-      <created>1698380999583</created>
-      <option name="number" value="00031" />
-      <option name="presentableId" value="LOCAL-00031" />
-      <option name="project" value="LOCAL" />
-      <updated>1698380999583</updated>
-    </task>
-    <task id="LOCAL-00032" summary="*repo.*&#10;//fixed idle modal from pug to css -- PREPPED FOR RECYCLING">
-      <created>1699602286701</created>
-      <option name="number" value="00032" />
-      <option name="presentableId" value="LOCAL-00032" />
-      <option name="project" value="LOCAL" />
-      <updated>1699602286701</updated>
-    </task>
-    <task id="LOCAL-00033" summary="*repo.*&#10;//fixed idle modal overlay-- PREPPED FOR RECYCLING">
-      <created>1699617156400</created>
-      <option name="number" value="00033" />
-      <option name="presentableId" value="LOCAL-00033" />
-      <option name="project" value="LOCAL" />
-      <updated>1699617156400</updated>
-    </task>
-    <task id="LOCAL-00034" summary="*sidebar.pug&#10;//fixed bugs on modal template -- switched element ids to class for recyling&#10;*handleidle.js&#10;//fixed bugs on modal template&#10;*w3css4.css&#10;//switched id identifiers to class for recycling">
-      <created>1699702241072</created>
-      <option name="number" value="00034" />
-      <option name="presentableId" value="LOCAL-00034" />
-      <option name="project" value="LOCAL" />
-      <updated>1699702241072</updated>
-    </task>
-    <task id="LOCAL-00035" summary="*formview.pug&#10;//implemented delete file modal&#10;*handle_ajax_delete.js&#10;//improved modal for deletion&#10;*handle_idle.js&#10;//improved script">
-      <created>1699703544598</created>
-      <option name="number" value="00035" />
-      <option name="presentableId" value="LOCAL-00035" />
-      <option name="project" value="LOCAL" />
-      <updated>1699703544598</updated>
-    </task>
-    <task id="LOCAL-00036" summary="* index.js&#10;//Updated merger script">
-      <option name="closed" value="true" />
-      <created>1699980072797</created>
-      <option name="number" value="00036" />
-      <option name="presentableId" value="LOCAL-00036" />
-      <option name="project" value="LOCAL" />
-      <updated>1699980072797</updated>
-    </task>
-    <task id="LOCAL-00037" summary="* index.js&#10;// Debugged merging">
-      <option name="closed" value="true" />
-      <created>1699982794070</created>
-      <option name="number" value="00037" />
-      <option name="presentableId" value="LOCAL-00037" />
-      <option name="project" value="LOCAL" />
-      <updated>1699982794070</updated>
-    </task>
-    <task id="LOCAL-00038" summary="* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details">
-      <option name="closed" value="true" />
-      <created>1700167158305</created>
-      <option name="number" value="00038" />
-      <option name="presentableId" value="LOCAL-00038" />
-      <option name="project" value="LOCAL" />
-      <updated>1700167158305</updated>
-    </task>
-    <option name="localTasksCounter" value="39" />
-    <servers />
-  </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-  <component name="VcsManagerConfiguration">
-    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-    <MESSAGE value="*viewtformtemplate.pug&#10;//now receives created form elements&#10;//BUGGED - TO BE FIXED BY FRONT END" />
-    <MESSAGE value="*sidebar.pug&#10;//Added Create widget acnhor&#10;*index.js&#10;//Added createwidget request response&#10;*viewforms.pug&#10;//Added section for &quot;shared with you&quot;&#10;//Split to forms assigned and shared forms" />
-    <MESSAGE value="*handle_ajax_upload_pictures.js&#10;//changed status log to alert, notifying user to refresh page to view changes" />
-    <MESSAGE value="* dbinit.js&#10;// Removed initialization of pictures collection&#10;// Embedded user_picture to users collection&#10;&#10;* index.js&#10;// Update for better uploading profile picture handling&#10;// Removes previous profile picture when changing profile picture&#10;&#10;* sidebar.pug&#10;// Updated calling of user picture" />
-    <MESSAGE value="*create_form_drag_drop.js&#10;//Modified indentations - prepped for remodelling" />
-    <MESSAGE value="*create_form_drag_drop.js&#10;//Modified hover effects to breath&#10;*createform_draggable_content.pug&#10;//Removed w3-hover-lightgrey style conflict" />
-    <MESSAGE value="*create_form_drag_drop.js&#10;//Added code block to count number of pages and children in preparation for viewformtemplate.pug&#10;*viewformtemplate.pug&#10;//Referenced to create_form_drag_drop.js to test page and child counting" />
-    <MESSAGE value="*create_form_drag_drop.js&#10;//updated breath&#10;*viewformtemplate.pug&#10;//Now references createform_draggable_content.pug" />
-    <MESSAGE value="*create_form_drag_drop.js&#10;//Now identifies current page and calculates current height of current page &#10;//Now sets current height after initialization" />
-    <MESSAGE value="*create_form_drag_drop.js&#10;//Removed draggable class from create new page&#10;//Added iteration for creating context menus for all children of all pages -- BUGGED" />
-    <MESSAGE value="// scroll bars new design" />
-    <MESSAGE value="*createform_draggable_content.pug&#10;//Mounted create widget anchor to sidebar shortcut" />
-    <MESSAGE value="*dbinit.js&#10;//Added widgets collection connection initialization&#10;index.js&#10;//Added widgets collection connection initialization" />
-    <MESSAGE value="*createwidget.pug&#10;//Added ajax function for saving widget&#10;index.js&#10;//Added save created widget post request" />
-    <MESSAGE value="index.js&#10;//Added owner to save widget post request" />
-    <MESSAGE value="*index.js&#10;//Added get widgets function&#10;//Added get current widgets to create form reqeust&#10;*createform_draggable_content.pug&#10;//Added personal widget section to drag bar&#10;//Now receives widgets json block" />
-    <MESSAGE value="* accountsettings.pug&#10;// change button for updating password to onclick function for calling ajax update password&#10;&#10;+ handle_ajax_update_password.js&#10;// Created ajax for updating password&#10;&#10;* index.js&#10;// Created post for updating password" />
-    <MESSAGE value="* formview.pug&#10;// For viewing forms&#10;&#10;* index.js&#10;// embedded intellijent engine in the backend" />
-    <MESSAGE value="*repo.*&#10;//fixed idle modal from pug to css -- PREPPED FOR RECYCLING" />
-    <MESSAGE value="*repo.*&#10;//fixed idle modal overlay-- PREPPED FOR RECYCLING" />
-    <MESSAGE value="*sidebar.pug&#10;//fixed bugs on modal template -- switched element ids to class for recyling&#10;*handleidle.js&#10;//fixed bugs on modal template&#10;*w3css4.css&#10;//switched id identifiers to class for recycling" />
-    <MESSAGE value="*formview.pug&#10;//implemented delete file modal&#10;*handle_ajax_delete.js&#10;//improved modal for deletion&#10;*handle_idle.js&#10;//improved script" />
-    <MESSAGE value="* index.js&#10;//Updated merger script" />
-    <MESSAGE value="* index.js&#10;// Debugged merging" />
-    <MESSAGE value="* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details" />
-    <option name="LAST_COMMIT_MESSAGE" value="* create_form_style.css&#10;// Updated css styles&#10;&#10;* formview.pug&#10;// Validations for users on which editing of form details should be modified&#10;// Created an autocomplete for assigning users to a form&#10;// Created an AJAX function for Assigning Users to a form&#10;&#10;* index.js&#10;// Cascading allow file upload status&#10;// Restructured formview with control number function, created a validation for which user type should be viewed.&#10;// Created a function that gets all unique forms based on unique control numbers of forms &#10;// Will now validate which forms will only be seen by assigned users, published forms, and shared forms.&#10;// Created an AJAX backend function for assigning users to a form that will store a document in the forms collection&#10;// Recreated Publish Form to properly cascade the proper initial status of a form if newly created, also makes sure that only a single unique form with the same control number be Published.&#10;// Created an AJAX function for toggling allow file upload for the forms collection that will be inserted to the dedicated document in the collection.&#10;// Recreated AJAX function for toggling sharing the form&#10;// Changed autocomplete function to retrieve all employee ids for now&#10;&#10;* index.pug&#10;// Recreated user dashboard&#10;&#10;* sidebar.pug&#10;// Added a validation for setting form due date to specific user types&#10;&#10;* viewforms.pug&#10;// Recreated to add validations for different user types&#10;&#10;* viewformtemplate.pug&#10;// Recreated to properly update buttons and inner HTMLs statuses&#10;&#10;* viewformtemplates.pug&#10;// Updated to properly show proper form details" />
-  </component>
 </project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/intellidocs.iml\" filepath=\"$PROJECT_DIR$/.idea/intellidocs.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/.idea/modules.xml	(date 1700343248615)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/intellidocs.iml" filepath="$PROJECT_DIR$/.idea/intellidocs.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/FINAL BRANCH.iml" filepath="$PROJECT_DIR$/.idea/FINAL BRANCH.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"\" vcs=\"Git\" />\r\n    <mapping directory=\"$PROJECT_DIR$/sacred branch\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/.idea/vcs.xml	(date 1700343248636)
@@ -2,6 +2,5 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/sacred branch" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: views/formview.pug
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>extends formviewlayout.pug\r\n\r\nblock body\r\n    #main.w3-main(style='margin-left:250px')\r\n        .w3-row.w3-padding-32\r\n        if (currentUserDetailsBlock.userLevel === \"Secretary\" || currentUserDetailsBlock.userLevel === \"Document Controller\")\r\n        else\r\n            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                .w3-row\r\n                    h1.w3-center Form Name: #{currentForm.form_name}\r\n\r\n                .w3-row\r\n                    .w3-twothird.w3-container2\r\n                        h2 Form Details\r\n                        hr\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Version History\r\n                                hr\r\n                                .w3-row\r\n                                    select#versionDropDown(name='versionDropDown')\r\n                                        each version in allVersions\r\n                                            option #{version.user_version}\r\n                                .w3-row\r\n                                    br\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick=`showLoadVersionModal()`)\r\n                                        i.fa.fa-refresh.fa-fw.w3-margin-right\r\n                                        |   Load Form\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Share Document\r\n                                hr\r\n                                .w3-row\r\n                                    input(id='employee_email' name='employee_email' placeholder=\"Employee Email\")\r\n                                .w3-row\r\n                                    select#accessLevel(name='accessLevel')\r\n                                        option(value='Viewer') Viewer\r\n                                        option(value='Editor') Editor\r\n                                .w3-row\r\n                                    br\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='validateShareForm()')\r\n                                        i.fa.fa-share-alt.fa-fw.w3-margin-right\r\n                                        |   Share\r\n\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Shared with\r\n                                hr\r\n                                h4\r\n                                    i.fa.fa-eye.fa-fw.w3-margin-right\r\n                                    |   denmark - View Only\r\n                                h4\r\n                                    i.fa.fa-eye.fa-fw.w3-margin-right\r\n                                    |   jao - View Only\r\n                                h4\r\n                                    i.fa.fa-eye.fa-fw.w3-margin-right\r\n                                    i.fa.fa-pencil-square-o.fa-fw.w3-margin-right\r\n                                    |   jian - View and Edit\r\n\r\n                    .w3-third.w3-container2\r\n                        h2 Form Settings\r\n                        hr\r\n                        .w3-row\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                .w3-row\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='showSaveFormModal()')\r\n                                        i.fa.fa-floppy-o.fa-fw.w3-margin-right\r\n                                        |   Save Form\r\n                                    br\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='downloadAsPDF()')\r\n                                        i.fa.fa-download.fa-fw.w3-margin-right\r\n                                        |   Download as PDF\r\n\r\n        if (currentUserDetailsBlock.userLevel === \"Secretary\" || currentUserDetailsBlock.userLevel === \"Super Admin\" || currentUserDetailsBlock.userLevel === \"Admin\")\r\n            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                .w3-row\r\n                    .w3-half.w3-container2\r\n                        h1 User Form Settings\r\n                        hr\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Details\r\n                                hr\r\n                                .w3-row\r\n                                    h4 Status: Active\r\n                                    h4 Due Date: 11/18/2023\r\n\r\n\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Settings\r\n                                hr\r\n                                .w3-row\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='validateShareForm()')\r\n                                        i.fa.fa-share-alt.fa-fw.w3-margin-right\r\n                                        |   Activate\r\n                                br\r\n                                .w3-row\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='validateShareForm()')\r\n                                        i.fa.fa-share-alt.fa-fw.w3-margin-right\r\n                                        |   Set Due Date\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Assign User\r\n                                hr\r\n                                .w3-row\r\n                                    input(id='assign_user' name='employee_email' placeholder=\"Employee Email\")\r\n                                br\r\n                                .w3-row\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='validateAssignUsers()')\r\n                                        i.fa.fa-share-alt.fa-fw.w3-margin-right\r\n                                        |   Assign Selected User\r\n\r\n                    .w3-half.w3-container2\r\n                        h1 Submitted Forms\r\n                        hr\r\n                        .w3-twothird\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                table#submittedFormsTable.display(width='100%')\r\n                                    thead\r\n                                        tr\r\n                                            th Employee Name\r\n                                            th Date Submitted\r\n                                            th Actions\r\n                                    tbody\r\n\r\n\r\n                        .w3-third\r\n                            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                                h2 Current Form Details\r\n                                hr\r\n                                .w3-row\r\n                                    p Owner: 22222222@slu.edu.ph\r\n                                    p Date Submitted: 11/16/2023\r\n                                    p Status: Pending\r\n                                .w3-row\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='validateShareForm()')\r\n                                        i.fa.fa-share-alt.fa-fw.w3-margin-right\r\n                                        |   Approve\r\n                                br\r\n                                .w3-row\r\n                                    button.w3-button.w3-block.w3-theme-dark(onclick='validateShareForm()')\r\n                                        i.fa.fa-share-alt.fa-fw.w3-margin-right\r\n                                        |   Return\r\n\r\n\r\n\r\n        .w3-row\r\n            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                #theContainerOfTheForm\r\n\r\n\r\n        #saveFormModal\r\n            #saveFormModalOverLay.dialogoverlay\r\n            #saveFormModalDialogbox.dialogbox.slit-in-vertical\r\n                #randomDiv\r\n                    .dialogboxhead\r\n                        .i.fa.fa-exclamation-circle Confirm Saving\r\n                    .dialogboxbody\r\n                        p Are you sure you want to save this Form?\r\n                        p Saved changes will be accessible through loading previous versions\r\n                .dialogboxfoot\r\n                    button.pure-material-button-contained.active(onclick=`saveFilledOutForm()`) Yes\r\n                .dialogboxfoot2\r\n                    button.pure-material-button-contained.active(onclick=`hideSaveFormModal()`) No\r\n\r\n        #shareFormAlertModal\r\n            #shareFormAlertOverLay.dialogoverlay\r\n            #shareFormAlertDialogbox.dialogbox.slit-in-vertical\r\n                #randomDiv\r\n                    .dialogboxhead\r\n                        .i.fa.fa-exclamation-circle\r\n                        |   Alert\r\n                    .dialogboxbody\r\n                        p Please make sure to put a valid Employee Email Address\r\n                .dialogboxfoot\r\n                    button.pure-material-button-contained.active(onclick=`hideShareFormAlertModal()`) Okay\r\n\r\n        #shareFormModal\r\n            #shareFormOverLay.dialogoverlay\r\n            #shareFormDialogbox.dialogbox.slit-in-vertical\r\n                #randomDiv\r\n                    .dialogboxhead\r\n                        .i.fa.fa-exclamation-circle Confirm Form Sharing Details\r\n                    .dialogboxbody\r\n                        p#sharingMessage\r\n                .dialogboxfoot\r\n                    button.pure-material-button-contained.active(onclick=`shareForm()`) Yes\r\n                .dialogboxfoot2\r\n                    button.pure-material-button-contained.active(onclick=`hideShareFormModal()`) No\r\n\r\n        #loadVersionModal\r\n            #loadVersionOverLay.dialogoverlay\r\n            #loadVersionDialogbox.dialogbox.slit-in-vertical\r\n                #randomDiv\r\n                    .dialogboxhead\r\n                        .i.fa.fa-exclamation-circle Confirm Form Rendering\r\n                    .dialogboxbody\r\n                        p#formRenderingMessage\r\n                .dialogboxfoot\r\n                    button.pure-material-button-contained.active(onclick=`renderSelectedVersion()`) Yes\r\n                .dialogboxfoot2\r\n                    button.pure-material-button-contained.active(onclick=`hideLoadVersionModal()`) No\r\n\r\n        #deleteFileModal\r\n            #deleteFileOverLay.dialogoverlay\r\n            #deleteFileDialogbox.dialogbox.slit-in-vertical\r\n                #randomDiv\r\n                    .dialogboxhead\r\n                        .i.fa.fa-exclamation-circle Confirm File Deletion\r\n                    .dialogboxbody\r\n                        p Are you sure you want to delete this file?\r\n                        h2#selectedFileForDeletionPlaceholder\r\n                .dialogboxfoot\r\n                    button.pure-material-button-contained.active(onclick=`deleteSelectedFile()`) Yes\r\n                .dialogboxfoot2\r\n                    button.pure-material-button-contained.active(onclick=`hideDeleteModal()`) No\r\n\r\n\r\n\r\n        .w3-row.w3-padding-32\r\n            .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                .w3-row\r\n                    h1 File Management\r\n                    hr\r\n                    .w3-twothird.w3-container\r\n                        .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n\r\n                            table#filesTable.display(width='100%')\r\n                                thead\r\n                                    tr\r\n                                        th File Name\r\n                                        th File Size\r\n                                        th Uploaded By\r\n                                        th Uploaded At\r\n                                        th File Actions\r\n                                tbody\r\n                                    each file in currentUserFiles\r\n                                        tr\r\n                                            td #{file.file_name}\r\n                                            td #{file.file_size}\r\n                                            td #{file.uploadedBy}\r\n                                            td #{file.uploadedAt}\r\n                                            td\r\n                                                a.w3-half.w3-hover-white.edit-btn(href='/downloadfile/'+file.file_name)\r\n                                                    i.fa.fa-pencil.w3-text-theme\r\n                                                a.w3-half.w3-hover-white(onclick=`showDeleteModal(\"${file.file_name}\")`)\r\n                                                    i.fa.fa-times.w3-text-theme\r\n\r\n\r\n                    .w3-third.w3-container\r\n                        .w3-container2.w3-card.w3-white.w3-round.w3-margin\r\n                            h1\r\n                                i.fa.fa-upload.w3-text-theme\r\n                                |   Upload Files\r\n                            hr\r\n                            form(action=\"/\", method=\"POST\", enctype=\"multipart/form-data\" id=\"upload-form\")\r\n                                .w3-row\r\n                                    input.bottone5(type=\"file\", name=\"file\", id=\"file\")\r\n                                    br\r\n                                    input.bottone5(type=\"submit\", value=\"Upload\")\r\n\r\n    script(src='https://code.jquery.com/ui/1.13.2/jquery-ui.js')\r\n    link(rel='stylesheet' href='//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css')\r\n\r\n    script.\r\n        var formBlock = !{JSON.stringify(currentForm)};\r\n        var empEmails = !{JSON.stringify(retrievedUserEmails)}\r\n        var receivedFormContent = formBlock.form_content;\r\n        console.log(\"This is the receivedFormContent \", receivedFormContent);\r\n        var theContainerOfTheForm = document.getElementById('theContainerOfTheForm');\r\n        var formControlNumber = formBlock.form_control_number;\r\n        theContainerOfTheForm.innerHTML = receivedFormContent;\r\n        console.log(!{JSON.stringify(currentForm)});\r\n\r\n        $(function() {\r\n            var allEmails = empEmails;\r\n            $( \"#employee_email\" ).autocomplete({\r\n                source: allEmails\r\n            });\r\n        });\r\n\r\n        $(function() {\r\n            var allEmails = empEmails;\r\n            $( \"#assign_user\" ).autocomplete({\r\n                source: allEmails\r\n            });\r\n        });\r\n\r\n    script(src='/js/client.functions/handle_ajax_save_filled_out_form.js')\r\n    script(src='/js/client.functions/handle_ajax_share_form.js')\r\n    script(src='/js/client.functions/handle_ajax_load_version.js')\r\n\r\n\r\n    script.\r\n        var table2 = $('#submittedFormsTable').DataTable();\r\n\r\n    script.\r\n        function validateAssignUsers(){\r\n            selectedUserToAssign = document.getElementById('assign_user').value;\r\n\r\n            if(!selectedUserToAssign){\r\n                alert(\"Please enter an email to share the form to.\");\r\n            } else {\r\n                const data = {\r\n                    assignedUser: selectedUserToAssign,\r\n                    formControlNumber: formControlNumber\r\n                };\r\n\r\n                $.ajax({\r\n                    type: 'PUT',\r\n                    url: '/AJAX_assignUsers',\r\n                    data: data,\r\n                    success: function(response) {\r\n                        if (response.status_code === 1) {\r\n                            alert(\"No user was assigned to the form\");\r\n                        } else if (response.status_code === 0) {\r\n                            alert(selectedUserToAssign + \" was assigned to the form.\");\r\n                        } else {\r\n                            alert(\"Error at AJAX function in assigning users.\");\r\n                        }\r\n                    },\r\n                    error: function(error){\r\n                        console.log(\"AJAX Error: \" + error);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/formview.pug b/views/formview.pug
--- a/views/formview.pug	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/views/formview.pug	(date 1700329986000)
@@ -147,7 +147,8 @@
 
         .w3-row
             .w3-container2.w3-card.w3-white.w3-round.w3-margin
-                #theContainerOfTheForm
+                #enginePlaceHolder
+                //#theContainerOfTheForm
 
 
         #saveFormModal
@@ -216,8 +217,6 @@
                 .dialogboxfoot2
                     button.pure-material-button-contained.active(onclick=`hideDeleteModal()`) No
 
-
-
         .w3-row.w3-padding-32
             .w3-container2.w3-card.w3-white.w3-round.w3-margin
                 .w3-row
@@ -267,11 +266,13 @@
         var formBlock = !{JSON.stringify(currentForm)};
         var empEmails = !{JSON.stringify(retrievedUserEmails)}
         var receivedFormContent = formBlock.form_content;
-        console.log("This is the receivedFormContent ", receivedFormContent);
-        var theContainerOfTheForm = document.getElementById('theContainerOfTheForm');
+        //console.log("This is the receivedFormContent ", receivedFormContent);
+
+        var enginePlaceHolder = document.getElementById('enginePlaceHolder');
         var formControlNumber = formBlock.form_control_number;
-        theContainerOfTheForm.innerHTML = receivedFormContent;
-        console.log(!{JSON.stringify(currentForm)});
+
+        enginePlaceHolder.innerHTML = receivedFormContent;
+        //console.log(!{JSON.stringify(currentForm)});
 
         $(function() {
             var allEmails = empEmails;
@@ -287,6 +288,7 @@
             });
         });
 
+    script(src='/js/client.engine/htmlToJson.js')
     script(src='/js/client.functions/handle_ajax_save_filled_out_form.js')
     script(src='/js/client.functions/handle_ajax_share_form.js')
     script(src='/js/client.functions/handle_ajax_load_version.js')
Index: views/js/client.functions/handle_ajax_save_filled_out_form.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var saveFormModal = document.getElementById('saveFormModal');\r\nvar saveFormModalOverLay = document.getElementById('saveFormModalOverLay');\r\nvar saveFormModalDialogbox = document.getElementById('saveFormModalDialogbox');\r\n\r\nfunction showSaveFormModal() {\r\n    saveFormModal.style.display = 'block';\r\n\r\n    saveFormModalOverLay.style.display = 'block';\r\n    saveFormModalOverLay.style.height = 2000+\"px\";\r\n\r\n    saveFormModalDialogbox.style.top = \"100px\";\r\n    saveFormModalDialogbox.style.display = \"block\";\r\n    saveFormModalDialogbox.style.position = \"fixed\";\r\n}\r\n\r\nfunction hideSaveFormModal(){\r\n    saveFormModal.style.display = 'none';\r\n    saveFormModalOverLay.style.display = \"none\";\r\n    saveFormModalDialogbox.style.display = \"none\";\r\n}\r\n\r\n\r\nfunction saveFilledOutForm(){\r\n    var formBody = document.getElementById('theContainerOfTheForm').innerHTML;\r\n\r\n    const data = {\r\n        formContent: formBody\r\n    };\r\n\r\n    $.ajax({\r\n        type: 'PUT',\r\n        url: '/savefilledoutform',\r\n        data: data,\r\n        success: function(response) {\r\n            if (response.status_code === 1) {\r\n                alert(\"Error in saving the form.\");\r\n            } else if (response.status_code === 0) {\r\n                updateDropdownOptions(response.allUserFormVersions);\r\n                alert(\"Successfully saved the form.\");\r\n                hideSaveFormModal();\r\n            } else {\r\n                $('.error-message').text(response.error);\r\n            }\r\n        },\r\n        error: function(error) {\r\n            console.error('AJAX error:', error);\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateDropdownOptions(versions) {\r\n    var dropdown = document.getElementById('versionDropDown');\r\n\r\n    // Clear existing options\r\n    dropdown.innerHTML = '';\r\n\r\n    // Add new options based on the received versions\r\n    versions.forEach(function(version) {\r\n        var option = document.createElement('option');\r\n        option.value = version;\r\n        option.text = version;\r\n        dropdown.add(option);\r\n    });\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/js/client.functions/handle_ajax_save_filled_out_form.js b/views/js/client.functions/handle_ajax_save_filled_out_form.js
--- a/views/js/client.functions/handle_ajax_save_filled_out_form.js	(revision 032769261f0059511f30d0e6636a9397f5afa0ad)
+++ b/views/js/client.functions/handle_ajax_save_filled_out_form.js	(date 1700339284000)
@@ -21,7 +21,13 @@
 
 
 function saveFilledOutForm(){
-    var formBody = document.getElementById('theContainerOfTheForm').innerHTML;
+    var inputFieldValuesJSON = iterateAndGetData();
+    //var formBody = document.getElementById('theContainerOfTheForm').innerHTML;
+    var formBody = document.getElementById('form-content');
+
+    formBody = elementToJson(formBody,inputFieldValuesJSON);
+    getNewKeyID(formBody);
+
 
     const data = {
         formContent: formBody
